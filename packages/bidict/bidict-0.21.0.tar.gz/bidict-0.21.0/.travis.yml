# TODO: switch to appveyor for all CI now that windows, linux, and mac (with python) are available?
# https://www.appveyor.com/docs/build-environment/
# https://www.appveyor.com/docs/macos-images-software/
# etc.

language: 'python'

# Default version used for jobs that don't override it.
python: '3.8'

# TODO: Update to 'bionic' once all the Python versions we test with are available for it.
dist: 'xenial'


# https://docs.travis-ci.com/user/customizing-the-build/
# "Without the top-level env, no job will be allowed to fail."
env:
  global:
    - 'INSTALL_EXTRAS=test'
    # Tweak Hypothesis params so tests pass reliably since Travis workers are slow.
    - 'HYPOTHESIS_MAX_EXAMPLES=100'  # See tests/conftest.py
    - 'HYPOTHESIS_DEADLINE=300'
    - 'HYPOTHESIS_GEN_MAX_SIZE=16'   # See tests/properties/_strategies.py


before_install:  # Ensure we have the required versions of Python and Pip.
  - 'echo "TRAVIS_PULL_REQUEST_SHA: $TRAVIS_PULL_REQUEST_SHA"'
  - 'echo "TRAVIS_COMMIT: $TRAVIS_COMMIT"'
  - 'git --no-pager log -n2'
  - 'pwd'
  - 'ls -la'
  - 'ls -la .hypothesis'
  - 'ls -la ~/.cache'
  # Travis does a shallow (--depth=50) clone by default.
  # Clone the full history as requested by setuptools_scm.
  - 'travis_retry git fetch --unshallow'
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      uname -a
      defaults read loginwindow SystemVersionStampAsString
    fi
  - 'type python3'
  - 'python3 --version'
  - 'echo "Installing latest pip..."'
  - 'travis_retry curl https://bootstrap.pypa.io/get-pip.py | python3'
  - 'pip --version'


install:  # Install our test dependencies.
  - |
    [[ "$COVERAGE" ]] && INSTALL_EXTRAS+=",coverage"
    install_cmd="pip install -U --upgrade-strategy=eager ."
    [[ "$INSTALL_EXTRAS" ]] && install_cmd+="[$INSTALL_EXTRAS]"
    echo "install_cmd: $install_cmd"
    travis_retry $install_cmd


before_script:
  - 'pip list'


script:  # Run the test suite.
  - |
    if [[ "$TRAVIS_EVENT_TYPE" == "cron" ]]; then
      export PYTEST_ADDOPTS="${PYTEST_ADDOPTS} --hypothesis-show-statistics"
      export HYPOTHESIS_MAX_EXAMPLES="150"
      export HYPOTHESIS_GEN_MAX_SIZE="32"
      export HYPOTHESIS_DEADLINE="500"
    fi
    # Without this, pypy3 with coverage on Travis is too slow to pass reliably.
    if [[ "$TASK" == "test-linux-pypy3" ]]; then
      export HYPOTHESIS_MAX_EXAMPLES="50"
      export HYPOTHESIS_GEN_MAX_SIZE="5"
    fi
    if [[ "$COVERAGE" ]]; then
      export PYTEST_ADDOPTS="${PYTEST_ADDOPTS} --cov=bidict --cov-config=.coveragerc"
    fi
    python3 ./run_tests.py


after_script:
  - |
    if [[ "$COVERAGE" ]]; then
      echo "Installing codecov..."
      travis_retry pip install codecov || exit 1
      echo
      echo "Uploading coverage report to codecov..."
      travis_retry codecov
    fi


matrix:
  allow_failures:
    - env: 'TASK=docs-linkcheck INSTALL_EXTRAS=docs'
  ## fast_finish causes Travis to send a useless daily "build pending" email; not worth the noise.
  # fast_finish: true
  include:
    # Each job below performs a single task. Setting a per-job "TASK" env var
    # causes Travis to clearly show each job's task in the web UI.

    # "test*" tasks run the test suite with various Python versions.

    # Travis runs jobs in the order defined below -> order jobs by priority.

    ## Test suite on Linux with latest CPython and PyPy 2 and 3 -> enable coverage.
    - python: '3.8'
      env: 'TASK=test-linux-cpython-3.8 COVERAGE=1'

    - python: 'pypy3'
      env: 'TASK=test-linux-pypy3 COVERAGE=1'

    ## Make sure there are no relied-on side effects in assert statements.
    - env: 'TASK=test-with-optimization-flag'
      before_install: 'skip'
      install: 'skip'
      script: 'python3 -O -m doctest -o IGNORE_EXCEPTION_DETAIL -o ELLIPSIS tests/*.txt'

    ## Run pre-commit hooks for linting, static analysis, code style, etc.
    - env: 'TASK=precommit-hooks INSTALL_EXTRAS=precommit'
      before_script: 'pre-commit install --install-hooks'
      script: 'pre-commit run --all-files'

    ## Misc.
    - env: 'TASK=docs-build INSTALL_EXTRAS=docs'
      before_install: 'skip'
      script: '(cd docs && make html)'

    - env: 'TASK=docs-linkcheck INSTALL_EXTRAS=docs'
      before_install: 'skip'
      script: '(cd docs && make linkcheck)'

    ## Remaining CPython versions on Linux.
    - python: '3.7'
      env: 'TASK=test-linux-cpython-3.7'

    - python: '3.6'
      env: 'TASK=test-linux-cpython-3.6'

    ## Test suite on Mac with latest system Python 3 available in Travis's Mac image.
    ## Must set `language: generic` for this to work (otherwise Travis attempts to download
    ## a non-system Python version which fails with a 404). Setting `python: '3.7'` below
    ## actually has no effect (the Python version comes from the system Python) other than
    ## to show the right version in the Travis web UI (must keep up-to-date manually).
    - os: 'osx'
      language: 'generic'
      python: '3.7'
      env: 'TASK=test-mac-cpython-3.7'

    ## Try Travis's new Windows support once it supports Python?
    ### - env: 'TASK=test-windows-cpython-3.x'
    ###   os: 'windows'

deploy:
  - provider: 'pypi'
    user: 'jab'
    password:
      secure: 'B9LLgXkTbtjeC/IbH4wh9PEBzvKEAuYo3EBNW5f1xuLqVqtsysIyxJa5ar/FQ4qwUCBwZPFAXFurN3lLzRhb2Tc04YQ0GYVv6f8lkzwrjoWau4iB9Qt/nnvdRa7KryEJvtenHCAnwoEUaADCjkZjwo6fIA0hEOLB6/AYfhfgXYA='
    skip_existing: true
    on:
      tags: true
      # TODO: Presumably this deploys all tags to PyPI, not just release tags.
      # Use https://docs.travis-ci.com/user/deployment#conditional-releases-with-on
      # to only deploy when the tag name matchs vX.Y.Z.
    distributions: 'sdist bdist_wheel'


before_cache:
  - 'rm -rf "$HOME"/.cache/pip/log'


cache:
  directories:
    - '"$HOME"/.cache/pip'
    - '.hypothesis'


notifications:
  webhooks:
    urls:
      - 'https://webhooks.gitter.im/e/bf64fb45a633c0935b9b'
  email:
    recipients: 'jab@math.brown.edu'
