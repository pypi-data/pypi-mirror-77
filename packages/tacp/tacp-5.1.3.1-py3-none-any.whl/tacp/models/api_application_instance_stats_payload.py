#   Copyright (c) 2020 Lenovo.  All rights reserved.

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.


"""
    CP Web Services (CPWS)

    CP web services provides API access to the ThinkAgile CP on-premises cloud platform. It provides access to virtual datacenter and infrastructure resources and is used to create resizable resources, manage workloads and retrieve information about the underlying infrastructure. CPWS will continue to grow as new capabilities are added to the platform.  # noqa: E501

    OpenAPI spec version: Beta
    Contact: lenovo-email
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six


class ApiApplicationInstanceStatsPayload(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'all_disks_io_queue_depth': 'int',
        'all_disks_iops_read': 'int',
        'all_disks_iops_write': 'int',
        'all_disks_storage_bandwidth_read_bytes_per_second': 'int',
        'all_disks_storage_bandwidth_write_bytes_per_second': 'int',
        'all_disks_storage_instance_bytes': 'int',
        'all_disks_storage_utilization_bytes': 'int',
        'cpu_utilization': 'float',
        'memory_utilization_bytes': 'int',
        'network_bandwidth_read_bytes_per_second': 'int',
        'network_bandwidth_write_bytes_per_second': 'int',
        'timestamp': 'datetime',
        'vcpu_utilization': 'float'
    }

    attribute_map = {
        'all_disks_io_queue_depth': 'allDisksIoQueueDepth',
        'all_disks_iops_read': 'allDisksIopsRead',
        'all_disks_iops_write': 'allDisksIopsWrite',
        'all_disks_storage_bandwidth_read_bytes_per_second': 'allDisksStorageBandwidthReadBytesPerSecond',
        'all_disks_storage_bandwidth_write_bytes_per_second': 'allDisksStorageBandwidthWriteBytesPerSecond',
        'all_disks_storage_instance_bytes': 'allDisksStorageInstanceBytes',
        'all_disks_storage_utilization_bytes': 'allDisksStorageUtilizationBytes',
        'cpu_utilization': 'cpuUtilization',
        'memory_utilization_bytes': 'memoryUtilizationBytes',
        'network_bandwidth_read_bytes_per_second': 'networkBandwidthReadBytesPerSecond',
        'network_bandwidth_write_bytes_per_second': 'networkBandwidthWriteBytesPerSecond',
        'timestamp': 'timestamp',
        'vcpu_utilization': 'vcpuUtilization'
    }

    def __init__(self, all_disks_io_queue_depth=None, all_disks_iops_read=None, all_disks_iops_write=None, all_disks_storage_bandwidth_read_bytes_per_second=None, all_disks_storage_bandwidth_write_bytes_per_second=None, all_disks_storage_instance_bytes=None, all_disks_storage_utilization_bytes=None, cpu_utilization=None, memory_utilization_bytes=None, network_bandwidth_read_bytes_per_second=None, network_bandwidth_write_bytes_per_second=None, timestamp=None, vcpu_utilization=None):  # noqa: E501
        """ApiApplicationInstanceStatsPayload - a model defined in Swagger"""  # noqa: E501
        self._all_disks_io_queue_depth = None
        self._all_disks_iops_read = None
        self._all_disks_iops_write = None
        self._all_disks_storage_bandwidth_read_bytes_per_second = None
        self._all_disks_storage_bandwidth_write_bytes_per_second = None
        self._all_disks_storage_instance_bytes = None
        self._all_disks_storage_utilization_bytes = None
        self._cpu_utilization = None
        self._memory_utilization_bytes = None
        self._network_bandwidth_read_bytes_per_second = None
        self._network_bandwidth_write_bytes_per_second = None
        self._timestamp = None
        self._vcpu_utilization = None
        self.discriminator = None
        if all_disks_io_queue_depth is not None:
            self.all_disks_io_queue_depth = all_disks_io_queue_depth
        if all_disks_iops_read is not None:
            self.all_disks_iops_read = all_disks_iops_read
        if all_disks_iops_write is not None:
            self.all_disks_iops_write = all_disks_iops_write
        if all_disks_storage_bandwidth_read_bytes_per_second is not None:
            self.all_disks_storage_bandwidth_read_bytes_per_second = all_disks_storage_bandwidth_read_bytes_per_second
        if all_disks_storage_bandwidth_write_bytes_per_second is not None:
            self.all_disks_storage_bandwidth_write_bytes_per_second = all_disks_storage_bandwidth_write_bytes_per_second
        if all_disks_storage_instance_bytes is not None:
            self.all_disks_storage_instance_bytes = all_disks_storage_instance_bytes
        if all_disks_storage_utilization_bytes is not None:
            self.all_disks_storage_utilization_bytes = all_disks_storage_utilization_bytes
        if cpu_utilization is not None:
            self.cpu_utilization = cpu_utilization
        if memory_utilization_bytes is not None:
            self.memory_utilization_bytes = memory_utilization_bytes
        if network_bandwidth_read_bytes_per_second is not None:
            self.network_bandwidth_read_bytes_per_second = network_bandwidth_read_bytes_per_second
        if network_bandwidth_write_bytes_per_second is not None:
            self.network_bandwidth_write_bytes_per_second = network_bandwidth_write_bytes_per_second
        if timestamp is not None:
            self.timestamp = timestamp
        if vcpu_utilization is not None:
            self.vcpu_utilization = vcpu_utilization

    @property
    def all_disks_io_queue_depth(self):
        """Gets the all_disks_io_queue_depth of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_io_queue_depth of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_io_queue_depth

    @all_disks_io_queue_depth.setter
    def all_disks_io_queue_depth(self, all_disks_io_queue_depth):
        """Sets the all_disks_io_queue_depth of this ApiApplicationInstanceStatsPayload.


        :param all_disks_io_queue_depth: The all_disks_io_queue_depth of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_io_queue_depth = all_disks_io_queue_depth

    @property
    def all_disks_iops_read(self):
        """Gets the all_disks_iops_read of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_iops_read of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_iops_read

    @all_disks_iops_read.setter
    def all_disks_iops_read(self, all_disks_iops_read):
        """Sets the all_disks_iops_read of this ApiApplicationInstanceStatsPayload.


        :param all_disks_iops_read: The all_disks_iops_read of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_iops_read = all_disks_iops_read

    @property
    def all_disks_iops_write(self):
        """Gets the all_disks_iops_write of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_iops_write of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_iops_write

    @all_disks_iops_write.setter
    def all_disks_iops_write(self, all_disks_iops_write):
        """Sets the all_disks_iops_write of this ApiApplicationInstanceStatsPayload.


        :param all_disks_iops_write: The all_disks_iops_write of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_iops_write = all_disks_iops_write

    @property
    def all_disks_storage_bandwidth_read_bytes_per_second(self):
        """Gets the all_disks_storage_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_storage_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_storage_bandwidth_read_bytes_per_second

    @all_disks_storage_bandwidth_read_bytes_per_second.setter
    def all_disks_storage_bandwidth_read_bytes_per_second(self, all_disks_storage_bandwidth_read_bytes_per_second):
        """Sets the all_disks_storage_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.


        :param all_disks_storage_bandwidth_read_bytes_per_second: The all_disks_storage_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_storage_bandwidth_read_bytes_per_second = all_disks_storage_bandwidth_read_bytes_per_second

    @property
    def all_disks_storage_bandwidth_write_bytes_per_second(self):
        """Gets the all_disks_storage_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_storage_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_storage_bandwidth_write_bytes_per_second

    @all_disks_storage_bandwidth_write_bytes_per_second.setter
    def all_disks_storage_bandwidth_write_bytes_per_second(self, all_disks_storage_bandwidth_write_bytes_per_second):
        """Sets the all_disks_storage_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.


        :param all_disks_storage_bandwidth_write_bytes_per_second: The all_disks_storage_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_storage_bandwidth_write_bytes_per_second = all_disks_storage_bandwidth_write_bytes_per_second

    @property
    def all_disks_storage_instance_bytes(self):
        """Gets the all_disks_storage_instance_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_storage_instance_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_storage_instance_bytes

    @all_disks_storage_instance_bytes.setter
    def all_disks_storage_instance_bytes(self, all_disks_storage_instance_bytes):
        """Sets the all_disks_storage_instance_bytes of this ApiApplicationInstanceStatsPayload.


        :param all_disks_storage_instance_bytes: The all_disks_storage_instance_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_storage_instance_bytes = all_disks_storage_instance_bytes

    @property
    def all_disks_storage_utilization_bytes(self):
        """Gets the all_disks_storage_utilization_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The all_disks_storage_utilization_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._all_disks_storage_utilization_bytes

    @all_disks_storage_utilization_bytes.setter
    def all_disks_storage_utilization_bytes(self, all_disks_storage_utilization_bytes):
        """Sets the all_disks_storage_utilization_bytes of this ApiApplicationInstanceStatsPayload.


        :param all_disks_storage_utilization_bytes: The all_disks_storage_utilization_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._all_disks_storage_utilization_bytes = all_disks_storage_utilization_bytes

    @property
    def cpu_utilization(self):
        """Gets the cpu_utilization of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The cpu_utilization of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: float
        """
        return self._cpu_utilization

    @cpu_utilization.setter
    def cpu_utilization(self, cpu_utilization):
        """Sets the cpu_utilization of this ApiApplicationInstanceStatsPayload.


        :param cpu_utilization: The cpu_utilization of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: float
        """

        self._cpu_utilization = cpu_utilization

    @property
    def memory_utilization_bytes(self):
        """Gets the memory_utilization_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The memory_utilization_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._memory_utilization_bytes

    @memory_utilization_bytes.setter
    def memory_utilization_bytes(self, memory_utilization_bytes):
        """Sets the memory_utilization_bytes of this ApiApplicationInstanceStatsPayload.


        :param memory_utilization_bytes: The memory_utilization_bytes of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._memory_utilization_bytes = memory_utilization_bytes

    @property
    def network_bandwidth_read_bytes_per_second(self):
        """Gets the network_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The network_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._network_bandwidth_read_bytes_per_second

    @network_bandwidth_read_bytes_per_second.setter
    def network_bandwidth_read_bytes_per_second(self, network_bandwidth_read_bytes_per_second):
        """Sets the network_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.


        :param network_bandwidth_read_bytes_per_second: The network_bandwidth_read_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._network_bandwidth_read_bytes_per_second = network_bandwidth_read_bytes_per_second

    @property
    def network_bandwidth_write_bytes_per_second(self):
        """Gets the network_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The network_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: int
        """
        return self._network_bandwidth_write_bytes_per_second

    @network_bandwidth_write_bytes_per_second.setter
    def network_bandwidth_write_bytes_per_second(self, network_bandwidth_write_bytes_per_second):
        """Sets the network_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.


        :param network_bandwidth_write_bytes_per_second: The network_bandwidth_write_bytes_per_second of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: int
        """

        self._network_bandwidth_write_bytes_per_second = network_bandwidth_write_bytes_per_second

    @property
    def timestamp(self):
        """Gets the timestamp of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The timestamp of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: datetime
        """
        return self._timestamp

    @timestamp.setter
    def timestamp(self, timestamp):
        """Sets the timestamp of this ApiApplicationInstanceStatsPayload.


        :param timestamp: The timestamp of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: datetime
        """

        self._timestamp = timestamp

    @property
    def vcpu_utilization(self):
        """Gets the vcpu_utilization of this ApiApplicationInstanceStatsPayload.  # noqa: E501


        :return: The vcpu_utilization of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :rtype: float
        """
        return self._vcpu_utilization

    @vcpu_utilization.setter
    def vcpu_utilization(self, vcpu_utilization):
        """Sets the vcpu_utilization of this ApiApplicationInstanceStatsPayload.


        :param vcpu_utilization: The vcpu_utilization of this ApiApplicationInstanceStatsPayload.  # noqa: E501
        :type: float
        """

        self._vcpu_utilization = vcpu_utilization

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(ApiApplicationInstanceStatsPayload, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ApiApplicationInstanceStatsPayload):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
