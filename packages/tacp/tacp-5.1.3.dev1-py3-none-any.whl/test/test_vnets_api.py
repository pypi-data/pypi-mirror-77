#   Copyright (c) 2020 Lenovo.  All rights reserved.

#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at

#       http://www.apache.org/licenses/LICENSE-2.0

#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.


"""
    CP Web Services (CPWS)

    CP web services provides API access to the ThinkAgile CP on-premises cloud platform. It provides access to virtual datacenter and infrastructure resources and is used to create resizable resources, manage workloads and retrieve information about the underlying infrastructure. CPWS will continue to grow as new capabilities are added to the platform.  # noqa: E501

    OpenAPI spec version: Beta
    Contact: lenovo-email
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

from __future__ import absolute_import

import unittest

import tacp
from api.vnets_api import VnetsApi  # noqa: E501
from tacp.rest import ApiException


class TestVnetsApi(unittest.TestCase):
    """VnetsApi unit test stubs"""

    def setUp(self):
        self.api = api.vnets_api.VnetsApi()  # noqa: E501

    def tearDown(self):
        pass

    def test_create_vnet_using_post(self):
        """Test case for create_vnet_using_post

        Create a VNET  # noqa: E501
        """
        pass

    def test_delete_vnet_using_delete(self):
        """Test case for delete_vnet_using_delete

        Delete a VNET  # noqa: E501
        """
        pass

    def test_deploy_nfv_instance_to_vnet_using_put(self):
        """Test case for deploy_nfv_instance_to_vnet_using_put

        Deploy a NFV instance to a VNET  # noqa: E501
        """
        pass

    def test_edit_vnet_firewall_profile_using_put(self):
        """Test case for edit_vnet_firewall_profile_using_put

        Update firewall profile for a VNET  # noqa: E501
        """
        pass

    def test_edit_vnet_properties_using_put(self):
        """Test case for edit_vnet_properties_using_put

        Update basic properties for a VNET  # noqa: E501
        """
        pass

    def test_edit_vnet_routing_service_using_put(self):
        """Test case for edit_vnet_routing_service_using_put

        Update routing service for a VNET  # noqa: E501
        """
        pass

    def test_get_firewall_profile_for_vnet_using_get(self):
        """Test case for get_firewall_profile_for_vnet_using_get

        View a firewall profile for a VNET  # noqa: E501
        """
        pass

    def test_get_vnet_using_get(self):
        """Test case for get_vnet_using_get

        View the properties for a VNET  # noqa: E501
        """
        pass

    def test_get_vnets_using_get(self):
        """Test case for get_vnets_using_get

        View VNETs for an organization  # noqa: E501
        """
        pass

    def test_link_nfv_instance_to_vnet_using_put(self):
        """Test case for link_nfv_instance_to_vnet_using_put

        Link a NFV instance to a VNET  # noqa: E501
        """
        pass

    def test_remove_nfv_instance_from_vnet_using_put(self):
        """Test case for remove_nfv_instance_from_vnet_using_put

        Remove a NFV instance from a VNET  # noqa: E501
        """
        pass

    def test_rename_vnet_using_put(self):
        """Test case for rename_vnet_using_put

        Rename a VNET  # noqa: E501
        """
        pass

    def test_unlink_nfv_instance_from_vnet_using_put(self):
        """Test case for unlink_nfv_instance_from_vnet_using_put

        Unlink a NFV instance from a VNET  # noqa: E501
        """
        pass


if __name__ == '__main__':
    unittest.main()
