# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: session/Answer.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from grakn_protocol.session import Concept_pb2 as session_dot_Concept__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='session/Answer.proto',
  package='session',
  syntax='proto3',
  serialized_options=_b('\n\026grakn.protocol.sessionB\013AnswerProto'),
  serialized_pb=_b('\n\x14session/Answer.proto\x12\x07session\x1a\x15session/Concept.proto\"\x8d\x03\n\x06\x41nswer\x12\x38\n\x0b\x61nswerGroup\x18\x01 \x01(\x0b\x32\x14.session.AnswerGroupH\x00R\x0b\x61nswerGroup\x12\x35\n\nconceptMap\x18\x02 \x01(\x0b\x32\x13.session.ConceptMapH\x00R\nconceptMap\x12\x38\n\x0b\x63onceptList\x18\x03 \x01(\x0b\x32\x14.session.ConceptListH\x00R\x0b\x63onceptList\x12\x35\n\nconceptSet\x18\x04 \x01(\x0b\x32\x13.session.ConceptSetH\x00R\nconceptSet\x12J\n\x11\x63onceptSetMeasure\x18\x05 \x01(\x0b\x32\x1a.session.ConceptSetMeasureH\x00R\x11\x63onceptSetMeasure\x12&\n\x05value\x18\x06 \x01(\x0b\x32\x0e.session.ValueH\x00R\x05value\x12#\n\x04void\x18\x07 \x01(\x0b\x32\r.session.VoidH\x00R\x04voidB\x08\n\x06\x61nswer\"\xaf\x01\n\x0b\x45xplanation\x1a<\n\x03Req\x12\x35\n\x0b\x65xplainable\x18\x01 \x01(\x0b\x32\x13.session.ConceptMapR\x0b\x65xplainable\x1a\x62\n\x03Res\x12\x35\n\x0b\x65xplanation\x18\x01 \x03(\x0b\x32\x13.session.ConceptMapR\x0b\x65xplanation\x12$\n\x04rule\x18\x02 \x01(\x0b\x32\x10.session.ConceptR\x04rule\"`\n\x0b\x41nswerGroup\x12&\n\x05owner\x18\x01 \x01(\x0b\x32\x10.session.ConceptR\x05owner\x12)\n\x07\x61nswers\x18\x02 \x03(\x0b\x32\x0f.session.AnswerR\x07\x61nswers\"\xc8\x01\n\nConceptMap\x12.\n\x03map\x18\x01 \x03(\x0b\x32\x1c.session.ConceptMap.MapEntryR\x03map\x12\x18\n\x07pattern\x18\x02 \x01(\tR\x07pattern\x12&\n\x0ehasExplanation\x18\x03 \x01(\x08R\x0ehasExplanation\x1aH\n\x08MapEntry\x12\x10\n\x03key\x18\x01 \x01(\tR\x03key\x12&\n\x05value\x18\x02 \x01(\x0b\x32\x10.session.ConceptR\x05value:\x02\x38\x01\"6\n\x0b\x43onceptList\x12\'\n\x04list\x18\x01 \x01(\x0b\x32\x13.session.ConceptIdsR\x04list\"3\n\nConceptSet\x12%\n\x03set\x18\x01 \x01(\x0b\x32\x13.session.ConceptIdsR\x03set\"m\n\x11\x43onceptSetMeasure\x12%\n\x03set\x18\x01 \x01(\x0b\x32\x13.session.ConceptIdsR\x03set\x12\x31\n\x0bmeasurement\x18\x02 \x01(\x0b\x32\x0f.session.NumberR\x0bmeasurement\"0\n\x05Value\x12\'\n\x06number\x18\x01 \x01(\x0b\x32\x0f.session.NumberR\x06number\" \n\x04Void\x12\x18\n\x07message\x18\x01 \x01(\tR\x07message\"\x1e\n\nConceptIds\x12\x10\n\x03ids\x18\x01 \x03(\tR\x03ids\"\x1e\n\x06Number\x12\x14\n\x05value\x18\x01 \x01(\tR\x05valueB%\n\x16grakn.protocol.sessionB\x0b\x41nswerProtob\x06proto3')
  ,
  dependencies=[session_dot_Concept__pb2.DESCRIPTOR,])




_ANSWER = _descriptor.Descriptor(
  name='Answer',
  full_name='session.Answer',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='answerGroup', full_name='session.Answer.answerGroup', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='answerGroup', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conceptMap', full_name='session.Answer.conceptMap', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='conceptMap', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conceptList', full_name='session.Answer.conceptList', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='conceptList', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conceptSet', full_name='session.Answer.conceptSet', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='conceptSet', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conceptSetMeasure', full_name='session.Answer.conceptSetMeasure', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='conceptSetMeasure', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='session.Answer.value', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='void', full_name='session.Answer.void', index=6,
      number=7, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='void', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='answer', full_name='session.Answer.answer',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=57,
  serialized_end=454,
)


_EXPLANATION_REQ = _descriptor.Descriptor(
  name='Req',
  full_name='session.Explanation.Req',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='explainable', full_name='session.Explanation.Req.explainable', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='explainable', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=472,
  serialized_end=532,
)

_EXPLANATION_RES = _descriptor.Descriptor(
  name='Res',
  full_name='session.Explanation.Res',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='explanation', full_name='session.Explanation.Res.explanation', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='explanation', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rule', full_name='session.Explanation.Res.rule', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='rule', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=534,
  serialized_end=632,
)

_EXPLANATION = _descriptor.Descriptor(
  name='Explanation',
  full_name='session.Explanation',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[_EXPLANATION_REQ, _EXPLANATION_RES, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=457,
  serialized_end=632,
)


_ANSWERGROUP = _descriptor.Descriptor(
  name='AnswerGroup',
  full_name='session.AnswerGroup',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='owner', full_name='session.AnswerGroup.owner', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='owner', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='answers', full_name='session.AnswerGroup.answers', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='answers', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=634,
  serialized_end=730,
)


_CONCEPTMAP_MAPENTRY = _descriptor.Descriptor(
  name='MapEntry',
  full_name='session.ConceptMap.MapEntry',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='key', full_name='session.ConceptMap.MapEntry.key', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='key', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='value', full_name='session.ConceptMap.MapEntry.value', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=_b('8\001'),
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=861,
  serialized_end=933,
)

_CONCEPTMAP = _descriptor.Descriptor(
  name='ConceptMap',
  full_name='session.ConceptMap',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='map', full_name='session.ConceptMap.map', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='map', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='pattern', full_name='session.ConceptMap.pattern', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='pattern', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hasExplanation', full_name='session.ConceptMap.hasExplanation', index=2,
      number=3, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='hasExplanation', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CONCEPTMAP_MAPENTRY, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=733,
  serialized_end=933,
)


_CONCEPTLIST = _descriptor.Descriptor(
  name='ConceptList',
  full_name='session.ConceptList',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='list', full_name='session.ConceptList.list', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='list', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=935,
  serialized_end=989,
)


_CONCEPTSET = _descriptor.Descriptor(
  name='ConceptSet',
  full_name='session.ConceptSet',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='set', full_name='session.ConceptSet.set', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='set', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=991,
  serialized_end=1042,
)


_CONCEPTSETMEASURE = _descriptor.Descriptor(
  name='ConceptSetMeasure',
  full_name='session.ConceptSetMeasure',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='set', full_name='session.ConceptSetMeasure.set', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='set', file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='measurement', full_name='session.ConceptSetMeasure.measurement', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='measurement', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1044,
  serialized_end=1153,
)


_VALUE = _descriptor.Descriptor(
  name='Value',
  full_name='session.Value',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='number', full_name='session.Value.number', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='number', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1155,
  serialized_end=1203,
)


_VOID = _descriptor.Descriptor(
  name='Void',
  full_name='session.Void',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='message', full_name='session.Void.message', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='message', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1205,
  serialized_end=1237,
)


_CONCEPTIDS = _descriptor.Descriptor(
  name='ConceptIds',
  full_name='session.ConceptIds',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ids', full_name='session.ConceptIds.ids', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='ids', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1239,
  serialized_end=1269,
)


_NUMBER = _descriptor.Descriptor(
  name='Number',
  full_name='session.Number',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='value', full_name='session.Number.value', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, json_name='value', file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1271,
  serialized_end=1301,
)

_ANSWER.fields_by_name['answerGroup'].message_type = _ANSWERGROUP
_ANSWER.fields_by_name['conceptMap'].message_type = _CONCEPTMAP
_ANSWER.fields_by_name['conceptList'].message_type = _CONCEPTLIST
_ANSWER.fields_by_name['conceptSet'].message_type = _CONCEPTSET
_ANSWER.fields_by_name['conceptSetMeasure'].message_type = _CONCEPTSETMEASURE
_ANSWER.fields_by_name['value'].message_type = _VALUE
_ANSWER.fields_by_name['void'].message_type = _VOID
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['answerGroup'])
_ANSWER.fields_by_name['answerGroup'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['conceptMap'])
_ANSWER.fields_by_name['conceptMap'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['conceptList'])
_ANSWER.fields_by_name['conceptList'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['conceptSet'])
_ANSWER.fields_by_name['conceptSet'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['conceptSetMeasure'])
_ANSWER.fields_by_name['conceptSetMeasure'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['value'])
_ANSWER.fields_by_name['value'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_ANSWER.oneofs_by_name['answer'].fields.append(
  _ANSWER.fields_by_name['void'])
_ANSWER.fields_by_name['void'].containing_oneof = _ANSWER.oneofs_by_name['answer']
_EXPLANATION_REQ.fields_by_name['explainable'].message_type = _CONCEPTMAP
_EXPLANATION_REQ.containing_type = _EXPLANATION
_EXPLANATION_RES.fields_by_name['explanation'].message_type = _CONCEPTMAP
_EXPLANATION_RES.fields_by_name['rule'].message_type = session_dot_Concept__pb2._CONCEPT
_EXPLANATION_RES.containing_type = _EXPLANATION
_ANSWERGROUP.fields_by_name['owner'].message_type = session_dot_Concept__pb2._CONCEPT
_ANSWERGROUP.fields_by_name['answers'].message_type = _ANSWER
_CONCEPTMAP_MAPENTRY.fields_by_name['value'].message_type = session_dot_Concept__pb2._CONCEPT
_CONCEPTMAP_MAPENTRY.containing_type = _CONCEPTMAP
_CONCEPTMAP.fields_by_name['map'].message_type = _CONCEPTMAP_MAPENTRY
_CONCEPTLIST.fields_by_name['list'].message_type = _CONCEPTIDS
_CONCEPTSET.fields_by_name['set'].message_type = _CONCEPTIDS
_CONCEPTSETMEASURE.fields_by_name['set'].message_type = _CONCEPTIDS
_CONCEPTSETMEASURE.fields_by_name['measurement'].message_type = _NUMBER
_VALUE.fields_by_name['number'].message_type = _NUMBER
DESCRIPTOR.message_types_by_name['Answer'] = _ANSWER
DESCRIPTOR.message_types_by_name['Explanation'] = _EXPLANATION
DESCRIPTOR.message_types_by_name['AnswerGroup'] = _ANSWERGROUP
DESCRIPTOR.message_types_by_name['ConceptMap'] = _CONCEPTMAP
DESCRIPTOR.message_types_by_name['ConceptList'] = _CONCEPTLIST
DESCRIPTOR.message_types_by_name['ConceptSet'] = _CONCEPTSET
DESCRIPTOR.message_types_by_name['ConceptSetMeasure'] = _CONCEPTSETMEASURE
DESCRIPTOR.message_types_by_name['Value'] = _VALUE
DESCRIPTOR.message_types_by_name['Void'] = _VOID
DESCRIPTOR.message_types_by_name['ConceptIds'] = _CONCEPTIDS
DESCRIPTOR.message_types_by_name['Number'] = _NUMBER
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

Answer = _reflection.GeneratedProtocolMessageType('Answer', (_message.Message,), dict(
  DESCRIPTOR = _ANSWER,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.Answer)
  ))
_sym_db.RegisterMessage(Answer)

Explanation = _reflection.GeneratedProtocolMessageType('Explanation', (_message.Message,), dict(

  Req = _reflection.GeneratedProtocolMessageType('Req', (_message.Message,), dict(
    DESCRIPTOR = _EXPLANATION_REQ,
    __module__ = 'session.Answer_pb2'
    # @@protoc_insertion_point(class_scope:session.Explanation.Req)
    ))
  ,

  Res = _reflection.GeneratedProtocolMessageType('Res', (_message.Message,), dict(
    DESCRIPTOR = _EXPLANATION_RES,
    __module__ = 'session.Answer_pb2'
    # @@protoc_insertion_point(class_scope:session.Explanation.Res)
    ))
  ,
  DESCRIPTOR = _EXPLANATION,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.Explanation)
  ))
_sym_db.RegisterMessage(Explanation)
_sym_db.RegisterMessage(Explanation.Req)
_sym_db.RegisterMessage(Explanation.Res)

AnswerGroup = _reflection.GeneratedProtocolMessageType('AnswerGroup', (_message.Message,), dict(
  DESCRIPTOR = _ANSWERGROUP,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.AnswerGroup)
  ))
_sym_db.RegisterMessage(AnswerGroup)

ConceptMap = _reflection.GeneratedProtocolMessageType('ConceptMap', (_message.Message,), dict(

  MapEntry = _reflection.GeneratedProtocolMessageType('MapEntry', (_message.Message,), dict(
    DESCRIPTOR = _CONCEPTMAP_MAPENTRY,
    __module__ = 'session.Answer_pb2'
    # @@protoc_insertion_point(class_scope:session.ConceptMap.MapEntry)
    ))
  ,
  DESCRIPTOR = _CONCEPTMAP,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.ConceptMap)
  ))
_sym_db.RegisterMessage(ConceptMap)
_sym_db.RegisterMessage(ConceptMap.MapEntry)

ConceptList = _reflection.GeneratedProtocolMessageType('ConceptList', (_message.Message,), dict(
  DESCRIPTOR = _CONCEPTLIST,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.ConceptList)
  ))
_sym_db.RegisterMessage(ConceptList)

ConceptSet = _reflection.GeneratedProtocolMessageType('ConceptSet', (_message.Message,), dict(
  DESCRIPTOR = _CONCEPTSET,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.ConceptSet)
  ))
_sym_db.RegisterMessage(ConceptSet)

ConceptSetMeasure = _reflection.GeneratedProtocolMessageType('ConceptSetMeasure', (_message.Message,), dict(
  DESCRIPTOR = _CONCEPTSETMEASURE,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.ConceptSetMeasure)
  ))
_sym_db.RegisterMessage(ConceptSetMeasure)

Value = _reflection.GeneratedProtocolMessageType('Value', (_message.Message,), dict(
  DESCRIPTOR = _VALUE,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.Value)
  ))
_sym_db.RegisterMessage(Value)

Void = _reflection.GeneratedProtocolMessageType('Void', (_message.Message,), dict(
  DESCRIPTOR = _VOID,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.Void)
  ))
_sym_db.RegisterMessage(Void)

ConceptIds = _reflection.GeneratedProtocolMessageType('ConceptIds', (_message.Message,), dict(
  DESCRIPTOR = _CONCEPTIDS,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.ConceptIds)
  ))
_sym_db.RegisterMessage(ConceptIds)

Number = _reflection.GeneratedProtocolMessageType('Number', (_message.Message,), dict(
  DESCRIPTOR = _NUMBER,
  __module__ = 'session.Answer_pb2'
  # @@protoc_insertion_point(class_scope:session.Number)
  ))
_sym_db.RegisterMessage(Number)


DESCRIPTOR._options = None
_CONCEPTMAP_MAPENTRY._options = None
# @@protoc_insertion_point(module_scope)
