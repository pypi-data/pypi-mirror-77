# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
import grpc

from grakn_protocol.keyspace import Keyspace_pb2 as keyspace_dot_Keyspace__pb2


class KeyspaceServiceStub(object):
  # missing associated documentation comment in .proto file
  pass

  def __init__(self, channel):
    """Constructor.

    Args:
      channel: A grpc.Channel.
    """
    self.retrieve = channel.unary_unary(
        '/keyspace.KeyspaceService/retrieve',
        request_serializer=keyspace_dot_Keyspace__pb2.Keyspace.Retrieve.Req.SerializeToString,
        response_deserializer=keyspace_dot_Keyspace__pb2.Keyspace.Retrieve.Res.FromString,
        )
    self.delete = channel.unary_unary(
        '/keyspace.KeyspaceService/delete',
        request_serializer=keyspace_dot_Keyspace__pb2.Keyspace.Delete.Req.SerializeToString,
        response_deserializer=keyspace_dot_Keyspace__pb2.Keyspace.Delete.Res.FromString,
        )


class KeyspaceServiceServicer(object):
  # missing associated documentation comment in .proto file
  pass

  def retrieve(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')

  def delete(self, request, context):
    # missing associated documentation comment in .proto file
    pass
    context.set_code(grpc.StatusCode.UNIMPLEMENTED)
    context.set_details('Method not implemented!')
    raise NotImplementedError('Method not implemented!')


def add_KeyspaceServiceServicer_to_server(servicer, server):
  rpc_method_handlers = {
      'retrieve': grpc.unary_unary_rpc_method_handler(
          servicer.retrieve,
          request_deserializer=keyspace_dot_Keyspace__pb2.Keyspace.Retrieve.Req.FromString,
          response_serializer=keyspace_dot_Keyspace__pb2.Keyspace.Retrieve.Res.SerializeToString,
      ),
      'delete': grpc.unary_unary_rpc_method_handler(
          servicer.delete,
          request_deserializer=keyspace_dot_Keyspace__pb2.Keyspace.Delete.Req.FromString,
          response_serializer=keyspace_dot_Keyspace__pb2.Keyspace.Delete.Res.SerializeToString,
      ),
  }
  generic_handler = grpc.method_handlers_generic_handler(
      'keyspace.KeyspaceService', rpc_method_handlers)
  server.add_generic_rpc_handlers((generic_handler,))
