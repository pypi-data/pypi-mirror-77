# coding: utf-8

"""
    Component Database API

    The API that provides access to Component Database data.  # noqa: E501

    The version of the OpenAPI document: 3.8.0
    Contact: djarosz@anl.gov
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from cdbApi.configuration import Configuration


class ItemDomainCableCatalog(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'is_valid_import': 'bool',
        'valid_string_import': 'str',
        'id': 'int',
        'name': 'str',
        'item_identifier1': 'str',
        'item_identifier2': 'str',
        'qr_id': 'int',
        'full_item_element_list': 'list[ItemElement]',
        'item_element_member_list': 'list[ItemElement]',
        'item_element_member_list2': 'list[ItemElement]',
        'domain': 'Domain',
        'derived_from_item_list': 'list[Item]',
        'derived_from_item': 'Item',
        'item_connector_list': 'list[ItemConnector]',
        'item_source_list': 'list[ItemSource]',
        'item_resource_list': 'list[ItemResource]',
        'history_member_list': 'list[ItemElementHistory]',
        'history_member_list2': 'list[ItemElementHistory]',
        'item_type_string': 'str',
        'item_category_string': 'str',
        'item_source_string': 'str',
        'item_project_string': 'str',
        'qr_id_display': 'str',
        'qr_id_filter': 'str',
        'item_cable_connections_relationship_list': 'list[ItemElementRelationship]',
        'item_avaliable_connectors_list': 'list[Connector]',
        'entity_type_string': 'str',
        'primary_image_value': 'str',
        'is_cloned': 'bool',
        'item_element_display_list': 'list[ItemElement]',
        'list_display_description': 'str',
        'assembly_root_tree_node': 'TreeNode',
        'available_item_types': 'list[ItemType]',
        'last_known_item_category_list': 'list[ItemCategory]',
        'is_item_template': 'bool',
        'created_from_template': 'Item',
        'items_created_from_this_template_item': 'list[Item]',
        'hierarchy_item_element': 'ItemElement',
        'description_from_api': 'str',
        'part_number': 'str',
        'alternate_name': 'str',
        'manufacturer_id': 'str',
        'manufacturer_source': 'Source',
        'item_element_relationship_list1': 'list[ItemElementRelationship]',
        'self_element': 'ItemElement',
        'item_element_relationship_list': 'list[ItemElementRelationship]',
        'item_element_relationship_list2': 'list[ItemElementRelationship]',
        'log_list': 'list[Log]',
        'item_element_list': 'list[ItemElement]',
        'entity_type_display_list': 'list[EntityType]',
        'edit_entity_type_string': 'str',
        'project': 'ItemProject',
        'edit_item_project_string': 'str',
        'item_element_display_list_empty': 'bool',
        'primary_image_for_item': 'str',
        'description': 'str',
        'is_valid_import_string': 'str',
        'entity_type_list': 'list[EntityType]',
        'item_category_list': 'list[ItemCategory]',
        'item_type_list': 'list[ItemType]',
        'item_project_list': 'list[ItemProject]'
    }

    attribute_map = {
        'is_valid_import': 'isValidImport',
        'valid_string_import': 'validStringImport',
        'id': 'id',
        'name': 'name',
        'item_identifier1': 'itemIdentifier1',
        'item_identifier2': 'itemIdentifier2',
        'qr_id': 'qrId',
        'full_item_element_list': 'fullItemElementList',
        'item_element_member_list': 'itemElementMemberList',
        'item_element_member_list2': 'itemElementMemberList2',
        'domain': 'domain',
        'derived_from_item_list': 'derivedFromItemList',
        'derived_from_item': 'derivedFromItem',
        'item_connector_list': 'itemConnectorList',
        'item_source_list': 'itemSourceList',
        'item_resource_list': 'itemResourceList',
        'history_member_list': 'historyMemberList',
        'history_member_list2': 'historyMemberList2',
        'item_type_string': 'itemTypeString',
        'item_category_string': 'itemCategoryString',
        'item_source_string': 'itemSourceString',
        'item_project_string': 'itemProjectString',
        'qr_id_display': 'qrIdDisplay',
        'qr_id_filter': 'qrIdFilter',
        'item_cable_connections_relationship_list': 'itemCableConnectionsRelationshipList',
        'item_avaliable_connectors_list': 'itemAvaliableConnectorsList',
        'entity_type_string': 'entityTypeString',
        'primary_image_value': 'primaryImageValue',
        'is_cloned': 'isCloned',
        'item_element_display_list': 'itemElementDisplayList',
        'list_display_description': 'listDisplayDescription',
        'assembly_root_tree_node': 'assemblyRootTreeNode',
        'available_item_types': 'availableItemTypes',
        'last_known_item_category_list': 'lastKnownItemCategoryList',
        'is_item_template': 'isItemTemplate',
        'created_from_template': 'createdFromTemplate',
        'items_created_from_this_template_item': 'itemsCreatedFromThisTemplateItem',
        'hierarchy_item_element': 'hierarchyItemElement',
        'description_from_api': 'descriptionFromAPI',
        'part_number': 'partNumber',
        'alternate_name': 'alternateName',
        'manufacturer_id': 'manufacturerId',
        'manufacturer_source': 'manufacturerSource',
        'item_element_relationship_list1': 'itemElementRelationshipList1',
        'self_element': 'selfElement',
        'item_element_relationship_list': 'itemElementRelationshipList',
        'item_element_relationship_list2': 'itemElementRelationshipList2',
        'log_list': 'logList',
        'item_element_list': 'itemElementList',
        'entity_type_display_list': 'entityTypeDisplayList',
        'edit_entity_type_string': 'editEntityTypeString',
        'project': 'project',
        'edit_item_project_string': 'editItemProjectString',
        'item_element_display_list_empty': 'itemElementDisplayListEmpty',
        'primary_image_for_item': 'primaryImageForItem',
        'description': 'description',
        'is_valid_import_string': 'isValidImportString',
        'entity_type_list': 'entityTypeList',
        'item_category_list': 'itemCategoryList',
        'item_type_list': 'itemTypeList',
        'item_project_list': 'itemProjectList'
    }

    def __init__(self, is_valid_import=None, valid_string_import=None, id=None, name=None, item_identifier1=None, item_identifier2=None, qr_id=None, full_item_element_list=None, item_element_member_list=None, item_element_member_list2=None, domain=None, derived_from_item_list=None, derived_from_item=None, item_connector_list=None, item_source_list=None, item_resource_list=None, history_member_list=None, history_member_list2=None, item_type_string=None, item_category_string=None, item_source_string=None, item_project_string=None, qr_id_display=None, qr_id_filter=None, item_cable_connections_relationship_list=None, item_avaliable_connectors_list=None, entity_type_string=None, primary_image_value=None, is_cloned=None, item_element_display_list=None, list_display_description=None, assembly_root_tree_node=None, available_item_types=None, last_known_item_category_list=None, is_item_template=None, created_from_template=None, items_created_from_this_template_item=None, hierarchy_item_element=None, description_from_api=None, part_number=None, alternate_name=None, manufacturer_id=None, manufacturer_source=None, item_element_relationship_list1=None, self_element=None, item_element_relationship_list=None, item_element_relationship_list2=None, log_list=None, item_element_list=None, entity_type_display_list=None, edit_entity_type_string=None, project=None, edit_item_project_string=None, item_element_display_list_empty=None, primary_image_for_item=None, description=None, is_valid_import_string=None, entity_type_list=None, item_category_list=None, item_type_list=None, item_project_list=None, local_vars_configuration=None):  # noqa: E501
        """ItemDomainCableCatalog - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._is_valid_import = None
        self._valid_string_import = None
        self._id = None
        self._name = None
        self._item_identifier1 = None
        self._item_identifier2 = None
        self._qr_id = None
        self._full_item_element_list = None
        self._item_element_member_list = None
        self._item_element_member_list2 = None
        self._domain = None
        self._derived_from_item_list = None
        self._derived_from_item = None
        self._item_connector_list = None
        self._item_source_list = None
        self._item_resource_list = None
        self._history_member_list = None
        self._history_member_list2 = None
        self._item_type_string = None
        self._item_category_string = None
        self._item_source_string = None
        self._item_project_string = None
        self._qr_id_display = None
        self._qr_id_filter = None
        self._item_cable_connections_relationship_list = None
        self._item_avaliable_connectors_list = None
        self._entity_type_string = None
        self._primary_image_value = None
        self._is_cloned = None
        self._item_element_display_list = None
        self._list_display_description = None
        self._assembly_root_tree_node = None
        self._available_item_types = None
        self._last_known_item_category_list = None
        self._is_item_template = None
        self._created_from_template = None
        self._items_created_from_this_template_item = None
        self._hierarchy_item_element = None
        self._description_from_api = None
        self._part_number = None
        self._alternate_name = None
        self._manufacturer_id = None
        self._manufacturer_source = None
        self._item_element_relationship_list1 = None
        self._self_element = None
        self._item_element_relationship_list = None
        self._item_element_relationship_list2 = None
        self._log_list = None
        self._item_element_list = None
        self._entity_type_display_list = None
        self._edit_entity_type_string = None
        self._project = None
        self._edit_item_project_string = None
        self._item_element_display_list_empty = None
        self._primary_image_for_item = None
        self._description = None
        self._is_valid_import_string = None
        self._entity_type_list = None
        self._item_category_list = None
        self._item_type_list = None
        self._item_project_list = None
        self.discriminator = None

        if is_valid_import is not None:
            self.is_valid_import = is_valid_import
        if valid_string_import is not None:
            self.valid_string_import = valid_string_import
        if id is not None:
            self.id = id
        if name is not None:
            self.name = name
        if item_identifier1 is not None:
            self.item_identifier1 = item_identifier1
        if item_identifier2 is not None:
            self.item_identifier2 = item_identifier2
        if qr_id is not None:
            self.qr_id = qr_id
        if full_item_element_list is not None:
            self.full_item_element_list = full_item_element_list
        if item_element_member_list is not None:
            self.item_element_member_list = item_element_member_list
        if item_element_member_list2 is not None:
            self.item_element_member_list2 = item_element_member_list2
        if domain is not None:
            self.domain = domain
        if derived_from_item_list is not None:
            self.derived_from_item_list = derived_from_item_list
        if derived_from_item is not None:
            self.derived_from_item = derived_from_item
        if item_connector_list is not None:
            self.item_connector_list = item_connector_list
        if item_source_list is not None:
            self.item_source_list = item_source_list
        if item_resource_list is not None:
            self.item_resource_list = item_resource_list
        if history_member_list is not None:
            self.history_member_list = history_member_list
        if history_member_list2 is not None:
            self.history_member_list2 = history_member_list2
        if item_type_string is not None:
            self.item_type_string = item_type_string
        if item_category_string is not None:
            self.item_category_string = item_category_string
        if item_source_string is not None:
            self.item_source_string = item_source_string
        if item_project_string is not None:
            self.item_project_string = item_project_string
        if qr_id_display is not None:
            self.qr_id_display = qr_id_display
        if qr_id_filter is not None:
            self.qr_id_filter = qr_id_filter
        if item_cable_connections_relationship_list is not None:
            self.item_cable_connections_relationship_list = item_cable_connections_relationship_list
        if item_avaliable_connectors_list is not None:
            self.item_avaliable_connectors_list = item_avaliable_connectors_list
        if entity_type_string is not None:
            self.entity_type_string = entity_type_string
        if primary_image_value is not None:
            self.primary_image_value = primary_image_value
        if is_cloned is not None:
            self.is_cloned = is_cloned
        if item_element_display_list is not None:
            self.item_element_display_list = item_element_display_list
        if list_display_description is not None:
            self.list_display_description = list_display_description
        if assembly_root_tree_node is not None:
            self.assembly_root_tree_node = assembly_root_tree_node
        if available_item_types is not None:
            self.available_item_types = available_item_types
        if last_known_item_category_list is not None:
            self.last_known_item_category_list = last_known_item_category_list
        if is_item_template is not None:
            self.is_item_template = is_item_template
        if created_from_template is not None:
            self.created_from_template = created_from_template
        if items_created_from_this_template_item is not None:
            self.items_created_from_this_template_item = items_created_from_this_template_item
        if hierarchy_item_element is not None:
            self.hierarchy_item_element = hierarchy_item_element
        if description_from_api is not None:
            self.description_from_api = description_from_api
        if part_number is not None:
            self.part_number = part_number
        if alternate_name is not None:
            self.alternate_name = alternate_name
        if manufacturer_id is not None:
            self.manufacturer_id = manufacturer_id
        if manufacturer_source is not None:
            self.manufacturer_source = manufacturer_source
        if item_element_relationship_list1 is not None:
            self.item_element_relationship_list1 = item_element_relationship_list1
        if self_element is not None:
            self.self_element = self_element
        if item_element_relationship_list is not None:
            self.item_element_relationship_list = item_element_relationship_list
        if item_element_relationship_list2 is not None:
            self.item_element_relationship_list2 = item_element_relationship_list2
        if log_list is not None:
            self.log_list = log_list
        if item_element_list is not None:
            self.item_element_list = item_element_list
        if entity_type_display_list is not None:
            self.entity_type_display_list = entity_type_display_list
        if edit_entity_type_string is not None:
            self.edit_entity_type_string = edit_entity_type_string
        if project is not None:
            self.project = project
        if edit_item_project_string is not None:
            self.edit_item_project_string = edit_item_project_string
        if item_element_display_list_empty is not None:
            self.item_element_display_list_empty = item_element_display_list_empty
        if primary_image_for_item is not None:
            self.primary_image_for_item = primary_image_for_item
        if description is not None:
            self.description = description
        if is_valid_import_string is not None:
            self.is_valid_import_string = is_valid_import_string
        if entity_type_list is not None:
            self.entity_type_list = entity_type_list
        if item_category_list is not None:
            self.item_category_list = item_category_list
        if item_type_list is not None:
            self.item_type_list = item_type_list
        if item_project_list is not None:
            self.item_project_list = item_project_list

    @property
    def is_valid_import(self):
        """Gets the is_valid_import of this ItemDomainCableCatalog.  # noqa: E501


        :return: The is_valid_import of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: bool
        """
        return self._is_valid_import

    @is_valid_import.setter
    def is_valid_import(self, is_valid_import):
        """Sets the is_valid_import of this ItemDomainCableCatalog.


        :param is_valid_import: The is_valid_import of this ItemDomainCableCatalog.  # noqa: E501
        :type: bool
        """

        self._is_valid_import = is_valid_import

    @property
    def valid_string_import(self):
        """Gets the valid_string_import of this ItemDomainCableCatalog.  # noqa: E501


        :return: The valid_string_import of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._valid_string_import

    @valid_string_import.setter
    def valid_string_import(self, valid_string_import):
        """Sets the valid_string_import of this ItemDomainCableCatalog.


        :param valid_string_import: The valid_string_import of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._valid_string_import = valid_string_import

    @property
    def id(self):
        """Gets the id of this ItemDomainCableCatalog.  # noqa: E501


        :return: The id of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: int
        """
        return self._id

    @id.setter
    def id(self, id):
        """Sets the id of this ItemDomainCableCatalog.


        :param id: The id of this ItemDomainCableCatalog.  # noqa: E501
        :type: int
        """

        self._id = id

    @property
    def name(self):
        """Gets the name of this ItemDomainCableCatalog.  # noqa: E501


        :return: The name of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this ItemDomainCableCatalog.


        :param name: The name of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                name is not None and len(name) > 128):
            raise ValueError("Invalid value for `name`, length must be less than or equal to `128`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                name is not None and len(name) < 0):
            raise ValueError("Invalid value for `name`, length must be greater than or equal to `0`")  # noqa: E501

        self._name = name

    @property
    def item_identifier1(self):
        """Gets the item_identifier1 of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_identifier1 of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._item_identifier1

    @item_identifier1.setter
    def item_identifier1(self, item_identifier1):
        """Sets the item_identifier1 of this ItemDomainCableCatalog.


        :param item_identifier1: The item_identifier1 of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                item_identifier1 is not None and len(item_identifier1) > 128):
            raise ValueError("Invalid value for `item_identifier1`, length must be less than or equal to `128`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                item_identifier1 is not None and len(item_identifier1) < 0):
            raise ValueError("Invalid value for `item_identifier1`, length must be greater than or equal to `0`")  # noqa: E501

        self._item_identifier1 = item_identifier1

    @property
    def item_identifier2(self):
        """Gets the item_identifier2 of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_identifier2 of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._item_identifier2

    @item_identifier2.setter
    def item_identifier2(self, item_identifier2):
        """Sets the item_identifier2 of this ItemDomainCableCatalog.


        :param item_identifier2: The item_identifier2 of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                item_identifier2 is not None and len(item_identifier2) > 128):
            raise ValueError("Invalid value for `item_identifier2`, length must be less than or equal to `128`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                item_identifier2 is not None and len(item_identifier2) < 0):
            raise ValueError("Invalid value for `item_identifier2`, length must be greater than or equal to `0`")  # noqa: E501

        self._item_identifier2 = item_identifier2

    @property
    def qr_id(self):
        """Gets the qr_id of this ItemDomainCableCatalog.  # noqa: E501


        :return: The qr_id of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: int
        """
        return self._qr_id

    @qr_id.setter
    def qr_id(self, qr_id):
        """Sets the qr_id of this ItemDomainCableCatalog.


        :param qr_id: The qr_id of this ItemDomainCableCatalog.  # noqa: E501
        :type: int
        """
        if (self.local_vars_configuration.client_side_validation and
                qr_id is not None and qr_id < 0):  # noqa: E501
            raise ValueError("Invalid value for `qr_id`, must be a value greater than or equal to `0`")  # noqa: E501

        self._qr_id = qr_id

    @property
    def full_item_element_list(self):
        """Gets the full_item_element_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The full_item_element_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElement]
        """
        return self._full_item_element_list

    @full_item_element_list.setter
    def full_item_element_list(self, full_item_element_list):
        """Sets the full_item_element_list of this ItemDomainCableCatalog.


        :param full_item_element_list: The full_item_element_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElement]
        """

        self._full_item_element_list = full_item_element_list

    @property
    def item_element_member_list(self):
        """Gets the item_element_member_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_member_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElement]
        """
        return self._item_element_member_list

    @item_element_member_list.setter
    def item_element_member_list(self, item_element_member_list):
        """Sets the item_element_member_list of this ItemDomainCableCatalog.


        :param item_element_member_list: The item_element_member_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElement]
        """

        self._item_element_member_list = item_element_member_list

    @property
    def item_element_member_list2(self):
        """Gets the item_element_member_list2 of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_member_list2 of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElement]
        """
        return self._item_element_member_list2

    @item_element_member_list2.setter
    def item_element_member_list2(self, item_element_member_list2):
        """Sets the item_element_member_list2 of this ItemDomainCableCatalog.


        :param item_element_member_list2: The item_element_member_list2 of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElement]
        """

        self._item_element_member_list2 = item_element_member_list2

    @property
    def domain(self):
        """Gets the domain of this ItemDomainCableCatalog.  # noqa: E501


        :return: The domain of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: Domain
        """
        return self._domain

    @domain.setter
    def domain(self, domain):
        """Sets the domain of this ItemDomainCableCatalog.


        :param domain: The domain of this ItemDomainCableCatalog.  # noqa: E501
        :type: Domain
        """

        self._domain = domain

    @property
    def derived_from_item_list(self):
        """Gets the derived_from_item_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The derived_from_item_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[Item]
        """
        return self._derived_from_item_list

    @derived_from_item_list.setter
    def derived_from_item_list(self, derived_from_item_list):
        """Sets the derived_from_item_list of this ItemDomainCableCatalog.


        :param derived_from_item_list: The derived_from_item_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[Item]
        """

        self._derived_from_item_list = derived_from_item_list

    @property
    def derived_from_item(self):
        """Gets the derived_from_item of this ItemDomainCableCatalog.  # noqa: E501


        :return: The derived_from_item of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: Item
        """
        return self._derived_from_item

    @derived_from_item.setter
    def derived_from_item(self, derived_from_item):
        """Sets the derived_from_item of this ItemDomainCableCatalog.


        :param derived_from_item: The derived_from_item of this ItemDomainCableCatalog.  # noqa: E501
        :type: Item
        """

        self._derived_from_item = derived_from_item

    @property
    def item_connector_list(self):
        """Gets the item_connector_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_connector_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemConnector]
        """
        return self._item_connector_list

    @item_connector_list.setter
    def item_connector_list(self, item_connector_list):
        """Sets the item_connector_list of this ItemDomainCableCatalog.


        :param item_connector_list: The item_connector_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemConnector]
        """

        self._item_connector_list = item_connector_list

    @property
    def item_source_list(self):
        """Gets the item_source_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_source_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemSource]
        """
        return self._item_source_list

    @item_source_list.setter
    def item_source_list(self, item_source_list):
        """Sets the item_source_list of this ItemDomainCableCatalog.


        :param item_source_list: The item_source_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemSource]
        """

        self._item_source_list = item_source_list

    @property
    def item_resource_list(self):
        """Gets the item_resource_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_resource_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemResource]
        """
        return self._item_resource_list

    @item_resource_list.setter
    def item_resource_list(self, item_resource_list):
        """Sets the item_resource_list of this ItemDomainCableCatalog.


        :param item_resource_list: The item_resource_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemResource]
        """

        self._item_resource_list = item_resource_list

    @property
    def history_member_list(self):
        """Gets the history_member_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The history_member_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElementHistory]
        """
        return self._history_member_list

    @history_member_list.setter
    def history_member_list(self, history_member_list):
        """Sets the history_member_list of this ItemDomainCableCatalog.


        :param history_member_list: The history_member_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElementHistory]
        """

        self._history_member_list = history_member_list

    @property
    def history_member_list2(self):
        """Gets the history_member_list2 of this ItemDomainCableCatalog.  # noqa: E501


        :return: The history_member_list2 of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElementHistory]
        """
        return self._history_member_list2

    @history_member_list2.setter
    def history_member_list2(self, history_member_list2):
        """Sets the history_member_list2 of this ItemDomainCableCatalog.


        :param history_member_list2: The history_member_list2 of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElementHistory]
        """

        self._history_member_list2 = history_member_list2

    @property
    def item_type_string(self):
        """Gets the item_type_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_type_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._item_type_string

    @item_type_string.setter
    def item_type_string(self, item_type_string):
        """Sets the item_type_string of this ItemDomainCableCatalog.


        :param item_type_string: The item_type_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._item_type_string = item_type_string

    @property
    def item_category_string(self):
        """Gets the item_category_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_category_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._item_category_string

    @item_category_string.setter
    def item_category_string(self, item_category_string):
        """Sets the item_category_string of this ItemDomainCableCatalog.


        :param item_category_string: The item_category_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._item_category_string = item_category_string

    @property
    def item_source_string(self):
        """Gets the item_source_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_source_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._item_source_string

    @item_source_string.setter
    def item_source_string(self, item_source_string):
        """Sets the item_source_string of this ItemDomainCableCatalog.


        :param item_source_string: The item_source_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._item_source_string = item_source_string

    @property
    def item_project_string(self):
        """Gets the item_project_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_project_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._item_project_string

    @item_project_string.setter
    def item_project_string(self, item_project_string):
        """Sets the item_project_string of this ItemDomainCableCatalog.


        :param item_project_string: The item_project_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._item_project_string = item_project_string

    @property
    def qr_id_display(self):
        """Gets the qr_id_display of this ItemDomainCableCatalog.  # noqa: E501


        :return: The qr_id_display of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._qr_id_display

    @qr_id_display.setter
    def qr_id_display(self, qr_id_display):
        """Sets the qr_id_display of this ItemDomainCableCatalog.


        :param qr_id_display: The qr_id_display of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._qr_id_display = qr_id_display

    @property
    def qr_id_filter(self):
        """Gets the qr_id_filter of this ItemDomainCableCatalog.  # noqa: E501


        :return: The qr_id_filter of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._qr_id_filter

    @qr_id_filter.setter
    def qr_id_filter(self, qr_id_filter):
        """Sets the qr_id_filter of this ItemDomainCableCatalog.


        :param qr_id_filter: The qr_id_filter of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._qr_id_filter = qr_id_filter

    @property
    def item_cable_connections_relationship_list(self):
        """Gets the item_cable_connections_relationship_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_cable_connections_relationship_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElementRelationship]
        """
        return self._item_cable_connections_relationship_list

    @item_cable_connections_relationship_list.setter
    def item_cable_connections_relationship_list(self, item_cable_connections_relationship_list):
        """Sets the item_cable_connections_relationship_list of this ItemDomainCableCatalog.


        :param item_cable_connections_relationship_list: The item_cable_connections_relationship_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElementRelationship]
        """

        self._item_cable_connections_relationship_list = item_cable_connections_relationship_list

    @property
    def item_avaliable_connectors_list(self):
        """Gets the item_avaliable_connectors_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_avaliable_connectors_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[Connector]
        """
        return self._item_avaliable_connectors_list

    @item_avaliable_connectors_list.setter
    def item_avaliable_connectors_list(self, item_avaliable_connectors_list):
        """Sets the item_avaliable_connectors_list of this ItemDomainCableCatalog.


        :param item_avaliable_connectors_list: The item_avaliable_connectors_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[Connector]
        """

        self._item_avaliable_connectors_list = item_avaliable_connectors_list

    @property
    def entity_type_string(self):
        """Gets the entity_type_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The entity_type_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._entity_type_string

    @entity_type_string.setter
    def entity_type_string(self, entity_type_string):
        """Sets the entity_type_string of this ItemDomainCableCatalog.


        :param entity_type_string: The entity_type_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._entity_type_string = entity_type_string

    @property
    def primary_image_value(self):
        """Gets the primary_image_value of this ItemDomainCableCatalog.  # noqa: E501


        :return: The primary_image_value of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._primary_image_value

    @primary_image_value.setter
    def primary_image_value(self, primary_image_value):
        """Sets the primary_image_value of this ItemDomainCableCatalog.


        :param primary_image_value: The primary_image_value of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._primary_image_value = primary_image_value

    @property
    def is_cloned(self):
        """Gets the is_cloned of this ItemDomainCableCatalog.  # noqa: E501


        :return: The is_cloned of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: bool
        """
        return self._is_cloned

    @is_cloned.setter
    def is_cloned(self, is_cloned):
        """Sets the is_cloned of this ItemDomainCableCatalog.


        :param is_cloned: The is_cloned of this ItemDomainCableCatalog.  # noqa: E501
        :type: bool
        """

        self._is_cloned = is_cloned

    @property
    def item_element_display_list(self):
        """Gets the item_element_display_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_display_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElement]
        """
        return self._item_element_display_list

    @item_element_display_list.setter
    def item_element_display_list(self, item_element_display_list):
        """Sets the item_element_display_list of this ItemDomainCableCatalog.


        :param item_element_display_list: The item_element_display_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElement]
        """

        self._item_element_display_list = item_element_display_list

    @property
    def list_display_description(self):
        """Gets the list_display_description of this ItemDomainCableCatalog.  # noqa: E501


        :return: The list_display_description of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._list_display_description

    @list_display_description.setter
    def list_display_description(self, list_display_description):
        """Sets the list_display_description of this ItemDomainCableCatalog.


        :param list_display_description: The list_display_description of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._list_display_description = list_display_description

    @property
    def assembly_root_tree_node(self):
        """Gets the assembly_root_tree_node of this ItemDomainCableCatalog.  # noqa: E501


        :return: The assembly_root_tree_node of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: TreeNode
        """
        return self._assembly_root_tree_node

    @assembly_root_tree_node.setter
    def assembly_root_tree_node(self, assembly_root_tree_node):
        """Sets the assembly_root_tree_node of this ItemDomainCableCatalog.


        :param assembly_root_tree_node: The assembly_root_tree_node of this ItemDomainCableCatalog.  # noqa: E501
        :type: TreeNode
        """

        self._assembly_root_tree_node = assembly_root_tree_node

    @property
    def available_item_types(self):
        """Gets the available_item_types of this ItemDomainCableCatalog.  # noqa: E501


        :return: The available_item_types of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemType]
        """
        return self._available_item_types

    @available_item_types.setter
    def available_item_types(self, available_item_types):
        """Sets the available_item_types of this ItemDomainCableCatalog.


        :param available_item_types: The available_item_types of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemType]
        """

        self._available_item_types = available_item_types

    @property
    def last_known_item_category_list(self):
        """Gets the last_known_item_category_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The last_known_item_category_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemCategory]
        """
        return self._last_known_item_category_list

    @last_known_item_category_list.setter
    def last_known_item_category_list(self, last_known_item_category_list):
        """Sets the last_known_item_category_list of this ItemDomainCableCatalog.


        :param last_known_item_category_list: The last_known_item_category_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemCategory]
        """

        self._last_known_item_category_list = last_known_item_category_list

    @property
    def is_item_template(self):
        """Gets the is_item_template of this ItemDomainCableCatalog.  # noqa: E501


        :return: The is_item_template of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: bool
        """
        return self._is_item_template

    @is_item_template.setter
    def is_item_template(self, is_item_template):
        """Sets the is_item_template of this ItemDomainCableCatalog.


        :param is_item_template: The is_item_template of this ItemDomainCableCatalog.  # noqa: E501
        :type: bool
        """

        self._is_item_template = is_item_template

    @property
    def created_from_template(self):
        """Gets the created_from_template of this ItemDomainCableCatalog.  # noqa: E501


        :return: The created_from_template of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: Item
        """
        return self._created_from_template

    @created_from_template.setter
    def created_from_template(self, created_from_template):
        """Sets the created_from_template of this ItemDomainCableCatalog.


        :param created_from_template: The created_from_template of this ItemDomainCableCatalog.  # noqa: E501
        :type: Item
        """

        self._created_from_template = created_from_template

    @property
    def items_created_from_this_template_item(self):
        """Gets the items_created_from_this_template_item of this ItemDomainCableCatalog.  # noqa: E501


        :return: The items_created_from_this_template_item of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[Item]
        """
        return self._items_created_from_this_template_item

    @items_created_from_this_template_item.setter
    def items_created_from_this_template_item(self, items_created_from_this_template_item):
        """Sets the items_created_from_this_template_item of this ItemDomainCableCatalog.


        :param items_created_from_this_template_item: The items_created_from_this_template_item of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[Item]
        """

        self._items_created_from_this_template_item = items_created_from_this_template_item

    @property
    def hierarchy_item_element(self):
        """Gets the hierarchy_item_element of this ItemDomainCableCatalog.  # noqa: E501


        :return: The hierarchy_item_element of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: ItemElement
        """
        return self._hierarchy_item_element

    @hierarchy_item_element.setter
    def hierarchy_item_element(self, hierarchy_item_element):
        """Sets the hierarchy_item_element of this ItemDomainCableCatalog.


        :param hierarchy_item_element: The hierarchy_item_element of this ItemDomainCableCatalog.  # noqa: E501
        :type: ItemElement
        """

        self._hierarchy_item_element = hierarchy_item_element

    @property
    def description_from_api(self):
        """Gets the description_from_api of this ItemDomainCableCatalog.  # noqa: E501


        :return: The description_from_api of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._description_from_api

    @description_from_api.setter
    def description_from_api(self, description_from_api):
        """Sets the description_from_api of this ItemDomainCableCatalog.


        :param description_from_api: The description_from_api of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._description_from_api = description_from_api

    @property
    def part_number(self):
        """Gets the part_number of this ItemDomainCableCatalog.  # noqa: E501


        :return: The part_number of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._part_number

    @part_number.setter
    def part_number(self, part_number):
        """Sets the part_number of this ItemDomainCableCatalog.


        :param part_number: The part_number of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._part_number = part_number

    @property
    def alternate_name(self):
        """Gets the alternate_name of this ItemDomainCableCatalog.  # noqa: E501


        :return: The alternate_name of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._alternate_name

    @alternate_name.setter
    def alternate_name(self, alternate_name):
        """Sets the alternate_name of this ItemDomainCableCatalog.


        :param alternate_name: The alternate_name of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._alternate_name = alternate_name

    @property
    def manufacturer_id(self):
        """Gets the manufacturer_id of this ItemDomainCableCatalog.  # noqa: E501


        :return: The manufacturer_id of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._manufacturer_id

    @manufacturer_id.setter
    def manufacturer_id(self, manufacturer_id):
        """Sets the manufacturer_id of this ItemDomainCableCatalog.


        :param manufacturer_id: The manufacturer_id of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._manufacturer_id = manufacturer_id

    @property
    def manufacturer_source(self):
        """Gets the manufacturer_source of this ItemDomainCableCatalog.  # noqa: E501


        :return: The manufacturer_source of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: Source
        """
        return self._manufacturer_source

    @manufacturer_source.setter
    def manufacturer_source(self, manufacturer_source):
        """Sets the manufacturer_source of this ItemDomainCableCatalog.


        :param manufacturer_source: The manufacturer_source of this ItemDomainCableCatalog.  # noqa: E501
        :type: Source
        """

        self._manufacturer_source = manufacturer_source

    @property
    def item_element_relationship_list1(self):
        """Gets the item_element_relationship_list1 of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_relationship_list1 of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElementRelationship]
        """
        return self._item_element_relationship_list1

    @item_element_relationship_list1.setter
    def item_element_relationship_list1(self, item_element_relationship_list1):
        """Sets the item_element_relationship_list1 of this ItemDomainCableCatalog.


        :param item_element_relationship_list1: The item_element_relationship_list1 of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElementRelationship]
        """

        self._item_element_relationship_list1 = item_element_relationship_list1

    @property
    def self_element(self):
        """Gets the self_element of this ItemDomainCableCatalog.  # noqa: E501


        :return: The self_element of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: ItemElement
        """
        return self._self_element

    @self_element.setter
    def self_element(self, self_element):
        """Sets the self_element of this ItemDomainCableCatalog.


        :param self_element: The self_element of this ItemDomainCableCatalog.  # noqa: E501
        :type: ItemElement
        """

        self._self_element = self_element

    @property
    def item_element_relationship_list(self):
        """Gets the item_element_relationship_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_relationship_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElementRelationship]
        """
        return self._item_element_relationship_list

    @item_element_relationship_list.setter
    def item_element_relationship_list(self, item_element_relationship_list):
        """Sets the item_element_relationship_list of this ItemDomainCableCatalog.


        :param item_element_relationship_list: The item_element_relationship_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElementRelationship]
        """

        self._item_element_relationship_list = item_element_relationship_list

    @property
    def item_element_relationship_list2(self):
        """Gets the item_element_relationship_list2 of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_relationship_list2 of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElementRelationship]
        """
        return self._item_element_relationship_list2

    @item_element_relationship_list2.setter
    def item_element_relationship_list2(self, item_element_relationship_list2):
        """Sets the item_element_relationship_list2 of this ItemDomainCableCatalog.


        :param item_element_relationship_list2: The item_element_relationship_list2 of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElementRelationship]
        """

        self._item_element_relationship_list2 = item_element_relationship_list2

    @property
    def log_list(self):
        """Gets the log_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The log_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[Log]
        """
        return self._log_list

    @log_list.setter
    def log_list(self, log_list):
        """Sets the log_list of this ItemDomainCableCatalog.


        :param log_list: The log_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[Log]
        """

        self._log_list = log_list

    @property
    def item_element_list(self):
        """Gets the item_element_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemElement]
        """
        return self._item_element_list

    @item_element_list.setter
    def item_element_list(self, item_element_list):
        """Sets the item_element_list of this ItemDomainCableCatalog.


        :param item_element_list: The item_element_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemElement]
        """

        self._item_element_list = item_element_list

    @property
    def entity_type_display_list(self):
        """Gets the entity_type_display_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The entity_type_display_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[EntityType]
        """
        return self._entity_type_display_list

    @entity_type_display_list.setter
    def entity_type_display_list(self, entity_type_display_list):
        """Sets the entity_type_display_list of this ItemDomainCableCatalog.


        :param entity_type_display_list: The entity_type_display_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[EntityType]
        """

        self._entity_type_display_list = entity_type_display_list

    @property
    def edit_entity_type_string(self):
        """Gets the edit_entity_type_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The edit_entity_type_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._edit_entity_type_string

    @edit_entity_type_string.setter
    def edit_entity_type_string(self, edit_entity_type_string):
        """Sets the edit_entity_type_string of this ItemDomainCableCatalog.


        :param edit_entity_type_string: The edit_entity_type_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._edit_entity_type_string = edit_entity_type_string

    @property
    def project(self):
        """Gets the project of this ItemDomainCableCatalog.  # noqa: E501


        :return: The project of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: ItemProject
        """
        return self._project

    @project.setter
    def project(self, project):
        """Sets the project of this ItemDomainCableCatalog.


        :param project: The project of this ItemDomainCableCatalog.  # noqa: E501
        :type: ItemProject
        """

        self._project = project

    @property
    def edit_item_project_string(self):
        """Gets the edit_item_project_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The edit_item_project_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._edit_item_project_string

    @edit_item_project_string.setter
    def edit_item_project_string(self, edit_item_project_string):
        """Sets the edit_item_project_string of this ItemDomainCableCatalog.


        :param edit_item_project_string: The edit_item_project_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._edit_item_project_string = edit_item_project_string

    @property
    def item_element_display_list_empty(self):
        """Gets the item_element_display_list_empty of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_element_display_list_empty of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: bool
        """
        return self._item_element_display_list_empty

    @item_element_display_list_empty.setter
    def item_element_display_list_empty(self, item_element_display_list_empty):
        """Sets the item_element_display_list_empty of this ItemDomainCableCatalog.


        :param item_element_display_list_empty: The item_element_display_list_empty of this ItemDomainCableCatalog.  # noqa: E501
        :type: bool
        """

        self._item_element_display_list_empty = item_element_display_list_empty

    @property
    def primary_image_for_item(self):
        """Gets the primary_image_for_item of this ItemDomainCableCatalog.  # noqa: E501


        :return: The primary_image_for_item of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._primary_image_for_item

    @primary_image_for_item.setter
    def primary_image_for_item(self, primary_image_for_item):
        """Sets the primary_image_for_item of this ItemDomainCableCatalog.


        :param primary_image_for_item: The primary_image_for_item of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._primary_image_for_item = primary_image_for_item

    @property
    def description(self):
        """Gets the description of this ItemDomainCableCatalog.  # noqa: E501


        :return: The description of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._description

    @description.setter
    def description(self, description):
        """Sets the description of this ItemDomainCableCatalog.


        :param description: The description of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """
        if (self.local_vars_configuration.client_side_validation and
                description is not None and len(description) > 256):
            raise ValueError("Invalid value for `description`, length must be less than or equal to `256`")  # noqa: E501
        if (self.local_vars_configuration.client_side_validation and
                description is not None and len(description) < 0):
            raise ValueError("Invalid value for `description`, length must be greater than or equal to `0`")  # noqa: E501

        self._description = description

    @property
    def is_valid_import_string(self):
        """Gets the is_valid_import_string of this ItemDomainCableCatalog.  # noqa: E501


        :return: The is_valid_import_string of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: str
        """
        return self._is_valid_import_string

    @is_valid_import_string.setter
    def is_valid_import_string(self, is_valid_import_string):
        """Sets the is_valid_import_string of this ItemDomainCableCatalog.


        :param is_valid_import_string: The is_valid_import_string of this ItemDomainCableCatalog.  # noqa: E501
        :type: str
        """

        self._is_valid_import_string = is_valid_import_string

    @property
    def entity_type_list(self):
        """Gets the entity_type_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The entity_type_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[EntityType]
        """
        return self._entity_type_list

    @entity_type_list.setter
    def entity_type_list(self, entity_type_list):
        """Sets the entity_type_list of this ItemDomainCableCatalog.


        :param entity_type_list: The entity_type_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[EntityType]
        """

        self._entity_type_list = entity_type_list

    @property
    def item_category_list(self):
        """Gets the item_category_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_category_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemCategory]
        """
        return self._item_category_list

    @item_category_list.setter
    def item_category_list(self, item_category_list):
        """Sets the item_category_list of this ItemDomainCableCatalog.


        :param item_category_list: The item_category_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemCategory]
        """

        self._item_category_list = item_category_list

    @property
    def item_type_list(self):
        """Gets the item_type_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_type_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemType]
        """
        return self._item_type_list

    @item_type_list.setter
    def item_type_list(self, item_type_list):
        """Sets the item_type_list of this ItemDomainCableCatalog.


        :param item_type_list: The item_type_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemType]
        """

        self._item_type_list = item_type_list

    @property
    def item_project_list(self):
        """Gets the item_project_list of this ItemDomainCableCatalog.  # noqa: E501


        :return: The item_project_list of this ItemDomainCableCatalog.  # noqa: E501
        :rtype: list[ItemProject]
        """
        return self._item_project_list

    @item_project_list.setter
    def item_project_list(self, item_project_list):
        """Sets the item_project_list of this ItemDomainCableCatalog.


        :param item_project_list: The item_project_list of this ItemDomainCableCatalog.  # noqa: E501
        :type: list[ItemProject]
        """

        self._item_project_list = item_project_list

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, ItemDomainCableCatalog):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, ItemDomainCableCatalog):
            return True

        return self.to_dict() != other.to_dict()
