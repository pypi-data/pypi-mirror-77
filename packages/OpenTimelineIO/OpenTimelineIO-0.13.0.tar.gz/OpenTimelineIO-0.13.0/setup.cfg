[metadata]
description-file = README.md

[flake8]
exclude = 
	.tox
	*.egg
	build
	venv
	__pycache__
	docs
	dist
	.git
	deps
select = E,W,F
max-line-length = 88
ignore = 
	W503
	W504

[tox:tox]
envlist = clean,py27,py35,py36,stats
skip_missing_interpreters = true

[testenv]
cmake_build_dir = {toxworkdir}/build-{envname}
setenv = 
	OTIO_CXX_COVERAGE_BUILD = 1
	OTIO_CXX_BUILD_TMP_DIR = {[testenv]cmake_build_dir}
deps = 
	coverage
	check-manifest
	flake8
	Pillow
	mock
commands_pre = 
	# remove any old cmakecache file just in case you're working locally
	rm -f {[testenv]cmake_build_dir}/CMakeCache.txt
whitelist_externals = 
	rm
	lcov
commands = 
	check-manifest
	python -m flake8
	coverage run -a -m unittest discover tests -vvv
	coverage run -a -m unittest discover contrib/opentimelineio_contrib/adapters/tests -vvv
	coverage report
	lcov --capture -b {toxinidir} --directory {[testenv]cmake_build_dir} --output-file {[testenv]cmake_build_dir}/coverage.info -q
	# remove coverage of dependency files
	lcov --remove {[testenv]cmake_build_dir}/coverage.info '/usr/*' --output-file {[testenv]cmake_build_dir}/coverage.info  -q
	lcov --remove {[testenv]cmake_build_dir}/coverage.info '*/deps/*' --output-file {toxinidir}/coverage.info -q
	lcov --list {toxinidir}/coverage.info # debug info

[testenv:clean]
commands = 
	coverage erase
	rm {[testenv]cmake_build_dir} -f coverage.info

[testenv:stats]
commands = 
	coverage report
	coverage html
	lcov --list {toxinidir}/coverage.info # debug info

[testenv:build-docs]
changedir = docs
deps = 
	sphinx
	sphinx-rtd-theme
	recommonmark
commands = 
	sphinx-build -W -b html -d {envtmpdir}/doctrees . {envtmpdir}/html

[testenv:dist]
skip_install = True
deps = wheel
commands = 
	python setup.py bdist_wheel --universal

[check-manifest]
ignore = 
	tests*
	requirements*
	contrib/opentimelineio_contrib/application_plugins
	contrib/opentimelineio_contrib/application_plugins/*
ignore-bad-ideas = 
	*.egg-info
	*egg-info/*

[coverage:run]
branch = True

[coverage:report]
include = *
omit = 
	*aaf2*
	*pkg_resources*
	*pbr*
	*mock*
	*PIL*
	*funcsigs*
exclude_lines = 
	# Have to re-enable the standard pragma
	pragma: no cover
	# Don't complain if tests don't hit defensive assertion code:
	# raise AssertionError
	# raise NotImplementedError
	# # Don't complain if non-runnable code isn't run:
	# if 0:
	# if __name__ == .__main__.:
ignore_errors = True
show_missing = True

[coverage:html]
directory = coverage_html_report

[egg_info]
tag_build = 
tag_date = 0

