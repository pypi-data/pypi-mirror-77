# Generated by Django 3.1 on 2020-08-14 23:58

import address.models
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('address', '0002_auto_20160213_1726'),
        ('sites', '0002_alter_domain_unique'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('core', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Address',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, verbose_name='Name')),
                ('address', address.models.AddressField(on_delete=django.db.models.deletion.CASCADE, to='address.address')),
            ],
        ),
        migrations.CreateModel(
            name='CustomerProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('currency', models.CharField(choices=[('usd', 'US Dollar')], default='usd', max_length=4, verbose_name='Currency')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='customer_profile', to='sites.site')),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='customer_profile', to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'Customer Profile',
                'verbose_name_plural': 'Customer Profiles',
            },
        ),
        migrations.CreateModel(
            name='Invoice',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('status', models.IntegerField(choices=[(0, 'Cart'), (10, 'Queued'), (20, 'Processing'), (30, 'Failed'), (40, 'Complete')], default=0, verbose_name='Status')),
                ('customer_notes', models.TextField(blank=True, null=True)),
                ('vendor_notes', models.TextField(blank=True, null=True)),
                ('ordered_date', models.DateTimeField(blank=True, null=True, verbose_name='Ordered Date')),
                ('subtotal', models.FloatField(default=0.0)),
                ('tax', models.FloatField(blank=True, null=True)),
                ('shipping', models.FloatField(blank=True, null=True)),
                ('total', models.FloatField(blank=True, null=True)),
                ('currency', models.CharField(choices=[('usd', 'US Dollar')], default='usd', max_length=4, verbose_name='Currency')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='vendor.customerprofile', verbose_name='Customer Profile')),
                ('shipping_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor.address', verbose_name='Shipping Address')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='invoices', to='sites.site')),
            ],
            options={
                'verbose_name': 'Invoice',
                'verbose_name_plural': 'Invoices',
            },
        ),
        migrations.CreateModel(
            name='Offer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, unique=True)),
                ('slug', models.SlugField(blank=True, null=True, verbose_name='Slug')),
                ('name', models.CharField(blank=True, max_length=80, verbose_name='Name')),
                ('start_date', models.DateTimeField(help_text='What date should this offer become available?', verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, help_text='Expiration Date?', null=True, verbose_name='End Date')),
                ('terms', models.IntegerField(choices=[(0, 'Perpetual'), (10, 'Subscription'), (20, 'One-Time Use')], default=0, verbose_name='Terms')),
                ('term_details', models.JSONField(blank=True, default=dict, null=True, verbose_name='Details')),
                ('term_start_date', models.DateTimeField(blank=True, help_text='When is this product available to use?', null=True, verbose_name='Term Start Date')),
                ('available', models.BooleanField(default=False, help_text='Is this currently available?', verbose_name='Available')),
                ('bundle', models.ManyToManyField(blank=True, related_name='bundles', to='core.Product')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='offers', to='core.product')),
                ('site', models.ForeignKey(default=1, on_delete=django.db.models.deletion.CASCADE, related_name='product_offers', to='sites.site')),
            ],
            options={
                'verbose_name': 'Offer',
                'verbose_name_plural': 'Offers',
            },
        ),
        migrations.CreateModel(
            name='OrderItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('quantity', models.IntegerField(default=1, verbose_name='Quantity')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='vendor.invoice', verbose_name='Invoice')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='order_items', to='vendor.offer', verbose_name='Offer')),
            ],
            options={
                'verbose_name': 'Order Item',
                'verbose_name_plural': 'Order Items',
            },
        ),
        migrations.CreateModel(
            name='TaxClassifier',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=80, verbose_name='Name')),
                ('taxable', models.BooleanField()),
            ],
            options={
                'verbose_name': 'Product Classifier',
                'verbose_name_plural': 'Product Classifiers',
            },
        ),
        migrations.CreateModel(
            name='Wishlist',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100, verbose_name='Name')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='wishlists', to='vendor.customerprofile', verbose_name='Purchase Profile')),
            ],
            options={
                'verbose_name': 'Wishlist',
                'verbose_name_plural': 'Wishlists',
            },
        ),
        migrations.CreateModel(
            name='WishlistItem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to='vendor.offer', verbose_name='Offer')),
                ('wishlist', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='wishlist_items', to='vendor.wishlist', verbose_name='Wishlist')),
            ],
            options={
                'verbose_name': 'Wishlist Item',
                'verbose_name_plural': 'Wishlist Items',
            },
        ),
        migrations.CreateModel(
            name='Reciept',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('updated', models.DateTimeField(auto_now=True, verbose_name='last updated')),
                ('start_date', models.DateTimeField(blank=True, null=True, verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, null=True, verbose_name='End Date')),
                ('auto_renew', models.BooleanField(default=False, verbose_name='Auto Renew')),
                ('vendor_notes', models.TextField()),
                ('transaction', models.CharField(max_length=80, verbose_name='Transaction')),
                ('status', models.IntegerField(choices=[(0, 'Queued'), (10, 'Processing'), (20, 'Expired'), (30, 'Hold'), (40, 'Canceled'), (50, 'Refunded'), (60, 'Completed')], default=0, verbose_name='Status')),
                ('order_item', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reciepts', to='vendor.orderitem', verbose_name='Order Item')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reciepts', to='core.product')),
                ('profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='reciepts', to='vendor.customerprofile', verbose_name='Purchase Profile')),
            ],
            options={
                'verbose_name': 'Reciept',
                'verbose_name_plural': 'Reciepts',
            },
        ),
        migrations.CreateModel(
            name='Price',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('cost', models.FloatField()),
                ('currency', models.CharField(choices=[('usd', 'US Dollar')], default='usd', max_length=4, verbose_name='Currency')),
                ('start_date', models.DateTimeField(help_text='When should the price first become available?', verbose_name='Start Date')),
                ('end_date', models.DateTimeField(blank=True, help_text='When should the price expire?', null=True, verbose_name='End Date')),
                ('priority', models.IntegerField(blank=True, help_text='Higher number takes priority', null=True, verbose_name='Priority')),
                ('offer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='prices', to='vendor.offer')),
            ],
            options={
                'verbose_name': 'Price',
                'verbose_name_plural': 'Prices',
            },
        ),
        migrations.CreateModel(
            name='Payment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(auto_now_add=True, verbose_name='date created')),
                ('transaction', models.CharField(max_length=50, verbose_name='Transaction ID')),
                ('provider', models.CharField(max_length=16, verbose_name='Payment Provider')),
                ('amount', models.FloatField(verbose_name='Amount')),
                ('result', models.TextField(blank=True, null=True, verbose_name='Result')),
                ('success', models.BooleanField(default=False, verbose_name='Successful')),
                ('billing_address', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='vendor.address', verbose_name='payments')),
                ('invoice', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='payments', to='vendor.invoice', verbose_name='Invoice')),
                ('profile', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='payments', to='vendor.customerprofile', verbose_name='Purchase Profile')),
            ],
        ),
        migrations.AddField(
            model_name='address',
            name='profile',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='addresses', to='vendor.customerprofile', verbose_name='Customer Profile'),
        ),
    ]
