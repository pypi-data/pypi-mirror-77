description: 
   name: $(NAME)
   description: Run 10 hello worlds.

batch: 
   type: local
   dry_run: false
   shell: /bin/bash

env: 
   variables: 
      OUTPUT_PATH: ./studies
      N_SAMPLES: 10
      WORKER_NAME: demo_worker
      VERIFY_QUEUE: default_verify_queue
      NAME: feature_demo
      SCRIPTS: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts
      HELLO: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/hello_world.py
      FEATURES: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/features.json
      TRANSLATE: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/translator.py
      COLLECT: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/collector.py
      MAKE_SAMPLES: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/make_samples.py
      LEARN: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/learn.py
      PREDICT: /g/g13/bay1/merlin/merlin/examples/workflows/null_spec/scripts/studies/feature_demo_20200806-155303/merlin_info/scripts/predict.py

   sources: 

   labels: 

   dependencies: 

study: 
   - name: hello
     description: process a sample with hello world

     run: 
        cmd: python3 $(HELLO) -outfile hello_world_output_$(MERLIN_SAMPLE_ID).json $(X0) $(X1) $(X2)

        task_queue: hello_queue
        max_retries: 1
        shell: /bin/bash

   - name: collect
     description: process the output of the hello world samples, extracting specific features;

     run: 
        cmd: |
            echo $(MERLIN_GLOB_PATH)
            echo $(hello.workspace)
            ls $(hello.workspace)/X2.$(X2)/$(MERLIN_GLOB_PATH)/hello_world_output_*.json > files_to_collect.txt
            python3 $(COLLECT) -outfile results.json -instring "$(cat files_to_collect.txt)"
        depends: [hello_*]
        task_queue: collect_queue
        shell: /bin/bash
        max_retries: 30

   - name: translate
     description: process the output of the hello world samples some more

     run: 
        cmd: python3 $(TRANSLATE) -input $(collect.workspace)/results.json -output results.npz -schema $(FEATURES)
        depends: [collect]
        task_queue: translate_queue
        shell: /bin/bash
        max_retries: 30

   - name: learn
     description: train a learner on the results

     run: 
        cmd: python3 $(LEARN) -infile $(translate.workspace)/results.npz
        depends: [translate]
        task_queue: learn_queue
        shell: /bin/bash
        max_retries: 30

   - name: make_new_samples
     description: make a grid of new samples to pass to the predictor

     run: 
        cmd: python3 $(MAKE_SAMPLES) -n $(N_NEW) -sample_type grid -outfile grid_$(N_NEW).npy
        task_queue: make_samples_queue
        shell: /bin/bash
        max_retries: 30

   - name: predict
     description: make a new prediction from new samples

     run: 
        cmd: python3 $(PREDICT) -infile $(make_new_samples.workspace)/grid_$(N_NEW).npy -outfile prediction_$(N_NEW).npy -reg $(learn.workspace)/random_forest_reg.pkl
        depends: [learn, make_new_samples]
        task_queue: predict_queue
        shell: /bin/bash
        max_retries: 30

   - name: verify
     description: if learn and predict succeeded, output a dir to signal study completion

     run: 
        cmd: |
            if [[ -f $(learn.workspace)/random_forest_reg.pkl && -f $(predict.workspace)/prediction_$(N_NEW).npy ]]
            then
                touch FINISHED
                exit $(MERLIN_SUCCESS)
            else
                exit $(MERLIN_SOFT_FAIL)
            fi
        depends: [learn, predict]
        task_queue: $(VERIFY_QUEUE)
        shell: /bin/bash
        max_retries: 30

   - name: python3_hello
     description: do something in python

     run: 
        cmd: |
            print("OMG is this in python?")
            print("Variable X2 is $(X2)")
        shell: /usr/bin/env python3
        task_queue: pyth3_q
        max_retries: 30

   - name: python2_hello
     description: do something in python2, because change is bad

     run: 
        cmd: |
            print "OMG is this in python2? Change is bad."
            print "Variable X2 is $(X2)"
        shell: /usr/bin/env python2
        task_queue: pyth2_hello
        max_retries: 30

global.parameters: 
   X2: 
      values: [0.5]
      label: X2.%%

   N_NEW: 
      values: [10]
      label: N_NEW.%%

merlin: 
   resources: 
      task_server: celery
      overlap: false
      workers: 
         $(WORKER_NAME): 
            args: -l INFO --concurrency 3 --prefetch-multiplier 1 -Ofair
            steps: [all]
            nodes: 
            batch: 

   samples: 
      generate: 
         cmd: |
            cp -r $(SPECROOT)/scripts $(SCRIPTS)
            
            python3 $(MAKE_SAMPLES) -n $(N_SAMPLES) -outfile=$(MERLIN_INFO)/samples.npy

      file: $(MERLIN_INFO)/samples.npy
      column_labels: [X0, X1]
      level_max_dirs: 25

