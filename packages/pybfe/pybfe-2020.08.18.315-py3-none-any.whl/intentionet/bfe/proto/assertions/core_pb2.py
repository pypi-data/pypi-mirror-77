# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/core.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from intentionet.bfe.proto.assertions import parameters_pb2 as intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2
from intentionet.bfe.proto.datamodel.aws import aws_primitives_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2
from intentionet.bfe.proto.datamodel import device_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2
from intentionet.bfe.proto.datamodel import flow_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2
from intentionet.bfe.proto.datamodel import route_pb2 as intentionet_dot_bfe_dot_proto_dot_datamodel_dot_route__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='intentionet/bfe/proto/assertions/core.proto',
  package='com.intentionet.bfe.assertions',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n+intentionet/bfe/proto/assertions/core.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x31intentionet/bfe/proto/assertions/parameters.proto\x1a\x38intentionet/bfe/proto/datamodel/aws/aws_primitives.proto\x1a,intentionet/bfe/proto/datamodel/device.proto\x1a*intentionet/bfe/proto/datamodel/flow.proto\x1a+intentionet/bfe/proto/datamodel/route.proto\"\xa9\x04\n\x0e\x41ssertionInput\x12`\n\x14\x64\x65vices_have_servers\x18\x01 \x01(\x0b\x32@.com.intentionet.bfe.assertions.DevicesHaveServersAssertionInputH\x00\x12w\n!security_group_does_not_have_rule\x18\x10 \x01(\x0b\x32J.com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInputH\x00\x12]\n\x18sg_rules_blocked_by_nacl\x18\x11 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.SgRulesBlockedByNaclInputH\x00\x12t\n\x1f\x63ross_zone_policy_filters_flows\x18\x12 \x01(\x0b\x32I.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInputH\x00\x12^\n\x13\x64\x65vices_have_routes\x18\x13 \x01(\x0b\x32?.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInputH\x00\x42\x07\n\x05input\"\xfb\x04\n\x0f\x41ssertionResult\x12\x61\n\x14\x64\x65vices_have_servers\x18\x01 \x01(\x0b\x32\x41.com.intentionet.bfe.assertions.DevicesHaveServersAssertionResultH\x00\x12x\n!security_group_does_not_have_rule\x18\x10 \x01(\x0b\x32K.com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResultH\x00\x12^\n\x18sg_rules_blocked_by_nacl\x18\x11 \x01(\x0b\x32:.com.intentionet.bfe.assertions.SgRulesBlockedByNaclResultH\x00\x12u\n\x1f\x63ross_zone_policy_filters_flows\x18\x12 \x01(\x0b\x32J.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResultH\x00\x12_\n\x13\x64\x65vices_have_routes\x18\x13 \x01(\x0b\x32@.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResultH\x00\x12I\n\x08metadata\x18\x02 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.AssertionResultMetadataB\x08\n\x06result\"\xa2\x01\n\x17\x41ssertionResultMetadata\x12?\n\x06status\x18\x01 \x01(\x0e\x32/.com.intentionet.bfe.assertions.AssertionStatus\x12\x46\n\x05\x65rror\x18\x02 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.AssertionExecutionError\"l\n\x17\x41ssertionExecutionError\x12@\n\x04\x63ode\x18\x01 \x01(\x0e\x32\x32.com.intentionet.bfe.assertions.AssertionErrorCode\x12\x0f\n\x07message\x18\x02 \x01(\t\"\x87\x03\n)CrossZonePolicyFiltersFlowsAssertionInput\x12\x43\n\tfirewalls\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExpr\x12=\n\x05\x66lows\x18\x02 \x01(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExpr\x12G\n\x04\x66rom\x18\x03 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.FirewallLocationMatchExpr\x12\x45\n\x02to\x18\x04 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.FirewallLocationMatchExpr\x12\x46\n\x06\x65xpect\x18\x05 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.FirewallBehaviorExpect\"\xc6\x04\n*CrossZonePolicyFiltersFlowsAssertionResult\x12\x65\n\tviolators\x18\x01 \x03(\x0b\x32R.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element\x12\x35\n\nconformers\x18\x02 \x03(\x0b\x32!.com.intentionet.datamodel.Device\x12j\n\x08\x66\x61ilures\x18\x03 \x03(\x0b\x32X.com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.FailureResult\x1a\xb9\x01\n\x07\x45lement\x12\x31\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.Device\x12-\n\x04\x66low\x18\x02 \x01(\x0b\x32\x1f.com.intentionet.datamodel.Flow\x12<\n\x06\x61\x63tion\x18\x03 \x01(\x0e\x32,.com.intentionet.bfe.assertions.FilterAction\x12\x0e\n\x06\x66ilter\x18\x04 \x01(\t\x1aR\n\rFailureResult\x12\x31\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.Device\x12\x0e\n\x06reason\x18\x02 \x01(\t\"\xa4\x01\n\x1f\x44\x65vicesHaveRoutesAssertionInput\x12\x41\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExpr\x12>\n\x06routes\x18\x02 \x01(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExpr\"\xcd\x02\n DevicesHaveRoutesAssertionResult\x12\\\n\nconformers\x18\x01 \x03(\x0b\x32H.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Element\x12[\n\tviolators\x18\x02 \x03(\x0b\x32H.com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Element\x1an\n\x07\x45lement\x12\x31\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.Device\x12\x30\n\x06routes\x18\x02 \x03(\x0b\x32 .com.intentionet.datamodel.Route\"\xa4\x01\n DevicesHaveServersAssertionInput\x12\x41\n\x07\x64\x65vices\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExpr\x12=\n\x07servers\x18\x02 \x01(\x0b\x32,.com.intentionet.bfe.assertions.MatchServers\"\xd0\x01\n!DevicesHaveServersAssertionResult\x12\\\n\tviolators\x18\x01 \x03(\x0b\x32I.com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element\x1aM\n\x07\x45lement\x12\x31\n\x06\x64\x65vice\x18\x01 \x01(\x0b\x32!.com.intentionet.datamodel.Device\x12\x0f\n\x07servers\x18\x02 \x03(\t\"\xc6\x01\n*SecurityGroupDoesNotHaveRuleAssertionInput\x12P\n\x0fsecurity_groups\x18\x01 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExpr\x12\x46\n\x05rules\x18\x02 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.MatchSecurityGroupRules\"\xe9\x01\n+SecurityGroupDoesNotHaveRuleAssertionResult\x12\x66\n\tviolators\x18\x01 \x03(\x0b\x32S.com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element\x1aR\n\x07\x45lement\x12G\n\x0esecurity_group\x18\x01 \x01(\x0b\x32/.com.intentionet.datamodel.aws.AwsSecurityGroup\"\x1b\n\x19SgRulesBlockedByNaclInput\"\xf1\x02\n\x1aSgRulesBlockedByNaclResult\x12U\n\tviolators\x18\x01 \x03(\x0b\x32\x42.com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element\x1a\xfb\x01\n\x07\x45lement\x12K\n\rsecurity_rule\x18\x01 \x01(\x0b\x32\x34.com.intentionet.datamodel.aws.AwsSecurityGroup.Rule\x12G\n\x0esecurity_group\x18\x02 \x01(\x0b\x32/.com.intentionet.datamodel.aws.AwsSecurityGroup\x12\x38\n\x06subnet\x18\x03 \x01(\x0b\x32(.com.intentionet.datamodel.aws.AwsSubnet\x12\x0f\n\x07nacl_id\x18\x04 \x01(\t\x12\x0f\n\x07inbound\x18\x05 \x01(\x08*\x81\x01\n\x0f\x41ssertionStatus\x12\x1c\n\x18\x41SSERTION_STATUS_UNKNOWN\x10\x00\x12\x19\n\x15\x41SSERTION_STATUS_PASS\x10\x01\x12\x19\n\x15\x41SSERTION_STATUS_FAIL\x10\x02\x12\x1a\n\x16\x41SSERTION_STATUS_ERROR\x10\x03*N\n\x12\x41ssertionErrorCode\x12\x0b\n\x07UNKNOWN\x10\x00\x12\r\n\tBFE_ERROR\x10\x01\x12\x1c\n\x18UNSATISFIED_PRECONDITION\x10\x02*[\n\x0c\x46ilterAction\x12\x19\n\x15\x46ILTER_ACTION_UNKNOWN\x10\x00\x12\x18\n\x14\x46ILTER_ACTION_PERMIT\x10\x01\x12\x16\n\x12\x46ILTER_ACTION_DENY\x10\x02\x62\x06proto3')
  ,
  dependencies=[intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2.DESCRIPTOR,intentionet_dot_bfe_dot_proto_dot_datamodel_dot_route__pb2.DESCRIPTOR,])

_ASSERTIONSTATUS = _descriptor.EnumDescriptor(
  name='AssertionStatus',
  full_name='com.intentionet.bfe.assertions.AssertionStatus',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_PASS', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_FAIL', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ASSERTION_STATUS_ERROR', index=3, number=3,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4491,
  serialized_end=4620,
)
_sym_db.RegisterEnumDescriptor(_ASSERTIONSTATUS)

AssertionStatus = enum_type_wrapper.EnumTypeWrapper(_ASSERTIONSTATUS)
_ASSERTIONERRORCODE = _descriptor.EnumDescriptor(
  name='AssertionErrorCode',
  full_name='com.intentionet.bfe.assertions.AssertionErrorCode',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='BFE_ERROR', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='UNSATISFIED_PRECONDITION', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4622,
  serialized_end=4700,
)
_sym_db.RegisterEnumDescriptor(_ASSERTIONERRORCODE)

AssertionErrorCode = enum_type_wrapper.EnumTypeWrapper(_ASSERTIONERRORCODE)
_FILTERACTION = _descriptor.EnumDescriptor(
  name='FilterAction',
  full_name='com.intentionet.bfe.assertions.FilterAction',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='FILTER_ACTION_UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_ACTION_PERMIT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='FILTER_ACTION_DENY', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=4702,
  serialized_end=4793,
)
_sym_db.RegisterEnumDescriptor(_FILTERACTION)

FilterAction = enum_type_wrapper.EnumTypeWrapper(_FILTERACTION)
ASSERTION_STATUS_UNKNOWN = 0
ASSERTION_STATUS_PASS = 1
ASSERTION_STATUS_FAIL = 2
ASSERTION_STATUS_ERROR = 3
UNKNOWN = 0
BFE_ERROR = 1
UNSATISFIED_PRECONDITION = 2
FILTER_ACTION_UNKNOWN = 0
FILTER_ACTION_PERMIT = 1
FILTER_ACTION_DENY = 2



_ASSERTIONINPUT = _descriptor.Descriptor(
  name='AssertionInput',
  full_name='com.intentionet.bfe.assertions.AssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices_have_servers', full_name='com.intentionet.bfe.assertions.AssertionInput.devices_have_servers', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='security_group_does_not_have_rule', full_name='com.intentionet.bfe.assertions.AssertionInput.security_group_does_not_have_rule', index=1,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sg_rules_blocked_by_nacl', full_name='com.intentionet.bfe.assertions.AssertionInput.sg_rules_blocked_by_nacl', index=2,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cross_zone_policy_filters_flows', full_name='com.intentionet.bfe.assertions.AssertionInput.cross_zone_policy_filters_flows', index=3,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='devices_have_routes', full_name='com.intentionet.bfe.assertions.AssertionInput.devices_have_routes', index=4,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='input', full_name='com.intentionet.bfe.assertions.AssertionInput.input',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=324,
  serialized_end=877,
)


_ASSERTIONRESULT = _descriptor.Descriptor(
  name='AssertionResult',
  full_name='com.intentionet.bfe.assertions.AssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices_have_servers', full_name='com.intentionet.bfe.assertions.AssertionResult.devices_have_servers', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='security_group_does_not_have_rule', full_name='com.intentionet.bfe.assertions.AssertionResult.security_group_does_not_have_rule', index=1,
      number=16, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='sg_rules_blocked_by_nacl', full_name='com.intentionet.bfe.assertions.AssertionResult.sg_rules_blocked_by_nacl', index=2,
      number=17, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='cross_zone_policy_filters_flows', full_name='com.intentionet.bfe.assertions.AssertionResult.cross_zone_policy_filters_flows', index=3,
      number=18, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='devices_have_routes', full_name='com.intentionet.bfe.assertions.AssertionResult.devices_have_routes', index=4,
      number=19, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='metadata', full_name='com.intentionet.bfe.assertions.AssertionResult.metadata', index=5,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='result', full_name='com.intentionet.bfe.assertions.AssertionResult.result',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=880,
  serialized_end=1515,
)


_ASSERTIONRESULTMETADATA = _descriptor.Descriptor(
  name='AssertionResultMetadata',
  full_name='com.intentionet.bfe.assertions.AssertionResultMetadata',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='status', full_name='com.intentionet.bfe.assertions.AssertionResultMetadata.status', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='error', full_name='com.intentionet.bfe.assertions.AssertionResultMetadata.error', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1518,
  serialized_end=1680,
)


_ASSERTIONEXECUTIONERROR = _descriptor.Descriptor(
  name='AssertionExecutionError',
  full_name='com.intentionet.bfe.assertions.AssertionExecutionError',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='code', full_name='com.intentionet.bfe.assertions.AssertionExecutionError.code', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='message', full_name='com.intentionet.bfe.assertions.AssertionExecutionError.message', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1682,
  serialized_end=1790,
)


_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT = _descriptor.Descriptor(
  name='CrossZonePolicyFiltersFlowsAssertionInput',
  full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='firewalls', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput.firewalls', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flows', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput.flows', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='from', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput.from', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='to', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput.to', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='expect', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput.expect', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1793,
  serialized_end=2184,
)


_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='flow', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element.flow', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='action', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element.action', index=2,
      number=3, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='filter', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element.filter', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2500,
  serialized_end=2685,
)

_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT = _descriptor.Descriptor(
  name='FailureResult',
  full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.FailureResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.FailureResult.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='reason', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.FailureResult.reason', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2687,
  serialized_end=2769,
)

_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT = _descriptor.Descriptor(
  name='CrossZonePolicyFiltersFlowsAssertionResult',
  full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='conformers', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.conformers', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='failures', full_name='com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.failures', index=2,
      number=3, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT, _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2187,
  serialized_end=2769,
)


_DEVICESHAVEROUTESASSERTIONINPUT = _descriptor.Descriptor(
  name='DevicesHaveRoutesAssertionInput',
  full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices', full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInput.devices', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='routes', full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInput.routes', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2772,
  serialized_end=2936,
)


_DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Element.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='routes', full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Element.routes', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3162,
  serialized_end=3272,
)

_DEVICESHAVEROUTESASSERTIONRESULT = _descriptor.Descriptor(
  name='DevicesHaveRoutesAssertionResult',
  full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='conformers', full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.conformers', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.violators', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=2939,
  serialized_end=3272,
)


_DEVICESHAVESERVERSASSERTIONINPUT = _descriptor.Descriptor(
  name='DevicesHaveServersAssertionInput',
  full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='devices', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput.devices', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='servers', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput.servers', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3275,
  serialized_end=3439,
)


_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='device', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element.device', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='servers', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element.servers', index=1,
      number=2, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3573,
  serialized_end=3650,
)

_DEVICESHAVESERVERSASSERTIONRESULT = _descriptor.Descriptor(
  name='DevicesHaveServersAssertionResult',
  full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3442,
  serialized_end=3650,
)


_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT = _descriptor.Descriptor(
  name='SecurityGroupDoesNotHaveRuleAssertionInput',
  full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='security_groups', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput.security_groups', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='rules', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput.rules', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3653,
  serialized_end=3851,
)


_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='security_group', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element.security_group', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4005,
  serialized_end=4087,
)

_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT = _descriptor.Descriptor(
  name='SecurityGroupDoesNotHaveRuleAssertionResult',
  full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3854,
  serialized_end=4087,
)


_SGRULESBLOCKEDBYNACLINPUT = _descriptor.Descriptor(
  name='SgRulesBlockedByNaclInput',
  full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclInput',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4089,
  serialized_end=4116,
)


_SGRULESBLOCKEDBYNACLRESULT_ELEMENT = _descriptor.Descriptor(
  name='Element',
  full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='security_rule', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.security_rule', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='security_group', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.security_group', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='subnet', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.subnet', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='nacl_id', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.nacl_id', index=3,
      number=4, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inbound', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element.inbound', index=4,
      number=5, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4237,
  serialized_end=4488,
)

_SGRULESBLOCKEDBYNACLRESULT = _descriptor.Descriptor(
  name='SgRulesBlockedByNaclResult',
  full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='violators', full_name='com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.violators', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[_SGRULESBLOCKEDBYNACLRESULT_ELEMENT, ],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4119,
  serialized_end=4488,
)

_ASSERTIONINPUT.fields_by_name['devices_have_servers'].message_type = _DEVICESHAVESERVERSASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['security_group_does_not_have_rule'].message_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['sg_rules_blocked_by_nacl'].message_type = _SGRULESBLOCKEDBYNACLINPUT
_ASSERTIONINPUT.fields_by_name['cross_zone_policy_filters_flows'].message_type = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT
_ASSERTIONINPUT.fields_by_name['devices_have_routes'].message_type = _DEVICESHAVEROUTESASSERTIONINPUT
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['devices_have_servers'])
_ASSERTIONINPUT.fields_by_name['devices_have_servers'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['security_group_does_not_have_rule'])
_ASSERTIONINPUT.fields_by_name['security_group_does_not_have_rule'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['sg_rules_blocked_by_nacl'])
_ASSERTIONINPUT.fields_by_name['sg_rules_blocked_by_nacl'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['cross_zone_policy_filters_flows'])
_ASSERTIONINPUT.fields_by_name['cross_zone_policy_filters_flows'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONINPUT.oneofs_by_name['input'].fields.append(
  _ASSERTIONINPUT.fields_by_name['devices_have_routes'])
_ASSERTIONINPUT.fields_by_name['devices_have_routes'].containing_oneof = _ASSERTIONINPUT.oneofs_by_name['input']
_ASSERTIONRESULT.fields_by_name['devices_have_servers'].message_type = _DEVICESHAVESERVERSASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['security_group_does_not_have_rule'].message_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['sg_rules_blocked_by_nacl'].message_type = _SGRULESBLOCKEDBYNACLRESULT
_ASSERTIONRESULT.fields_by_name['cross_zone_policy_filters_flows'].message_type = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['devices_have_routes'].message_type = _DEVICESHAVEROUTESASSERTIONRESULT
_ASSERTIONRESULT.fields_by_name['metadata'].message_type = _ASSERTIONRESULTMETADATA
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['devices_have_servers'])
_ASSERTIONRESULT.fields_by_name['devices_have_servers'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['security_group_does_not_have_rule'])
_ASSERTIONRESULT.fields_by_name['security_group_does_not_have_rule'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['sg_rules_blocked_by_nacl'])
_ASSERTIONRESULT.fields_by_name['sg_rules_blocked_by_nacl'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['cross_zone_policy_filters_flows'])
_ASSERTIONRESULT.fields_by_name['cross_zone_policy_filters_flows'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULT.oneofs_by_name['result'].fields.append(
  _ASSERTIONRESULT.fields_by_name['devices_have_routes'])
_ASSERTIONRESULT.fields_by_name['devices_have_routes'].containing_oneof = _ASSERTIONRESULT.oneofs_by_name['result']
_ASSERTIONRESULTMETADATA.fields_by_name['status'].enum_type = _ASSERTIONSTATUS
_ASSERTIONRESULTMETADATA.fields_by_name['error'].message_type = _ASSERTIONEXECUTIONERROR
_ASSERTIONEXECUTIONERROR.fields_by_name['code'].enum_type = _ASSERTIONERRORCODE
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT.fields_by_name['firewalls'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._DEVICEFILTEREXPR
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT.fields_by_name['flows'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._FLOWFILTEREXPR
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT.fields_by_name['from'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._FIREWALLLOCATIONMATCHEXPR
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT.fields_by_name['to'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._FIREWALLLOCATIONMATCHEXPR
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT.fields_by_name['expect'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._FIREWALLBEHAVIOREXPECT
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT.fields_by_name['device'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2._DEVICE
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT.fields_by_name['flow'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_flow__pb2._FLOW
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT.fields_by_name['action'].enum_type = _FILTERACTION
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT.containing_type = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT.fields_by_name['device'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2._DEVICE
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT.containing_type = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT.fields_by_name['violators'].message_type = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT.fields_by_name['conformers'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2._DEVICE
_CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT.fields_by_name['failures'].message_type = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT
_DEVICESHAVEROUTESASSERTIONINPUT.fields_by_name['devices'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._DEVICEFILTEREXPR
_DEVICESHAVEROUTESASSERTIONINPUT.fields_by_name['routes'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._MATCHROUTEEXPR
_DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT.fields_by_name['device'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2._DEVICE
_DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT.fields_by_name['routes'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_route__pb2._ROUTE
_DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT.containing_type = _DEVICESHAVEROUTESASSERTIONRESULT
_DEVICESHAVEROUTESASSERTIONRESULT.fields_by_name['conformers'].message_type = _DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT
_DEVICESHAVEROUTESASSERTIONRESULT.fields_by_name['violators'].message_type = _DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT
_DEVICESHAVESERVERSASSERTIONINPUT.fields_by_name['devices'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._DEVICEFILTEREXPR
_DEVICESHAVESERVERSASSERTIONINPUT.fields_by_name['servers'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._MATCHSERVERS
_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT.fields_by_name['device'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_device__pb2._DEVICE
_DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT.containing_type = _DEVICESHAVESERVERSASSERTIONRESULT
_DEVICESHAVESERVERSASSERTIONRESULT.fields_by_name['violators'].message_type = _DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT
_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT.fields_by_name['security_groups'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._SECURITYGROUPFILTEREXPR
_SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT.fields_by_name['rules'].message_type = intentionet_dot_bfe_dot_proto_dot_assertions_dot_parameters__pb2._MATCHSECURITYGROUPRULES
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT.fields_by_name['security_group'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT.containing_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT
_SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT.fields_by_name['violators'].message_type = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['security_rule'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP_RULE
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['security_group'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSECURITYGROUP
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.fields_by_name['subnet'].message_type = intentionet_dot_bfe_dot_proto_dot_datamodel_dot_aws_dot_aws__primitives__pb2._AWSSUBNET
_SGRULESBLOCKEDBYNACLRESULT_ELEMENT.containing_type = _SGRULESBLOCKEDBYNACLRESULT
_SGRULESBLOCKEDBYNACLRESULT.fields_by_name['violators'].message_type = _SGRULESBLOCKEDBYNACLRESULT_ELEMENT
DESCRIPTOR.message_types_by_name['AssertionInput'] = _ASSERTIONINPUT
DESCRIPTOR.message_types_by_name['AssertionResult'] = _ASSERTIONRESULT
DESCRIPTOR.message_types_by_name['AssertionResultMetadata'] = _ASSERTIONRESULTMETADATA
DESCRIPTOR.message_types_by_name['AssertionExecutionError'] = _ASSERTIONEXECUTIONERROR
DESCRIPTOR.message_types_by_name['CrossZonePolicyFiltersFlowsAssertionInput'] = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT
DESCRIPTOR.message_types_by_name['CrossZonePolicyFiltersFlowsAssertionResult'] = _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT
DESCRIPTOR.message_types_by_name['DevicesHaveRoutesAssertionInput'] = _DEVICESHAVEROUTESASSERTIONINPUT
DESCRIPTOR.message_types_by_name['DevicesHaveRoutesAssertionResult'] = _DEVICESHAVEROUTESASSERTIONRESULT
DESCRIPTOR.message_types_by_name['DevicesHaveServersAssertionInput'] = _DEVICESHAVESERVERSASSERTIONINPUT
DESCRIPTOR.message_types_by_name['DevicesHaveServersAssertionResult'] = _DEVICESHAVESERVERSASSERTIONRESULT
DESCRIPTOR.message_types_by_name['SecurityGroupDoesNotHaveRuleAssertionInput'] = _SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT
DESCRIPTOR.message_types_by_name['SecurityGroupDoesNotHaveRuleAssertionResult'] = _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT
DESCRIPTOR.message_types_by_name['SgRulesBlockedByNaclInput'] = _SGRULESBLOCKEDBYNACLINPUT
DESCRIPTOR.message_types_by_name['SgRulesBlockedByNaclResult'] = _SGRULESBLOCKEDBYNACLRESULT
DESCRIPTOR.enum_types_by_name['AssertionStatus'] = _ASSERTIONSTATUS
DESCRIPTOR.enum_types_by_name['AssertionErrorCode'] = _ASSERTIONERRORCODE
DESCRIPTOR.enum_types_by_name['FilterAction'] = _FILTERACTION
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

AssertionInput = _reflection.GeneratedProtocolMessageType('AssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionInput)
  })
_sym_db.RegisterMessage(AssertionInput)

AssertionResult = _reflection.GeneratedProtocolMessageType('AssertionResult', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionResult)
  })
_sym_db.RegisterMessage(AssertionResult)

AssertionResultMetadata = _reflection.GeneratedProtocolMessageType('AssertionResultMetadata', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONRESULTMETADATA,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionResultMetadata)
  })
_sym_db.RegisterMessage(AssertionResultMetadata)

AssertionExecutionError = _reflection.GeneratedProtocolMessageType('AssertionExecutionError', (_message.Message,), {
  'DESCRIPTOR' : _ASSERTIONEXECUTIONERROR,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.AssertionExecutionError)
  })
_sym_db.RegisterMessage(AssertionExecutionError)

CrossZonePolicyFiltersFlowsAssertionInput = _reflection.GeneratedProtocolMessageType('CrossZonePolicyFiltersFlowsAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionInput)
  })
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionInput)

CrossZonePolicyFiltersFlowsAssertionResult = _reflection.GeneratedProtocolMessageType('CrossZonePolicyFiltersFlowsAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.Element)
    })
  ,

  'FailureResult' : _reflection.GeneratedProtocolMessageType('FailureResult', (_message.Message,), {
    'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT_FAILURERESULT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult.FailureResult)
    })
  ,
  'DESCRIPTOR' : _CROSSZONEPOLICYFILTERSFLOWSASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.CrossZonePolicyFiltersFlowsAssertionResult)
  })
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult)
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult.Element)
_sym_db.RegisterMessage(CrossZonePolicyFiltersFlowsAssertionResult.FailureResult)

DevicesHaveRoutesAssertionInput = _reflection.GeneratedProtocolMessageType('DevicesHaveRoutesAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionInput)
  })
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionInput)

DevicesHaveRoutesAssertionResult = _reflection.GeneratedProtocolMessageType('DevicesHaveRoutesAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult.Element)
    })
  ,
  'DESCRIPTOR' : _DEVICESHAVEROUTESASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveRoutesAssertionResult)
  })
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionResult)
_sym_db.RegisterMessage(DevicesHaveRoutesAssertionResult.Element)

DevicesHaveServersAssertionInput = _reflection.GeneratedProtocolMessageType('DevicesHaveServersAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _DEVICESHAVESERVERSASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveServersAssertionInput)
  })
_sym_db.RegisterMessage(DevicesHaveServersAssertionInput)

DevicesHaveServersAssertionResult = _reflection.GeneratedProtocolMessageType('DevicesHaveServersAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _DEVICESHAVESERVERSASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult.Element)
    })
  ,
  'DESCRIPTOR' : _DEVICESHAVESERVERSASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DevicesHaveServersAssertionResult)
  })
_sym_db.RegisterMessage(DevicesHaveServersAssertionResult)
_sym_db.RegisterMessage(DevicesHaveServersAssertionResult.Element)

SecurityGroupDoesNotHaveRuleAssertionInput = _reflection.GeneratedProtocolMessageType('SecurityGroupDoesNotHaveRuleAssertionInput', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPDOESNOTHAVERULEASSERTIONINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionInput)
  })
_sym_db.RegisterMessage(SecurityGroupDoesNotHaveRuleAssertionInput)

SecurityGroupDoesNotHaveRuleAssertionResult = _reflection.GeneratedProtocolMessageType('SecurityGroupDoesNotHaveRuleAssertionResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult.Element)
    })
  ,
  'DESCRIPTOR' : _SECURITYGROUPDOESNOTHAVERULEASSERTIONRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupDoesNotHaveRuleAssertionResult)
  })
_sym_db.RegisterMessage(SecurityGroupDoesNotHaveRuleAssertionResult)
_sym_db.RegisterMessage(SecurityGroupDoesNotHaveRuleAssertionResult.Element)

SgRulesBlockedByNaclInput = _reflection.GeneratedProtocolMessageType('SgRulesBlockedByNaclInput', (_message.Message,), {
  'DESCRIPTOR' : _SGRULESBLOCKEDBYNACLINPUT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SgRulesBlockedByNaclInput)
  })
_sym_db.RegisterMessage(SgRulesBlockedByNaclInput)

SgRulesBlockedByNaclResult = _reflection.GeneratedProtocolMessageType('SgRulesBlockedByNaclResult', (_message.Message,), {

  'Element' : _reflection.GeneratedProtocolMessageType('Element', (_message.Message,), {
    'DESCRIPTOR' : _SGRULESBLOCKEDBYNACLRESULT_ELEMENT,
    '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
    # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult.Element)
    })
  ,
  'DESCRIPTOR' : _SGRULESBLOCKEDBYNACLRESULT,
  '__module__' : 'intentionet.bfe.proto.assertions.core_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SgRulesBlockedByNaclResult)
  })
_sym_db.RegisterMessage(SgRulesBlockedByNaclResult)
_sym_db.RegisterMessage(SgRulesBlockedByNaclResult.Element)


# @@protoc_insertion_point(module_scope)
