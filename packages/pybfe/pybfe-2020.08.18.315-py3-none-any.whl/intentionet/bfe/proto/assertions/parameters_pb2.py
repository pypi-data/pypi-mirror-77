# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: intentionet/bfe/proto/assertions/parameters.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='intentionet/bfe/proto/assertions/parameters.proto',
  package='com.intentionet.bfe.assertions',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n1intentionet/bfe/proto/assertions/parameters.proto\x12\x1e\x63om.intentionet.bfe.assertions\x1a\x1bgoogle/protobuf/empty.proto\"\xf0\x01\n\x10\x44\x65viceFilterExpr\x12\x42\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.DeviceFilterAndExprH\x00\x12@\n\x02or\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.DeviceFilterOrExprH\x00\x12L\n\x08hostname\x18\x03 \x01(\x0b\x32\x38.com.intentionet.bfe.assertions.DeviceFilterHostnameExprH\x00\x42\x08\n\x06\x66ilter\"Y\n\x13\x44\x65viceFilterAndExpr\x12\x42\n\x08\x65lements\x18\x01 \x03(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExpr\"X\n\x12\x44\x65viceFilterOrExpr\x12\x42\n\x08\x65lements\x18\x01 \x03(\x0b\x32\x30.com.intentionet.bfe.assertions.DeviceFilterExpr\"3\n\x18\x44\x65viceFilterHostnameExpr\x12\x0f\n\x05regex\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"b\n\x19\x46irewallLocationMatchExpr\x12=\n\x04zone\x18\x01 \x01(\x0b\x32-.com.intentionet.bfe.assertions.ZoneMatchExprH\x00\x42\x06\n\x04\x65xpr\"\'\n\rZoneMatchExpr\x12\x0e\n\x04name\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\x94\x01\n\x16\x46irewallBehaviorExpect\x12M\n\x06\x61\x63tion\x18\x01 \x01(\x0e\x32=.com.intentionet.bfe.assertions.FirewallBehaviorExpect.Action\"+\n\x06\x41\x63tion\x12\x0b\n\x07UNKNOWN\x10\x00\x12\n\n\x06PERMIT\x10\x01\x12\x08\n\x04\x44\x45NY\x10\x02\"\xf6\x02\n\x0e\x46lowFilterExpr\x12@\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.FlowFilterAndExprH\x00\x12>\n\x02or\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.FlowFilterOrExprH\x00\x12=\n\x03not\x18\x03 \x01(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExprH\x00\x12\x45\n\x06src_ip\x18\x04 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprH\x00\x12\x45\n\x06\x64st_ip\x18\x05 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.IpAddressFilterExprH\x00\x12\r\n\x03\x61pp\x18\x06 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"I\n\x13IpAddressFilterExpr\x12\x15\n\x0b\x65xact_match\x18\x01 \x01(\tH\x00\x12\x13\n\tin_prefix\x18\x02 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"U\n\x11\x46lowFilterAndExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExpr\"T\n\x10\x46lowFilterOrExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.FlowFilterExpr\"\xb0\x02\n\x0eMatchRouteExpr\x12@\n\x03\x61nd\x18\x01 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchRouteAndExprH\x00\x12>\n\x02or\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchRouteOrExprH\x00\x12H\n\x07network\x18\x03 \x01(\x0b\x32\x35.com.intentionet.bfe.assertions.MatchRouteNetworkExprH\x00\x12J\n\x08protocol\x18\x04 \x01(\x0b\x32\x36.com.intentionet.bfe.assertions.MatchRouteProtocolExprH\x00\x42\x06\n\x04\x65xpr\"U\n\x11MatchRouteAndExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExpr\"T\n\x10MatchRouteOrExpr\x12@\n\x08\x65lements\x18\x01 \x03(\x0b\x32..com.intentionet.bfe.assertions.MatchRouteExpr\"0\n\x15MatchRouteNetworkExpr\x12\x0f\n\x05\x65xact\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\xe5\x03\n\x16MatchRouteProtocolExpr\x12+\n\tconnected\x18\x01 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12\'\n\x05local\x18\x02 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12(\n\x06static\x18\x03 \x01(\x0b\x32\x16.google.protobuf.EmptyH\x00\x12K\n\x04ospf\x18\x04 \x01(\x0e\x32;.com.intentionet.bfe.assertions.MatchRouteProtocolExpr.OspfH\x00\x12I\n\x03\x62gp\x18\x05 \x01(\x0e\x32:.com.intentionet.bfe.assertions.MatchRouteProtocolExpr.BgpH\x00\"\x7f\n\x04Ospf\x12\x0c\n\x08OSPF_ANY\x10\x00\x12\t\n\x05INTRA\x10\x01\x12\t\n\x05INTER\x10\x02\x12\t\n\x05\x45XT_1\x10\x03\x12\t\n\x05\x45XT_2\x10\x04\x12\x0b\n\x07\x45XT_ANY\x10\x05\x12\x10\n\x0c\x45XT_NSSA_ANY\x10\x06\x12\x0e\n\nEXT_NSSA_1\x10\x07\x12\x0e\n\nEXT_NSSA_2\x10\x08\"&\n\x03\x42gp\x12\x0b\n\x07\x42GP_ANY\x10\x00\x12\x08\n\x04IBGP\x10\x01\x12\x08\n\x04\x45\x42GP\x10\x02\x42\n\n\x08protocol\"\xeb\x02\n\x0cMatchServers\x12?\n\x03ntp\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12?\n\x03\x64ns\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12\x45\n\tsnmp_trap\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12\x43\n\x07logging\x18\x04 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x12\x42\n\x06tacacs\x18\x05 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.MatchServersExprH\x00\x42\t\n\x07servers\"]\n\x10MatchServersExpr\x12\x41\n\x03set\x18\x02 \x01(\x0b\x32\x32.com.intentionet.bfe.assertions.MatchStringSetExprH\x00\x42\x06\n\x04\x65xpr\"\xcc\x02\n\x17SecurityGroupFilterExpr\x12G\n\x02or\x18\x01 \x01(\x0b\x32\x39.com.intentionet.bfe.assertions.SecurityGroupFilterOrExprH\x00\x12I\n\x03\x61nd\x18\x02 \x01(\x0b\x32:.com.intentionet.bfe.assertions.SecurityGroupFilterAndExprH\x00\x12\x46\n\x03not\x18\x03 \x01(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExprH\x00\x12K\n\x04name\x18\x04 \x01(\x0b\x32;.com.intentionet.bfe.assertions.SecurityGroupFilterNameExprH\x00\x42\x08\n\x06\x66ilter\"f\n\x19SecurityGroupFilterOrExpr\x12I\n\x08\x65lements\x18\x01 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExpr\"g\n\x1aSecurityGroupFilterAndExpr\x12I\n\x08\x65lements\x18\x01 \x03(\x0b\x32\x37.com.intentionet.bfe.assertions.SecurityGroupFilterExpr\"6\n\x1bSecurityGroupFilterNameExpr\x12\x0f\n\x05regex\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"\xa4\x02\n\x17MatchSecurityGroupRules\x12N\n\x07inbound\x18\x01 \x01(\x0b\x32;.com.intentionet.bfe.assertions.MatchSecurityGroupRulesExprH\x00\x12O\n\x08outbound\x18\x02 \x01(\x0b\x32;.com.intentionet.bfe.assertions.MatchSecurityGroupRulesExprH\x00\x12[\n\x14inbound_and_outbound\x18\x03 \x01(\x0b\x32;.com.intentionet.bfe.assertions.MatchSecurityGroupRulesExprH\x00\x42\x0b\n\trule_type\"\xe7\x03\n\x1bMatchSecurityGroupRulesExpr\x12M\n\x03\x61nd\x18\x01 \x01(\x0b\x32>.com.intentionet.bfe.assertions.MatchSecurityGroupRulesAndExprH\x00\x12K\n\x02or\x18\x02 \x01(\x0b\x32=.com.intentionet.bfe.assertions.MatchSecurityGroupRulesOrExprH\x00\x12J\n\x03not\x18\x03 \x01(\x0b\x32;.com.intentionet.bfe.assertions.MatchSecurityGroupRulesExprH\x00\x12G\n\x08protocol\x18\x04 \x01(\x0b\x32\x33.com.intentionet.bfe.assertions.MatchIpProtocolExprH\x00\x12G\n\nport_range\x18\x05 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIntRangeExprH\x00\x12\x46\n\tip_prefix\x18\x06 \x01(\x0b\x32\x31.com.intentionet.bfe.assertions.MatchIpPrefixExprH\x00\x42\x06\n\x04\x65xpr\"o\n\x1eMatchSecurityGroupRulesAndExpr\x12M\n\x08\x65lements\x18\x01 \x03(\x0b\x32;.com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr\"n\n\x1dMatchSecurityGroupRulesOrExpr\x12M\n\x08\x65lements\x18\x01 \x03(\x0b\x32;.com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr\"\xea\x01\n\x12MatchStringSetExpr\x12\x42\n\x06\x65quals\x18\x01 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00\x12\x43\n\x07has_any\x18\x02 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00\x12\x43\n\x07has_all\x18\x03 \x01(\x0b\x32\x30.com.intentionet.bfe.assertions.StringCollectionH\x00\x42\x06\n\x04\x65xpr\"1\n\x13MatchIpProtocolExpr\x12\x12\n\x08includes\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"[\n\x11MatchIntRangeExpr\x12>\n\nintersects\x18\x01 \x01(\x0b\x32(.com.intentionet.bfe.assertions.IntRangeH\x00\x42\x06\n\x04\x65xpr\"/\n\x11MatchIpPrefixExpr\x12\x12\n\x08includes\x18\x01 \x01(\tH\x00\x42\x06\n\x04\x65xpr\"!\n\x10StringCollection\x12\r\n\x05items\x18\x01 \x03(\t\"&\n\x08IntRange\x12\r\n\x05start\x18\x01 \x01(\x05\x12\x0b\n\x03\x65nd\x18\x02 \x01(\x05\x62\x06proto3')
  ,
  dependencies=[google_dot_protobuf_dot_empty__pb2.DESCRIPTOR,])



_FIREWALLBEHAVIOREXPECT_ACTION = _descriptor.EnumDescriptor(
  name='Action',
  full_name='com.intentionet.bfe.assertions.FirewallBehaviorExpect.Action',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='UNKNOWN', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='PERMIT', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='DENY', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=838,
  serialized_end=881,
)
_sym_db.RegisterEnumDescriptor(_FIREWALLBEHAVIOREXPECT_ACTION)

_MATCHROUTEPROTOCOLEXPR_OSPF = _descriptor.EnumDescriptor(
  name='Ospf',
  full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.Ospf',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OSPF_ANY', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTRA', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='INTER', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_1', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_2', index=4, number=4,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_ANY', index=5, number=5,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_NSSA_ANY', index=6, number=6,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_NSSA_1', index=7, number=7,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EXT_NSSA_2', index=8, number=8,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2345,
  serialized_end=2472,
)
_sym_db.RegisterEnumDescriptor(_MATCHROUTEPROTOCOLEXPR_OSPF)

_MATCHROUTEPROTOCOLEXPR_BGP = _descriptor.EnumDescriptor(
  name='Bgp',
  full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.Bgp',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='BGP_ANY', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='IBGP', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='EBGP', index=2, number=2,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=2474,
  serialized_end=2512,
)
_sym_db.RegisterEnumDescriptor(_MATCHROUTEPROTOCOLEXPR_BGP)


_DEVICEFILTEREXPR = _descriptor.Descriptor(
  name='DeviceFilterExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.DeviceFilterExpr.and', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.DeviceFilterExpr.or', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='hostname', full_name='com.intentionet.bfe.assertions.DeviceFilterExpr.hostname', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='filter', full_name='com.intentionet.bfe.assertions.DeviceFilterExpr.filter',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=115,
  serialized_end=355,
)


_DEVICEFILTERANDEXPR = _descriptor.Descriptor(
  name='DeviceFilterAndExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.DeviceFilterAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=357,
  serialized_end=446,
)


_DEVICEFILTEROREXPR = _descriptor.Descriptor(
  name='DeviceFilterOrExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.DeviceFilterOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=448,
  serialized_end=536,
)


_DEVICEFILTERHOSTNAMEEXPR = _descriptor.Descriptor(
  name='DeviceFilterHostnameExpr',
  full_name='com.intentionet.bfe.assertions.DeviceFilterHostnameExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regex', full_name='com.intentionet.bfe.assertions.DeviceFilterHostnameExpr.regex', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.DeviceFilterHostnameExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=538,
  serialized_end=589,
)


_FIREWALLLOCATIONMATCHEXPR = _descriptor.Descriptor(
  name='FirewallLocationMatchExpr',
  full_name='com.intentionet.bfe.assertions.FirewallLocationMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='zone', full_name='com.intentionet.bfe.assertions.FirewallLocationMatchExpr.zone', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.FirewallLocationMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=591,
  serialized_end=689,
)


_ZONEMATCHEXPR = _descriptor.Descriptor(
  name='ZoneMatchExpr',
  full_name='com.intentionet.bfe.assertions.ZoneMatchExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='name', full_name='com.intentionet.bfe.assertions.ZoneMatchExpr.name', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.ZoneMatchExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=691,
  serialized_end=730,
)


_FIREWALLBEHAVIOREXPECT = _descriptor.Descriptor(
  name='FirewallBehaviorExpect',
  full_name='com.intentionet.bfe.assertions.FirewallBehaviorExpect',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='action', full_name='com.intentionet.bfe.assertions.FirewallBehaviorExpect.action', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _FIREWALLBEHAVIOREXPECT_ACTION,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=733,
  serialized_end=881,
)


_FLOWFILTEREXPR = _descriptor.Descriptor(
  name='FlowFilterExpr',
  full_name='com.intentionet.bfe.assertions.FlowFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.and', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.or', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.not', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='src_ip', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.src_ip', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dst_ip', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.dst_ip', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='app', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.app', index=5,
      number=6, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.FlowFilterExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=884,
  serialized_end=1258,
)


_IPADDRESSFILTEREXPR = _descriptor.Descriptor(
  name='IpAddressFilterExpr',
  full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exact_match', full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr.exact_match', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='in_prefix', full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr.in_prefix', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.IpAddressFilterExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1260,
  serialized_end=1333,
)


_FLOWFILTERANDEXPR = _descriptor.Descriptor(
  name='FlowFilterAndExpr',
  full_name='com.intentionet.bfe.assertions.FlowFilterAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.FlowFilterAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1335,
  serialized_end=1420,
)


_FLOWFILTEROREXPR = _descriptor.Descriptor(
  name='FlowFilterOrExpr',
  full_name='com.intentionet.bfe.assertions.FlowFilterOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.FlowFilterOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1422,
  serialized_end=1506,
)


_MATCHROUTEEXPR = _descriptor.Descriptor(
  name='MatchRouteExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.and', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.or', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='network', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.network', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.protocol', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchRouteExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1509,
  serialized_end=1813,
)


_MATCHROUTEANDEXPR = _descriptor.Descriptor(
  name='MatchRouteAndExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.MatchRouteAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1815,
  serialized_end=1900,
)


_MATCHROUTEOREXPR = _descriptor.Descriptor(
  name='MatchRouteOrExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.MatchRouteOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=1902,
  serialized_end=1986,
)


_MATCHROUTENETWORKEXPR = _descriptor.Descriptor(
  name='MatchRouteNetworkExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteNetworkExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='exact', full_name='com.intentionet.bfe.assertions.MatchRouteNetworkExpr.exact', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchRouteNetworkExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=1988,
  serialized_end=2036,
)


_MATCHROUTEPROTOCOLEXPR = _descriptor.Descriptor(
  name='MatchRouteProtocolExpr',
  full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='connected', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.connected', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='local', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.local', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='static', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.static', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ospf', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.ospf', index=3,
      number=4, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='bgp', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.bgp', index=4,
      number=5, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
    _MATCHROUTEPROTOCOLEXPR_OSPF,
    _MATCHROUTEPROTOCOLEXPR_BGP,
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.MatchRouteProtocolExpr.protocol',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2039,
  serialized_end=2524,
)


_MATCHSERVERS = _descriptor.Descriptor(
  name='MatchServers',
  full_name='com.intentionet.bfe.assertions.MatchServers',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ntp', full_name='com.intentionet.bfe.assertions.MatchServers.ntp', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='dns', full_name='com.intentionet.bfe.assertions.MatchServers.dns', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='snmp_trap', full_name='com.intentionet.bfe.assertions.MatchServers.snmp_trap', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='logging', full_name='com.intentionet.bfe.assertions.MatchServers.logging', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='tacacs', full_name='com.intentionet.bfe.assertions.MatchServers.tacacs', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='servers', full_name='com.intentionet.bfe.assertions.MatchServers.servers',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2527,
  serialized_end=2890,
)


_MATCHSERVERSEXPR = _descriptor.Descriptor(
  name='MatchServersExpr',
  full_name='com.intentionet.bfe.assertions.MatchServersExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='set', full_name='com.intentionet.bfe.assertions.MatchServersExpr.set', index=0,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchServersExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2892,
  serialized_end=2985,
)


_SECURITYGROUPFILTEREXPR = _descriptor.Descriptor(
  name='SecurityGroupFilterExpr',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.or', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.and', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.not', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='name', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.name', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='filter', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterExpr.filter',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=2988,
  serialized_end=3320,
)


_SECURITYGROUPFILTEROREXPR = _descriptor.Descriptor(
  name='SecurityGroupFilterOrExpr',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilterOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3322,
  serialized_end=3424,
)


_SECURITYGROUPFILTERANDEXPR = _descriptor.Descriptor(
  name='SecurityGroupFilterAndExpr',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilterAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=3426,
  serialized_end=3529,
)


_SECURITYGROUPFILTERNAMEEXPR = _descriptor.Descriptor(
  name='SecurityGroupFilterNameExpr',
  full_name='com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='regex', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr.regex', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3531,
  serialized_end=3585,
)


_MATCHSECURITYGROUPRULES = _descriptor.Descriptor(
  name='MatchSecurityGroupRules',
  full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='inbound', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.inbound', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='outbound', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.outbound', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='inbound_and_outbound', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.inbound_and_outbound', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='rule_type', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRules.rule_type',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3588,
  serialized_end=3880,
)


_MATCHSECURITYGROUPRULESEXPR = _descriptor.Descriptor(
  name='MatchSecurityGroupRulesExpr',
  full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='and', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.and', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='or', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.or', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='not', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.not', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='protocol', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.protocol', index=3,
      number=4, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='port_range', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.port_range', index=4,
      number=5, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='ip_prefix', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.ip_prefix', index=5,
      number=6, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=3883,
  serialized_end=4370,
)


_MATCHSECURITYGROUPRULESANDEXPR = _descriptor.Descriptor(
  name='MatchSecurityGroupRulesAndExpr',
  full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesAndExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesAndExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4372,
  serialized_end=4483,
)


_MATCHSECURITYGROUPRULESOREXPR = _descriptor.Descriptor(
  name='MatchSecurityGroupRulesOrExpr',
  full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesOrExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='elements', full_name='com.intentionet.bfe.assertions.MatchSecurityGroupRulesOrExpr.elements', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=4485,
  serialized_end=4595,
)


_MATCHSTRINGSETEXPR = _descriptor.Descriptor(
  name='MatchStringSetExpr',
  full_name='com.intentionet.bfe.assertions.MatchStringSetExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='equals', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.equals', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_any', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.has_any', index=1,
      number=2, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='has_all', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.has_all', index=2,
      number=3, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchStringSetExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4598,
  serialized_end=4832,
)


_MATCHIPPROTOCOLEXPR = _descriptor.Descriptor(
  name='MatchIpProtocolExpr',
  full_name='com.intentionet.bfe.assertions.MatchIpProtocolExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='includes', full_name='com.intentionet.bfe.assertions.MatchIpProtocolExpr.includes', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchIpProtocolExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4834,
  serialized_end=4883,
)


_MATCHINTRANGEEXPR = _descriptor.Descriptor(
  name='MatchIntRangeExpr',
  full_name='com.intentionet.bfe.assertions.MatchIntRangeExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='intersects', full_name='com.intentionet.bfe.assertions.MatchIntRangeExpr.intersects', index=0,
      number=1, type=11, cpp_type=10, label=1,
      has_default_value=False, default_value=None,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchIntRangeExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4885,
  serialized_end=4976,
)


_MATCHIPPREFIXEXPR = _descriptor.Descriptor(
  name='MatchIpPrefixExpr',
  full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='includes', full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr.includes', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
    _descriptor.OneofDescriptor(
      name='expr', full_name='com.intentionet.bfe.assertions.MatchIpPrefixExpr.expr',
      index=0, containing_type=None, fields=[]),
  ],
  serialized_start=4978,
  serialized_end=5025,
)


_STRINGCOLLECTION = _descriptor.Descriptor(
  name='StringCollection',
  full_name='com.intentionet.bfe.assertions.StringCollection',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='items', full_name='com.intentionet.bfe.assertions.StringCollection.items', index=0,
      number=1, type=9, cpp_type=9, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5027,
  serialized_end=5060,
)


_INTRANGE = _descriptor.Descriptor(
  name='IntRange',
  full_name='com.intentionet.bfe.assertions.IntRange',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='start', full_name='com.intentionet.bfe.assertions.IntRange.start', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='end', full_name='com.intentionet.bfe.assertions.IntRange.end', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=5062,
  serialized_end=5100,
)

_DEVICEFILTEREXPR.fields_by_name['and'].message_type = _DEVICEFILTERANDEXPR
_DEVICEFILTEREXPR.fields_by_name['or'].message_type = _DEVICEFILTEROREXPR
_DEVICEFILTEREXPR.fields_by_name['hostname'].message_type = _DEVICEFILTERHOSTNAMEEXPR
_DEVICEFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _DEVICEFILTEREXPR.fields_by_name['and'])
_DEVICEFILTEREXPR.fields_by_name['and'].containing_oneof = _DEVICEFILTEREXPR.oneofs_by_name['filter']
_DEVICEFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _DEVICEFILTEREXPR.fields_by_name['or'])
_DEVICEFILTEREXPR.fields_by_name['or'].containing_oneof = _DEVICEFILTEREXPR.oneofs_by_name['filter']
_DEVICEFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _DEVICEFILTEREXPR.fields_by_name['hostname'])
_DEVICEFILTEREXPR.fields_by_name['hostname'].containing_oneof = _DEVICEFILTEREXPR.oneofs_by_name['filter']
_DEVICEFILTERANDEXPR.fields_by_name['elements'].message_type = _DEVICEFILTEREXPR
_DEVICEFILTEROREXPR.fields_by_name['elements'].message_type = _DEVICEFILTEREXPR
_DEVICEFILTERHOSTNAMEEXPR.oneofs_by_name['expr'].fields.append(
  _DEVICEFILTERHOSTNAMEEXPR.fields_by_name['regex'])
_DEVICEFILTERHOSTNAMEEXPR.fields_by_name['regex'].containing_oneof = _DEVICEFILTERHOSTNAMEEXPR.oneofs_by_name['expr']
_FIREWALLLOCATIONMATCHEXPR.fields_by_name['zone'].message_type = _ZONEMATCHEXPR
_FIREWALLLOCATIONMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _FIREWALLLOCATIONMATCHEXPR.fields_by_name['zone'])
_FIREWALLLOCATIONMATCHEXPR.fields_by_name['zone'].containing_oneof = _FIREWALLLOCATIONMATCHEXPR.oneofs_by_name['expr']
_ZONEMATCHEXPR.oneofs_by_name['expr'].fields.append(
  _ZONEMATCHEXPR.fields_by_name['name'])
_ZONEMATCHEXPR.fields_by_name['name'].containing_oneof = _ZONEMATCHEXPR.oneofs_by_name['expr']
_FIREWALLBEHAVIOREXPECT.fields_by_name['action'].enum_type = _FIREWALLBEHAVIOREXPECT_ACTION
_FIREWALLBEHAVIOREXPECT_ACTION.containing_type = _FIREWALLBEHAVIOREXPECT
_FLOWFILTEREXPR.fields_by_name['and'].message_type = _FLOWFILTERANDEXPR
_FLOWFILTEREXPR.fields_by_name['or'].message_type = _FLOWFILTEROREXPR
_FLOWFILTEREXPR.fields_by_name['not'].message_type = _FLOWFILTEREXPR
_FLOWFILTEREXPR.fields_by_name['src_ip'].message_type = _IPADDRESSFILTEREXPR
_FLOWFILTEREXPR.fields_by_name['dst_ip'].message_type = _IPADDRESSFILTEREXPR
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['and'])
_FLOWFILTEREXPR.fields_by_name['and'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['or'])
_FLOWFILTEREXPR.fields_by_name['or'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['not'])
_FLOWFILTEREXPR.fields_by_name['not'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['src_ip'])
_FLOWFILTEREXPR.fields_by_name['src_ip'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['dst_ip'])
_FLOWFILTEREXPR.fields_by_name['dst_ip'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _FLOWFILTEREXPR.fields_by_name['app'])
_FLOWFILTEREXPR.fields_by_name['app'].containing_oneof = _FLOWFILTEREXPR.oneofs_by_name['expr']
_IPADDRESSFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _IPADDRESSFILTEREXPR.fields_by_name['exact_match'])
_IPADDRESSFILTEREXPR.fields_by_name['exact_match'].containing_oneof = _IPADDRESSFILTEREXPR.oneofs_by_name['expr']
_IPADDRESSFILTEREXPR.oneofs_by_name['expr'].fields.append(
  _IPADDRESSFILTEREXPR.fields_by_name['in_prefix'])
_IPADDRESSFILTEREXPR.fields_by_name['in_prefix'].containing_oneof = _IPADDRESSFILTEREXPR.oneofs_by_name['expr']
_FLOWFILTERANDEXPR.fields_by_name['elements'].message_type = _FLOWFILTEREXPR
_FLOWFILTEROREXPR.fields_by_name['elements'].message_type = _FLOWFILTEREXPR
_MATCHROUTEEXPR.fields_by_name['and'].message_type = _MATCHROUTEANDEXPR
_MATCHROUTEEXPR.fields_by_name['or'].message_type = _MATCHROUTEOREXPR
_MATCHROUTEEXPR.fields_by_name['network'].message_type = _MATCHROUTENETWORKEXPR
_MATCHROUTEEXPR.fields_by_name['protocol'].message_type = _MATCHROUTEPROTOCOLEXPR
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['and'])
_MATCHROUTEEXPR.fields_by_name['and'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['or'])
_MATCHROUTEEXPR.fields_by_name['or'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['network'])
_MATCHROUTEEXPR.fields_by_name['network'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTEEXPR.fields_by_name['protocol'])
_MATCHROUTEEXPR.fields_by_name['protocol'].containing_oneof = _MATCHROUTEEXPR.oneofs_by_name['expr']
_MATCHROUTEANDEXPR.fields_by_name['elements'].message_type = _MATCHROUTEEXPR
_MATCHROUTEOREXPR.fields_by_name['elements'].message_type = _MATCHROUTEEXPR
_MATCHROUTENETWORKEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHROUTENETWORKEXPR.fields_by_name['exact'])
_MATCHROUTENETWORKEXPR.fields_by_name['exact'].containing_oneof = _MATCHROUTENETWORKEXPR.oneofs_by_name['expr']
_MATCHROUTEPROTOCOLEXPR.fields_by_name['connected'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHROUTEPROTOCOLEXPR.fields_by_name['local'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHROUTEPROTOCOLEXPR.fields_by_name['static'].message_type = google_dot_protobuf_dot_empty__pb2._EMPTY
_MATCHROUTEPROTOCOLEXPR.fields_by_name['ospf'].enum_type = _MATCHROUTEPROTOCOLEXPR_OSPF
_MATCHROUTEPROTOCOLEXPR.fields_by_name['bgp'].enum_type = _MATCHROUTEPROTOCOLEXPR_BGP
_MATCHROUTEPROTOCOLEXPR_OSPF.containing_type = _MATCHROUTEPROTOCOLEXPR
_MATCHROUTEPROTOCOLEXPR_BGP.containing_type = _MATCHROUTEPROTOCOLEXPR
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['connected'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['connected'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['local'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['local'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['static'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['static'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['ospf'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['ospf'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol'].fields.append(
  _MATCHROUTEPROTOCOLEXPR.fields_by_name['bgp'])
_MATCHROUTEPROTOCOLEXPR.fields_by_name['bgp'].containing_oneof = _MATCHROUTEPROTOCOLEXPR.oneofs_by_name['protocol']
_MATCHSERVERS.fields_by_name['ntp'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['dns'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['snmp_trap'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['logging'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.fields_by_name['tacacs'].message_type = _MATCHSERVERSEXPR
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['ntp'])
_MATCHSERVERS.fields_by_name['ntp'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['dns'])
_MATCHSERVERS.fields_by_name['dns'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['snmp_trap'])
_MATCHSERVERS.fields_by_name['snmp_trap'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['logging'])
_MATCHSERVERS.fields_by_name['logging'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERS.oneofs_by_name['servers'].fields.append(
  _MATCHSERVERS.fields_by_name['tacacs'])
_MATCHSERVERS.fields_by_name['tacacs'].containing_oneof = _MATCHSERVERS.oneofs_by_name['servers']
_MATCHSERVERSEXPR.fields_by_name['set'].message_type = _MATCHSTRINGSETEXPR
_MATCHSERVERSEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSERVERSEXPR.fields_by_name['set'])
_MATCHSERVERSEXPR.fields_by_name['set'].containing_oneof = _MATCHSERVERSEXPR.oneofs_by_name['expr']
_SECURITYGROUPFILTEREXPR.fields_by_name['or'].message_type = _SECURITYGROUPFILTEROREXPR
_SECURITYGROUPFILTEREXPR.fields_by_name['and'].message_type = _SECURITYGROUPFILTERANDEXPR
_SECURITYGROUPFILTEREXPR.fields_by_name['not'].message_type = _SECURITYGROUPFILTEREXPR
_SECURITYGROUPFILTEREXPR.fields_by_name['name'].message_type = _SECURITYGROUPFILTERNAMEEXPR
_SECURITYGROUPFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _SECURITYGROUPFILTEREXPR.fields_by_name['or'])
_SECURITYGROUPFILTEREXPR.fields_by_name['or'].containing_oneof = _SECURITYGROUPFILTEREXPR.oneofs_by_name['filter']
_SECURITYGROUPFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _SECURITYGROUPFILTEREXPR.fields_by_name['and'])
_SECURITYGROUPFILTEREXPR.fields_by_name['and'].containing_oneof = _SECURITYGROUPFILTEREXPR.oneofs_by_name['filter']
_SECURITYGROUPFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _SECURITYGROUPFILTEREXPR.fields_by_name['not'])
_SECURITYGROUPFILTEREXPR.fields_by_name['not'].containing_oneof = _SECURITYGROUPFILTEREXPR.oneofs_by_name['filter']
_SECURITYGROUPFILTEREXPR.oneofs_by_name['filter'].fields.append(
  _SECURITYGROUPFILTEREXPR.fields_by_name['name'])
_SECURITYGROUPFILTEREXPR.fields_by_name['name'].containing_oneof = _SECURITYGROUPFILTEREXPR.oneofs_by_name['filter']
_SECURITYGROUPFILTEROREXPR.fields_by_name['elements'].message_type = _SECURITYGROUPFILTEREXPR
_SECURITYGROUPFILTERANDEXPR.fields_by_name['elements'].message_type = _SECURITYGROUPFILTEREXPR
_SECURITYGROUPFILTERNAMEEXPR.oneofs_by_name['expr'].fields.append(
  _SECURITYGROUPFILTERNAMEEXPR.fields_by_name['regex'])
_SECURITYGROUPFILTERNAMEEXPR.fields_by_name['regex'].containing_oneof = _SECURITYGROUPFILTERNAMEEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULES.fields_by_name['inbound'].message_type = _MATCHSECURITYGROUPRULESEXPR
_MATCHSECURITYGROUPRULES.fields_by_name['outbound'].message_type = _MATCHSECURITYGROUPRULESEXPR
_MATCHSECURITYGROUPRULES.fields_by_name['inbound_and_outbound'].message_type = _MATCHSECURITYGROUPRULESEXPR
_MATCHSECURITYGROUPRULES.oneofs_by_name['rule_type'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['inbound'])
_MATCHSECURITYGROUPRULES.fields_by_name['inbound'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['rule_type']
_MATCHSECURITYGROUPRULES.oneofs_by_name['rule_type'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['outbound'])
_MATCHSECURITYGROUPRULES.fields_by_name['outbound'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['rule_type']
_MATCHSECURITYGROUPRULES.oneofs_by_name['rule_type'].fields.append(
  _MATCHSECURITYGROUPRULES.fields_by_name['inbound_and_outbound'])
_MATCHSECURITYGROUPRULES.fields_by_name['inbound_and_outbound'].containing_oneof = _MATCHSECURITYGROUPRULES.oneofs_by_name['rule_type']
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['and'].message_type = _MATCHSECURITYGROUPRULESANDEXPR
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['or'].message_type = _MATCHSECURITYGROUPRULESOREXPR
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['not'].message_type = _MATCHSECURITYGROUPRULESEXPR
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['protocol'].message_type = _MATCHIPPROTOCOLEXPR
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['port_range'].message_type = _MATCHINTRANGEEXPR
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['ip_prefix'].message_type = _MATCHIPPREFIXEXPR
_MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSECURITYGROUPRULESEXPR.fields_by_name['and'])
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['and'].containing_oneof = _MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSECURITYGROUPRULESEXPR.fields_by_name['or'])
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['or'].containing_oneof = _MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSECURITYGROUPRULESEXPR.fields_by_name['not'])
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['not'].containing_oneof = _MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSECURITYGROUPRULESEXPR.fields_by_name['protocol'])
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['protocol'].containing_oneof = _MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSECURITYGROUPRULESEXPR.fields_by_name['port_range'])
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['port_range'].containing_oneof = _MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSECURITYGROUPRULESEXPR.fields_by_name['ip_prefix'])
_MATCHSECURITYGROUPRULESEXPR.fields_by_name['ip_prefix'].containing_oneof = _MATCHSECURITYGROUPRULESEXPR.oneofs_by_name['expr']
_MATCHSECURITYGROUPRULESANDEXPR.fields_by_name['elements'].message_type = _MATCHSECURITYGROUPRULESEXPR
_MATCHSECURITYGROUPRULESOREXPR.fields_by_name['elements'].message_type = _MATCHSECURITYGROUPRULESEXPR
_MATCHSTRINGSETEXPR.fields_by_name['equals'].message_type = _STRINGCOLLECTION
_MATCHSTRINGSETEXPR.fields_by_name['has_any'].message_type = _STRINGCOLLECTION
_MATCHSTRINGSETEXPR.fields_by_name['has_all'].message_type = _STRINGCOLLECTION
_MATCHSTRINGSETEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSTRINGSETEXPR.fields_by_name['equals'])
_MATCHSTRINGSETEXPR.fields_by_name['equals'].containing_oneof = _MATCHSTRINGSETEXPR.oneofs_by_name['expr']
_MATCHSTRINGSETEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSTRINGSETEXPR.fields_by_name['has_any'])
_MATCHSTRINGSETEXPR.fields_by_name['has_any'].containing_oneof = _MATCHSTRINGSETEXPR.oneofs_by_name['expr']
_MATCHSTRINGSETEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHSTRINGSETEXPR.fields_by_name['has_all'])
_MATCHSTRINGSETEXPR.fields_by_name['has_all'].containing_oneof = _MATCHSTRINGSETEXPR.oneofs_by_name['expr']
_MATCHIPPROTOCOLEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHIPPROTOCOLEXPR.fields_by_name['includes'])
_MATCHIPPROTOCOLEXPR.fields_by_name['includes'].containing_oneof = _MATCHIPPROTOCOLEXPR.oneofs_by_name['expr']
_MATCHINTRANGEEXPR.fields_by_name['intersects'].message_type = _INTRANGE
_MATCHINTRANGEEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHINTRANGEEXPR.fields_by_name['intersects'])
_MATCHINTRANGEEXPR.fields_by_name['intersects'].containing_oneof = _MATCHINTRANGEEXPR.oneofs_by_name['expr']
_MATCHIPPREFIXEXPR.oneofs_by_name['expr'].fields.append(
  _MATCHIPPREFIXEXPR.fields_by_name['includes'])
_MATCHIPPREFIXEXPR.fields_by_name['includes'].containing_oneof = _MATCHIPPREFIXEXPR.oneofs_by_name['expr']
DESCRIPTOR.message_types_by_name['DeviceFilterExpr'] = _DEVICEFILTEREXPR
DESCRIPTOR.message_types_by_name['DeviceFilterAndExpr'] = _DEVICEFILTERANDEXPR
DESCRIPTOR.message_types_by_name['DeviceFilterOrExpr'] = _DEVICEFILTEROREXPR
DESCRIPTOR.message_types_by_name['DeviceFilterHostnameExpr'] = _DEVICEFILTERHOSTNAMEEXPR
DESCRIPTOR.message_types_by_name['FirewallLocationMatchExpr'] = _FIREWALLLOCATIONMATCHEXPR
DESCRIPTOR.message_types_by_name['ZoneMatchExpr'] = _ZONEMATCHEXPR
DESCRIPTOR.message_types_by_name['FirewallBehaviorExpect'] = _FIREWALLBEHAVIOREXPECT
DESCRIPTOR.message_types_by_name['FlowFilterExpr'] = _FLOWFILTEREXPR
DESCRIPTOR.message_types_by_name['IpAddressFilterExpr'] = _IPADDRESSFILTEREXPR
DESCRIPTOR.message_types_by_name['FlowFilterAndExpr'] = _FLOWFILTERANDEXPR
DESCRIPTOR.message_types_by_name['FlowFilterOrExpr'] = _FLOWFILTEROREXPR
DESCRIPTOR.message_types_by_name['MatchRouteExpr'] = _MATCHROUTEEXPR
DESCRIPTOR.message_types_by_name['MatchRouteAndExpr'] = _MATCHROUTEANDEXPR
DESCRIPTOR.message_types_by_name['MatchRouteOrExpr'] = _MATCHROUTEOREXPR
DESCRIPTOR.message_types_by_name['MatchRouteNetworkExpr'] = _MATCHROUTENETWORKEXPR
DESCRIPTOR.message_types_by_name['MatchRouteProtocolExpr'] = _MATCHROUTEPROTOCOLEXPR
DESCRIPTOR.message_types_by_name['MatchServers'] = _MATCHSERVERS
DESCRIPTOR.message_types_by_name['MatchServersExpr'] = _MATCHSERVERSEXPR
DESCRIPTOR.message_types_by_name['SecurityGroupFilterExpr'] = _SECURITYGROUPFILTEREXPR
DESCRIPTOR.message_types_by_name['SecurityGroupFilterOrExpr'] = _SECURITYGROUPFILTEROREXPR
DESCRIPTOR.message_types_by_name['SecurityGroupFilterAndExpr'] = _SECURITYGROUPFILTERANDEXPR
DESCRIPTOR.message_types_by_name['SecurityGroupFilterNameExpr'] = _SECURITYGROUPFILTERNAMEEXPR
DESCRIPTOR.message_types_by_name['MatchSecurityGroupRules'] = _MATCHSECURITYGROUPRULES
DESCRIPTOR.message_types_by_name['MatchSecurityGroupRulesExpr'] = _MATCHSECURITYGROUPRULESEXPR
DESCRIPTOR.message_types_by_name['MatchSecurityGroupRulesAndExpr'] = _MATCHSECURITYGROUPRULESANDEXPR
DESCRIPTOR.message_types_by_name['MatchSecurityGroupRulesOrExpr'] = _MATCHSECURITYGROUPRULESOREXPR
DESCRIPTOR.message_types_by_name['MatchStringSetExpr'] = _MATCHSTRINGSETEXPR
DESCRIPTOR.message_types_by_name['MatchIpProtocolExpr'] = _MATCHIPPROTOCOLEXPR
DESCRIPTOR.message_types_by_name['MatchIntRangeExpr'] = _MATCHINTRANGEEXPR
DESCRIPTOR.message_types_by_name['MatchIpPrefixExpr'] = _MATCHIPPREFIXEXPR
DESCRIPTOR.message_types_by_name['StringCollection'] = _STRINGCOLLECTION
DESCRIPTOR.message_types_by_name['IntRange'] = _INTRANGE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

DeviceFilterExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterExpr)
  })
_sym_db.RegisterMessage(DeviceFilterExpr)

DeviceFilterAndExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterAndExpr)
  })
_sym_db.RegisterMessage(DeviceFilterAndExpr)

DeviceFilterOrExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTEROREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterOrExpr)
  })
_sym_db.RegisterMessage(DeviceFilterOrExpr)

DeviceFilterHostnameExpr = _reflection.GeneratedProtocolMessageType('DeviceFilterHostnameExpr', (_message.Message,), {
  'DESCRIPTOR' : _DEVICEFILTERHOSTNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.DeviceFilterHostnameExpr)
  })
_sym_db.RegisterMessage(DeviceFilterHostnameExpr)

FirewallLocationMatchExpr = _reflection.GeneratedProtocolMessageType('FirewallLocationMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _FIREWALLLOCATIONMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FirewallLocationMatchExpr)
  })
_sym_db.RegisterMessage(FirewallLocationMatchExpr)

ZoneMatchExpr = _reflection.GeneratedProtocolMessageType('ZoneMatchExpr', (_message.Message,), {
  'DESCRIPTOR' : _ZONEMATCHEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.ZoneMatchExpr)
  })
_sym_db.RegisterMessage(ZoneMatchExpr)

FirewallBehaviorExpect = _reflection.GeneratedProtocolMessageType('FirewallBehaviorExpect', (_message.Message,), {
  'DESCRIPTOR' : _FIREWALLBEHAVIOREXPECT,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FirewallBehaviorExpect)
  })
_sym_db.RegisterMessage(FirewallBehaviorExpect)

FlowFilterExpr = _reflection.GeneratedProtocolMessageType('FlowFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterExpr)
  })
_sym_db.RegisterMessage(FlowFilterExpr)

IpAddressFilterExpr = _reflection.GeneratedProtocolMessageType('IpAddressFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _IPADDRESSFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.IpAddressFilterExpr)
  })
_sym_db.RegisterMessage(IpAddressFilterExpr)

FlowFilterAndExpr = _reflection.GeneratedProtocolMessageType('FlowFilterAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTERANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterAndExpr)
  })
_sym_db.RegisterMessage(FlowFilterAndExpr)

FlowFilterOrExpr = _reflection.GeneratedProtocolMessageType('FlowFilterOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _FLOWFILTEROREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.FlowFilterOrExpr)
  })
_sym_db.RegisterMessage(FlowFilterOrExpr)

MatchRouteExpr = _reflection.GeneratedProtocolMessageType('MatchRouteExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteExpr)
  })
_sym_db.RegisterMessage(MatchRouteExpr)

MatchRouteAndExpr = _reflection.GeneratedProtocolMessageType('MatchRouteAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteAndExpr)
  })
_sym_db.RegisterMessage(MatchRouteAndExpr)

MatchRouteOrExpr = _reflection.GeneratedProtocolMessageType('MatchRouteOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteOrExpr)
  })
_sym_db.RegisterMessage(MatchRouteOrExpr)

MatchRouteNetworkExpr = _reflection.GeneratedProtocolMessageType('MatchRouteNetworkExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTENETWORKEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteNetworkExpr)
  })
_sym_db.RegisterMessage(MatchRouteNetworkExpr)

MatchRouteProtocolExpr = _reflection.GeneratedProtocolMessageType('MatchRouteProtocolExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHROUTEPROTOCOLEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchRouteProtocolExpr)
  })
_sym_db.RegisterMessage(MatchRouteProtocolExpr)

MatchServers = _reflection.GeneratedProtocolMessageType('MatchServers', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSERVERS,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchServers)
  })
_sym_db.RegisterMessage(MatchServers)

MatchServersExpr = _reflection.GeneratedProtocolMessageType('MatchServersExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSERVERSEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchServersExpr)
  })
_sym_db.RegisterMessage(MatchServersExpr)

SecurityGroupFilterExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTEREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterExpr)

SecurityGroupFilterOrExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTEROREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterOrExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterOrExpr)

SecurityGroupFilterAndExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTERANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterAndExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterAndExpr)

SecurityGroupFilterNameExpr = _reflection.GeneratedProtocolMessageType('SecurityGroupFilterNameExpr', (_message.Message,), {
  'DESCRIPTOR' : _SECURITYGROUPFILTERNAMEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.SecurityGroupFilterNameExpr)
  })
_sym_db.RegisterMessage(SecurityGroupFilterNameExpr)

MatchSecurityGroupRules = _reflection.GeneratedProtocolMessageType('MatchSecurityGroupRules', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSECURITYGROUPRULES,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchSecurityGroupRules)
  })
_sym_db.RegisterMessage(MatchSecurityGroupRules)

MatchSecurityGroupRulesExpr = _reflection.GeneratedProtocolMessageType('MatchSecurityGroupRulesExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSECURITYGROUPRULESEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchSecurityGroupRulesExpr)
  })
_sym_db.RegisterMessage(MatchSecurityGroupRulesExpr)

MatchSecurityGroupRulesAndExpr = _reflection.GeneratedProtocolMessageType('MatchSecurityGroupRulesAndExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSECURITYGROUPRULESANDEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchSecurityGroupRulesAndExpr)
  })
_sym_db.RegisterMessage(MatchSecurityGroupRulesAndExpr)

MatchSecurityGroupRulesOrExpr = _reflection.GeneratedProtocolMessageType('MatchSecurityGroupRulesOrExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSECURITYGROUPRULESOREXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchSecurityGroupRulesOrExpr)
  })
_sym_db.RegisterMessage(MatchSecurityGroupRulesOrExpr)

MatchStringSetExpr = _reflection.GeneratedProtocolMessageType('MatchStringSetExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHSTRINGSETEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchStringSetExpr)
  })
_sym_db.RegisterMessage(MatchStringSetExpr)

MatchIpProtocolExpr = _reflection.GeneratedProtocolMessageType('MatchIpProtocolExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIPPROTOCOLEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIpProtocolExpr)
  })
_sym_db.RegisterMessage(MatchIpProtocolExpr)

MatchIntRangeExpr = _reflection.GeneratedProtocolMessageType('MatchIntRangeExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHINTRANGEEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIntRangeExpr)
  })
_sym_db.RegisterMessage(MatchIntRangeExpr)

MatchIpPrefixExpr = _reflection.GeneratedProtocolMessageType('MatchIpPrefixExpr', (_message.Message,), {
  'DESCRIPTOR' : _MATCHIPPREFIXEXPR,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.MatchIpPrefixExpr)
  })
_sym_db.RegisterMessage(MatchIpPrefixExpr)

StringCollection = _reflection.GeneratedProtocolMessageType('StringCollection', (_message.Message,), {
  'DESCRIPTOR' : _STRINGCOLLECTION,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.StringCollection)
  })
_sym_db.RegisterMessage(StringCollection)

IntRange = _reflection.GeneratedProtocolMessageType('IntRange', (_message.Message,), {
  'DESCRIPTOR' : _INTRANGE,
  '__module__' : 'intentionet.bfe.proto.assertions.parameters_pb2'
  # @@protoc_insertion_point(class_scope:com.intentionet.bfe.assertions.IntRange)
  })
_sym_db.RegisterMessage(IntRange)


# @@protoc_insertion_point(module_scope)
