Metadata-Version: 2.1
Name: hikari
Version: 2.0.0.dev67
Summary: A sane Discord API for Python 3 built on asyncio and good intentions
Home-page: https://github.com/nekokatt/hikari
Author: Nekokatt
Author-email: 3903853-nekokatt@users.noreply.gitlab.com
License: MIT
Project-URL: Documentation, https://nekokatt.github.io/hikari
Project-URL: Source, https://github.com/nekokatt/hikari
Project-URL: CI, https://travis-ci.org/github/nekokatt/hikari
Project-URL: Tracker, https://github.com/nekokatt/hikari/issues
Project-URL: Discord, https://discord.gg/Jx4cNGG
Description: **Note:** this API is still under active daily development, and is in a
        **alpha** stage. If you are looking to give feedback, or want to help us
        out, then feel free to join our [Discord server](https://discord.gg/Jx4cNGG) and
        chat to us. Any help is greatly appreciated, no matter what your experience
        level may be! :-)
        
        ---
        
        # _hikari_
        
        An opinionated, static typed Discord API for Python3 and asyncio.
        
        Built on good intentions and the hope that it will be extendable and reusable,
        rather than an obstacle for future development.
        
        ```py
        import hikari
        
        bot = hikari.Bot(token="...")
        
        
        @bot.listen()
        async def ping(event: hikari.MessageCreateEvent) -> None:
            # If a non-bot user sends a message "hk.ping", respond with "Pong!"
        
            if not event.message.author.is_bot and event.message.content.startswith("hk.ping"):
                await event.message.reply("Pong!")
        
        
        bot.run()
        ```
        
        Events are determined by the type annotation on the event parameter, or
        alternatively as a type passed to the `@bot.listen()` decorator, if you do not
        want to use type hints.
        
        ```py
        @bot.listen(hikari.MessageCreateEvent)
        async def ping(event):
            ...
        ```
        
        ----
        
        ## Installation
        
        Install hikari from PyPI with the following command:
        
        ```bash
        python -m pip install hikari -U --pre
        # Windows users may need to run this instead...
        py -3 -m pip install hikari -U --pre
        ```
        
        ----
        
        ## Additional libraries
        
        You may wish to use a command framework on top of Hikari so that you can start
        writing a bot quickly without implementing your own command handler.
        
        Hikari does not include a command framework by default, so you will want to pick
        a third party library to do it.
        
        - [`lightbulb`](https://gitlab.com/tandemdude/lightbulb) - a simple and easy to
          use command framework for Hikari.
        
Platform: UNKNOWN
Classifier: Development Status :: 3 - Alpha
Classifier: Environment :: Console
Classifier: Framework :: AsyncIO
Classifier: Intended Audience :: Developers
Classifier: License :: OSI Approved :: MIT License
Classifier: Natural Language :: English
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: Implementation :: CPython
Classifier: Programming Language :: Python :: Implementation :: Stackless
Classifier: Topic :: Communications :: Chat
Classifier: Topic :: Internet :: WWW/HTTP
Classifier: Topic :: Software Development :: Libraries
Classifier: Topic :: Software Development :: Libraries :: Application Frameworks
Classifier: Topic :: Software Development :: Libraries :: Python Modules
Classifier: Typing :: Typed
Provides: h
Provides: i
Provides: k
Provides: a
Provides: r
Provides: i
Requires-Python: >=3.8.0,<3.10
Description-Content-Type: text/markdown
