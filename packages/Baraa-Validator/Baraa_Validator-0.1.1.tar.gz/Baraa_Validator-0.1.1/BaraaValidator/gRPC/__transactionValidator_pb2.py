# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: transactionValidator.proto

from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


DESCRIPTOR = _descriptor.FileDescriptor(
  name='transactionValidator.proto',
  package='',
  syntax='proto3',
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_pb=b'\n\x1atransactionValidator.proto\"*\n\x0ftransactionFile\x12\x17\n\x0ftransactionFile\x18\x01 \x01(\t\"\x1a\n\x07isValid\x12\x0f\n\x07isValid\x18\x01 \x01(\x08\x32V\n\x1bTransactionValidatorService\x12\x37\n\x17validateTransactionFile\x12\x10.transactionFile\x1a\x08.isValid\"\x00\x62\x06proto3'
)




_TRANSACTIONFILE = _descriptor.Descriptor(
  name='transactionFile',
  full_name='transactionFile',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='transactionFile', full_name='transactionFile.transactionFile', index=0,
      number=1, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=b"".decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=30,
  serialized_end=72,
)


_ISVALID = _descriptor.Descriptor(
  name='isValid',
  full_name='isValid',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  create_key=_descriptor._internal_create_key,
  fields=[
    _descriptor.FieldDescriptor(
      name='isValid', full_name='isValid.isValid', index=0,
      number=1, type=8, cpp_type=7, label=1,
      has_default_value=False, default_value=False,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR,  create_key=_descriptor._internal_create_key),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=74,
  serialized_end=100,
)

DESCRIPTOR.message_types_by_name['transactionFile'] = _TRANSACTIONFILE
DESCRIPTOR.message_types_by_name['isValid'] = _ISVALID
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

transactionFile = _reflection.GeneratedProtocolMessageType('transactionFile', (_message.Message,), {
  'DESCRIPTOR' : _TRANSACTIONFILE,
  '__module__' : 'transactionValidator_pb2'
  # @@protoc_insertion_point(class_scope:transactionFile)
  })
_sym_db.RegisterMessage(transactionFile)

isValid = _reflection.GeneratedProtocolMessageType('isValid', (_message.Message,), {
  'DESCRIPTOR' : _ISVALID,
  '__module__' : 'transactionValidator_pb2'
  # @@protoc_insertion_point(class_scope:isValid)
  })
_sym_db.RegisterMessage(isValid)



_TRANSACTIONVALIDATORSERVICE = _descriptor.ServiceDescriptor(
  name='TransactionValidatorService',
  full_name='TransactionValidatorService',
  file=DESCRIPTOR,
  index=0,
  serialized_options=None,
  create_key=_descriptor._internal_create_key,
  serialized_start=102,
  serialized_end=188,
  methods=[
  _descriptor.MethodDescriptor(
    name='validateTransactionFile',
    full_name='TransactionValidatorService.validateTransactionFile',
    index=0,
    containing_service=None,
    input_type=_TRANSACTIONFILE,
    output_type=_ISVALID,
    serialized_options=None,
    create_key=_descriptor._internal_create_key,
  ),
])
_sym_db.RegisterServiceDescriptor(_TRANSACTIONVALIDATORSERVICE)

DESCRIPTOR.services_by_name['TransactionValidatorService'] = _TRANSACTIONVALIDATORSERVICE

# @@protoc_insertion_point(module_scope)
