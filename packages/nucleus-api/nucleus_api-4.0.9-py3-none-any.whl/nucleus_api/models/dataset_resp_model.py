# coding: utf-8

"""
    Nucleus API

    Nucleus text analytics APIs from SumUp Analytics. Example and documentation: https://www.sumup.ai/apis/#nucleus-documentation  # noqa: E501

    OpenAPI spec version: v4.0.9
    Contact: info@sumup.ai
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class DatasetRespModel(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'name': 'str',
        'date_modified': 'datetime',
        'time_range': 'list[datetime]',
        'permission': 'int'
    }

    attribute_map = {
        'name': 'name',
        'date_modified': 'date_modified',
        'time_range': 'time_range',
        'permission': 'permission'
    }

    def __init__(self, name=None, date_modified=None, time_range=None, permission=None):  # noqa: E501
        """DatasetRespModel - a model defined in Swagger"""  # noqa: E501

        self._name = None
        self._date_modified = None
        self._time_range = None
        self._permission = None
        self.discriminator = None

        if name is not None:
            self.name = name
        if date_modified is not None:
            self.date_modified = date_modified
        if time_range is not None:
            self.time_range = time_range
        if permission is not None:
            self.permission = permission

    @property
    def name(self):
        """Gets the name of this DatasetRespModel.  # noqa: E501

        Unique identifier of the dataset  # noqa: E501

        :return: The name of this DatasetRespModel.  # noqa: E501
        :rtype: str
        """
        return self._name

    @name.setter
    def name(self, name):
        """Sets the name of this DatasetRespModel.

        Unique identifier of the dataset  # noqa: E501

        :param name: The name of this DatasetRespModel.  # noqa: E501
        :type: str
        """

        self._name = name

    @property
    def date_modified(self):
        """Gets the date_modified of this DatasetRespModel.  # noqa: E501

        Datetime of last insertion or deletion of documents  # noqa: E501

        :return: The date_modified of this DatasetRespModel.  # noqa: E501
        :rtype: datetime
        """
        return self._date_modified

    @date_modified.setter
    def date_modified(self, date_modified):
        """Sets the date_modified of this DatasetRespModel.

        Datetime of last insertion or deletion of documents  # noqa: E501

        :param date_modified: The date_modified of this DatasetRespModel.  # noqa: E501
        :type: datetime
        """

        self._date_modified = date_modified

    @property
    def time_range(self):
        """Gets the time_range of this DatasetRespModel.  # noqa: E501

        Time range of the dataset  # noqa: E501

        :return: The time_range of this DatasetRespModel.  # noqa: E501
        :rtype: list[datetime]
        """
        return self._time_range

    @time_range.setter
    def time_range(self, time_range):
        """Sets the time_range of this DatasetRespModel.

        Time range of the dataset  # noqa: E501

        :param time_range: The time_range of this DatasetRespModel.  # noqa: E501
        :type: list[datetime]
        """

        self._time_range = time_range

    @property
    def permission(self):
        """Gets the permission of this DatasetRespModel.  # noqa: E501

        Dataset permission for the user: 1=Read-Only, 2=Read-Write  # noqa: E501

        :return: The permission of this DatasetRespModel.  # noqa: E501
        :rtype: int
        """
        return self._permission

    @permission.setter
    def permission(self, permission):
        """Sets the permission of this DatasetRespModel.

        Dataset permission for the user: 1=Read-Only, 2=Read-Write  # noqa: E501

        :param permission: The permission of this DatasetRespModel.  # noqa: E501
        :type: int
        """

        self._permission = permission

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(DatasetRespModel, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DatasetRespModel):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
