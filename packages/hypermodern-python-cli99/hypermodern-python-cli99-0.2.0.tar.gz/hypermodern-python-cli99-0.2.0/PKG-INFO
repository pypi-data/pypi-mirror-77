Metadata-Version: 2.1
Name: hypermodern-python-cli99
Version: 0.2.0
Summary: The hypermodern Python project
Home-page: https://github.com/cli99/hypermodern-python-cli99
License: MIT
Keywords: hypermodern
Author: Cheng Li
Requires-Python: >=3.7,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.7
Classifier: Programming Language :: Python :: 3.8
Requires-Dist: click (>=7.1.2,<8.0.0)
Requires-Dist: desert (>=2020.1.6,<2021.0.0)
Requires-Dist: importlib_metadata (>=1.7.0,<2.0.0); python_version < "3.8"
Requires-Dist: marshmallow (>=3.7.1,<4.0.0)
Requires-Dist: requests (>=2.24.0,<3.0.0)
Requires-Dist: torch (>=1.6.0,<2.0.0); python_version >= "3.8" and python_version < "4.0" and sys_platform == "linux"
Project-URL: Documentation, https://hypermodern-python-cli99.readthedocs.io
Project-URL: Repository, https://github.com/cli99/hypermodern-python-cli99
Description-Content-Type: text/markdown

# hypermodern-python-cli99

[![Tests](https://github.com/cli99/hypermodern-python-cli99/workflows/Tests/badge.svg)](https://github.com/cli99/hypermodern-python-cli99/actions?workflow=Tests)
[![Codecov](https://codecov.io/gh/cli99/hypermodern-python-cli99/branch/master/graph/badge.svg)](https://codecov.io/gh/cli99/hypermodern-python-cli99)
[![PyPI](https://img.shields.io/pypi/v/hypermodern-python-cli99.svg)](https://pypi.org/project/hypermodern-python-cli99/)
[![Read the Docs](https://readthedocs.org/projects/hypermodern-python-cli99/badge/)](https://hypermodern-python-cli99.readthedocs.io/)

https://github.com/cjolowicz/hypermodern-python

https://cjolowicz.github.io/posts/hypermodern-python-01-setup/

> **_NOTE:_** this package does not publish to PyPI due to the package name conflict, the badge shows the original package.

## Use Poetry to manage Black, Flake8, and the other tools as development dependencies

```
poetry add --dev \
    black \
    flake8 \
    flake8-bandit \
    flake8-black \
    flake8-bugbear \
    flake8-import-order \
    safety
```

## Use pre-commit

```
pip install --user --upgrade pre-commit
```

## Use xdoctest to run documentation exmamples

```
poetry add --dev xdoctest
```

## Create documenation with Sphinx

```
poetry add --dev sphinx
```

