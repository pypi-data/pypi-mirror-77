# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class EnterpriseUser(pulumi.CustomResource):
    max_execute_count: pulumi.Output[float]
    """
    Maximum number of inquiries on the day.
    """
    max_result_count: pulumi.Output[float]
    """
    Query the maximum number of rows on the day.
    """
    mobile: pulumi.Output[str]
    """
    The DingTalk number or mobile number of the user.
    """
    nick_name: pulumi.Output[str]
    """
    The nickname of the user.
    """
    role_names: pulumi.Output[list]
    """
    The roles that the user plays.
    """
    status: pulumi.Output[str]
    """
    The state of DMS Enterprise User. Valid values: `NORMAL`, `DISABLE`.
    """
    tid: pulumi.Output[float]
    """
    The tenant ID. 
    """
    uid: pulumi.Output[str]
    """
    The Alibaba Cloud unique ID (UID) of the user to add.
    """
    def __init__(__self__, resource_name, opts=None, max_execute_count=None, max_result_count=None, mobile=None, nick_name=None, role_names=None, status=None, tid=None, uid=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a DMS Enterprise User resource. For information about Alidms Enterprise User and how to use it, see [What is Resource Alidms Enterprise User](https://www.alibabacloud.com/help/doc-detail/98001.htm).

        > **NOTE:** Available in 1.90.0+.

        ## Example Usage



        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        example = alicloud.dms.EnterpriseUser("example",
            mobile="1591066xxxx",
            nick_name="tf-test",
            role_names=["DBA"],
            uid="uid")
        ```


        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] max_execute_count: Maximum number of inquiries on the day.
        :param pulumi.Input[float] max_result_count: Query the maximum number of rows on the day.
        :param pulumi.Input[str] mobile: The DingTalk number or mobile number of the user.
        :param pulumi.Input[str] nick_name: The nickname of the user.
        :param pulumi.Input[list] role_names: The roles that the user plays.
        :param pulumi.Input[str] status: The state of DMS Enterprise User. Valid values: `NORMAL`, `DISABLE`.
        :param pulumi.Input[float] tid: The tenant ID. 
        :param pulumi.Input[str] uid: The Alibaba Cloud unique ID (UID) of the user to add.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['max_execute_count'] = max_execute_count
            __props__['max_result_count'] = max_result_count
            __props__['mobile'] = mobile
            __props__['nick_name'] = nick_name
            __props__['role_names'] = role_names
            __props__['status'] = status
            __props__['tid'] = tid
            if uid is None:
                raise TypeError("Missing required property 'uid'")
            __props__['uid'] = uid
        super(EnterpriseUser, __self__).__init__(
            'alicloud:dms/enterpriseUser:EnterpriseUser',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, max_execute_count=None, max_result_count=None, mobile=None, nick_name=None, role_names=None, status=None, tid=None, uid=None):
        """
        Get an existing EnterpriseUser resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[float] max_execute_count: Maximum number of inquiries on the day.
        :param pulumi.Input[float] max_result_count: Query the maximum number of rows on the day.
        :param pulumi.Input[str] mobile: The DingTalk number or mobile number of the user.
        :param pulumi.Input[str] nick_name: The nickname of the user.
        :param pulumi.Input[list] role_names: The roles that the user plays.
        :param pulumi.Input[str] status: The state of DMS Enterprise User. Valid values: `NORMAL`, `DISABLE`.
        :param pulumi.Input[float] tid: The tenant ID. 
        :param pulumi.Input[str] uid: The Alibaba Cloud unique ID (UID) of the user to add.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["max_execute_count"] = max_execute_count
        __props__["max_result_count"] = max_result_count
        __props__["mobile"] = mobile
        __props__["nick_name"] = nick_name
        __props__["role_names"] = role_names
        __props__["status"] = status
        __props__["tid"] = tid
        __props__["uid"] = uid
        return EnterpriseUser(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

