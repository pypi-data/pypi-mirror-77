# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class DataCenter(pulumi.CustomResource):
    auto_renew: pulumi.Output[bool]
    """
    Auto renew of dataCenter-2,`true` or `false`. System default to `false`, valid when pay_type = Subscription.
    """
    auto_renew_period: pulumi.Output[float]
    """
    Period of dataCenter-2 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when pay_type = Subscription. Unit: month.
    """
    cluster_id: pulumi.Output[str]
    """
    Cassandra cluster id of dataCenter-2 belongs to.  
    """
    data_center_id: pulumi.Output[str]
    data_center_name: pulumi.Output[str]
    """
    Cassandra dataCenter-2 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted. 
    """
    disk_size: pulumi.Output[float]
    """
    User-defined Cassandra dataCenter one core node's storage space.Unit: GB. Value range:
    - Custom storage space; value range: [160, 2000].
    - 80-GB increments.
    """
    disk_type: pulumi.Output[str]
    """
    The disk type of Cassandra dataCenter-2. Valid values are `cloud_ssd`, `cloud_efficiency`, `local_hdd_pro`, `local_ssd_pro`, local_disk size is fixed.
    """
    enable_public: pulumi.Output[bool]
    instance_type: pulumi.Output[str]
    """
    Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
    """
    node_count: pulumi.Output[float]
    """
    The node count of Cassandra dataCenter-2, default to 2. 
    """
    pay_type: pulumi.Output[str]
    """
    The pay type of Cassandra dataCenter-2. Valid values are `Subscription`, `PayAsYouGo`. System default to `PayAsYouGo`.
    """
    period: pulumi.Output[float]
    period_unit: pulumi.Output[str]
    public_points: pulumi.Output[list]
    status: pulumi.Output[str]
    vswitch_id: pulumi.Output[str]
    """
    The vswitch_id of dataCenter-2, mast different of vswitch_id(dc-1), can not empty.
    """
    zone_id: pulumi.Output[str]
    """
    The Zone to launch the Cassandra dataCenter-2. If vswitch_id is not empty, this zone_id can be "" or consistent.
    """
    def __init__(__self__, resource_name, opts=None, auto_renew=None, auto_renew_period=None, cluster_id=None, data_center_name=None, disk_size=None, disk_type=None, enable_public=None, instance_type=None, node_count=None, pay_type=None, period=None, period_unit=None, vswitch_id=None, zone_id=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a Cassandra dataCenter resource supports replica set dataCenters only. The Cassandra provides stable, reliable, and automatic scalable database services. 
        It offers a full range of database solutions, such as disaster recovery, backup, recovery, monitoring, and alarms.
        You can see detail product introduction [here](https://www.alibabacloud.com/help/product/49055.htm).

        > **NOTE:**  Available in 1.88.0+.

        > **NOTE:**  Create a cassandra dataCenter need a clusterId,so need create a cassandra cluster first.

        > **NOTE:**  The following regions support create Vpc network Cassandra cluster.
        The official website mark  more regions. Or you can call [DescribeRegions](https://help.aliyun.com/document_detail/157540.html).

        > **NOTE:**  Create Cassandra dataCenter or change dataCenter type and storage would cost 30 minutes. Please make full preparation.



        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_renew: Auto renew of dataCenter-2,`true` or `false`. System default to `false`, valid when pay_type = Subscription.
        :param pulumi.Input[float] auto_renew_period: Period of dataCenter-2 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when pay_type = Subscription. Unit: month.
        :param pulumi.Input[str] cluster_id: Cassandra cluster id of dataCenter-2 belongs to.  
        :param pulumi.Input[str] data_center_name: Cassandra dataCenter-2 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted. 
        :param pulumi.Input[float] disk_size: User-defined Cassandra dataCenter one core node's storage space.Unit: GB. Value range:
               - Custom storage space; value range: [160, 2000].
               - 80-GB increments.
        :param pulumi.Input[str] disk_type: The disk type of Cassandra dataCenter-2. Valid values are `cloud_ssd`, `cloud_efficiency`, `local_hdd_pro`, `local_ssd_pro`, local_disk size is fixed.
        :param pulumi.Input[str] instance_type: Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
        :param pulumi.Input[float] node_count: The node count of Cassandra dataCenter-2, default to 2. 
        :param pulumi.Input[str] pay_type: The pay type of Cassandra dataCenter-2. Valid values are `Subscription`, `PayAsYouGo`. System default to `PayAsYouGo`.
        :param pulumi.Input[str] vswitch_id: The vswitch_id of dataCenter-2, mast different of vswitch_id(dc-1), can not empty.
        :param pulumi.Input[str] zone_id: The Zone to launch the Cassandra dataCenter-2. If vswitch_id is not empty, this zone_id can be "" or consistent.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['auto_renew'] = auto_renew
            __props__['auto_renew_period'] = auto_renew_period
            if cluster_id is None:
                raise TypeError("Missing required property 'cluster_id'")
            __props__['cluster_id'] = cluster_id
            __props__['data_center_name'] = data_center_name
            __props__['disk_size'] = disk_size
            __props__['disk_type'] = disk_type
            __props__['enable_public'] = enable_public
            if instance_type is None:
                raise TypeError("Missing required property 'instance_type'")
            __props__['instance_type'] = instance_type
            if node_count is None:
                raise TypeError("Missing required property 'node_count'")
            __props__['node_count'] = node_count
            if pay_type is None:
                raise TypeError("Missing required property 'pay_type'")
            __props__['pay_type'] = pay_type
            __props__['period'] = period
            __props__['period_unit'] = period_unit
            if vswitch_id is None:
                raise TypeError("Missing required property 'vswitch_id'")
            __props__['vswitch_id'] = vswitch_id
            __props__['zone_id'] = zone_id
            __props__['data_center_id'] = None
            __props__['public_points'] = None
            __props__['status'] = None
        super(DataCenter, __self__).__init__(
            'alicloud:cassandra/dataCenter:DataCenter',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, auto_renew=None, auto_renew_period=None, cluster_id=None, data_center_id=None, data_center_name=None, disk_size=None, disk_type=None, enable_public=None, instance_type=None, node_count=None, pay_type=None, period=None, period_unit=None, public_points=None, status=None, vswitch_id=None, zone_id=None):
        """
        Get an existing DataCenter resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] auto_renew: Auto renew of dataCenter-2,`true` or `false`. System default to `false`, valid when pay_type = Subscription.
        :param pulumi.Input[float] auto_renew_period: Period of dataCenter-2 auto renew, if auto renew is `true`, one of `1, 2, 3, 4, 5, 6, 7, 8, 9, 12, 24, 36, 60`, valid when pay_type = Subscription. Unit: month.
        :param pulumi.Input[str] cluster_id: Cassandra cluster id of dataCenter-2 belongs to.  
        :param pulumi.Input[str] data_center_name: Cassandra dataCenter-2 name. Length must be 2~128 characters long. Only Chinese characters, English letters, numbers, period `.`, underline `_`, or dash `-` are permitted. 
        :param pulumi.Input[float] disk_size: User-defined Cassandra dataCenter one core node's storage space.Unit: GB. Value range:
               - Custom storage space; value range: [160, 2000].
               - 80-GB increments.
        :param pulumi.Input[str] disk_type: The disk type of Cassandra dataCenter-2. Valid values are `cloud_ssd`, `cloud_efficiency`, `local_hdd_pro`, `local_ssd_pro`, local_disk size is fixed.
        :param pulumi.Input[str] instance_type: Instance specification. See [Instance specifications](https://help.aliyun.com/document_detail/157445.html). Or you can call describeInstanceType api.
        :param pulumi.Input[float] node_count: The node count of Cassandra dataCenter-2, default to 2. 
        :param pulumi.Input[str] pay_type: The pay type of Cassandra dataCenter-2. Valid values are `Subscription`, `PayAsYouGo`. System default to `PayAsYouGo`.
        :param pulumi.Input[str] vswitch_id: The vswitch_id of dataCenter-2, mast different of vswitch_id(dc-1), can not empty.
        :param pulumi.Input[str] zone_id: The Zone to launch the Cassandra dataCenter-2. If vswitch_id is not empty, this zone_id can be "" or consistent.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["auto_renew"] = auto_renew
        __props__["auto_renew_period"] = auto_renew_period
        __props__["cluster_id"] = cluster_id
        __props__["data_center_id"] = data_center_id
        __props__["data_center_name"] = data_center_name
        __props__["disk_size"] = disk_size
        __props__["disk_type"] = disk_type
        __props__["enable_public"] = enable_public
        __props__["instance_type"] = instance_type
        __props__["node_count"] = node_count
        __props__["pay_type"] = pay_type
        __props__["period"] = period
        __props__["period_unit"] = period_unit
        __props__["public_points"] = public_points
        __props__["status"] = status
        __props__["vswitch_id"] = vswitch_id
        __props__["zone_id"] = zone_id
        return DataCenter(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

