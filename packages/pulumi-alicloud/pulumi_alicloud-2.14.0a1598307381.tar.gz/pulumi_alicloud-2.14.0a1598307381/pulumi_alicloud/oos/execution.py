# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Execution(pulumi.CustomResource):
    counters: pulumi.Output[str]
    """
    The counters of OOS Execution.
    """
    create_date: pulumi.Output[str]
    """
    The time when the execution was created.
    """
    description: pulumi.Output[str]
    """
    The description of OOS Execution.
    """
    end_date: pulumi.Output[str]
    """
    The time when the execution was ended.
    """
    executed_by: pulumi.Output[str]
    """
    The user who execute the template.
    """
    is_parent: pulumi.Output[bool]
    """
    Whether to include subtasks.
    """
    loop_mode: pulumi.Output[str]
    """
    The loop mode of OOS Execution.
    """
    mode: pulumi.Output[str]
    """
    The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
    """
    outputs: pulumi.Output[str]
    """
    The outputs of OOS Execution.
    """
    parameters: pulumi.Output[str]
    """
    The parameters required by the template. Default to `{}`.
    """
    parent_execution_id: pulumi.Output[str]
    """
    The id of parent execution.
    """
    ram_role: pulumi.Output[str]
    """
    The role that executes the current template.
    """
    safety_check: pulumi.Output[str]
    """
    The mode of safety check.
    """
    start_date: pulumi.Output[str]
    """
    The time when the execution was started.
    """
    status: pulumi.Output[str]
    """
    The status of OOS Execution.
    """
    status_message: pulumi.Output[str]
    """
    The message of status.
    """
    template_id: pulumi.Output[str]
    """
    The id of template.
    """
    template_name: pulumi.Output[str]
    """
    The name of execution template.
    """
    template_version: pulumi.Output[str]
    """
    The version of execution template.
    """
    update_date: pulumi.Output[str]
    """
    The time when the execution was updated.
    """
    def __init__(__self__, resource_name, opts=None, description=None, loop_mode=None, mode=None, parameters=None, parent_execution_id=None, safety_check=None, template_name=None, template_version=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a OOS Execution resource. For information about Alicloud OOS Execution and how to use it, see [What is Resource Alicloud OOS Execution](https://www.alibabacloud.com/help/doc-detail/120771.htm).

        > **NOTE:** Available in 1.93.0+.



        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] description: The description of OOS Execution.
        :param pulumi.Input[str] loop_mode: The loop mode of OOS Execution.
        :param pulumi.Input[str] mode: The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
        :param pulumi.Input[str] parameters: The parameters required by the template. Default to `{}`.
        :param pulumi.Input[str] parent_execution_id: The id of parent execution.
        :param pulumi.Input[str] safety_check: The mode of safety check.
        :param pulumi.Input[str] template_name: The name of execution template.
        :param pulumi.Input[str] template_version: The version of execution template.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['description'] = description
            __props__['loop_mode'] = loop_mode
            __props__['mode'] = mode
            __props__['parameters'] = parameters
            __props__['parent_execution_id'] = parent_execution_id
            __props__['safety_check'] = safety_check
            if template_name is None:
                raise TypeError("Missing required property 'template_name'")
            __props__['template_name'] = template_name
            __props__['template_version'] = template_version
            __props__['counters'] = None
            __props__['create_date'] = None
            __props__['end_date'] = None
            __props__['executed_by'] = None
            __props__['is_parent'] = None
            __props__['outputs'] = None
            __props__['ram_role'] = None
            __props__['start_date'] = None
            __props__['status'] = None
            __props__['status_message'] = None
            __props__['template_id'] = None
            __props__['update_date'] = None
        super(Execution, __self__).__init__(
            'alicloud:oos/execution:Execution',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, counters=None, create_date=None, description=None, end_date=None, executed_by=None, is_parent=None, loop_mode=None, mode=None, outputs=None, parameters=None, parent_execution_id=None, ram_role=None, safety_check=None, start_date=None, status=None, status_message=None, template_id=None, template_name=None, template_version=None, update_date=None):
        """
        Get an existing Execution resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] counters: The counters of OOS Execution.
        :param pulumi.Input[str] create_date: The time when the execution was created.
        :param pulumi.Input[str] description: The description of OOS Execution.
        :param pulumi.Input[str] end_date: The time when the execution was ended.
        :param pulumi.Input[str] executed_by: The user who execute the template.
        :param pulumi.Input[bool] is_parent: Whether to include subtasks.
        :param pulumi.Input[str] loop_mode: The loop mode of OOS Execution.
        :param pulumi.Input[str] mode: The mode of OOS Execution. Valid: `Automatic`, `Debug`. Default to `Automatic`.
        :param pulumi.Input[str] outputs: The outputs of OOS Execution.
        :param pulumi.Input[str] parameters: The parameters required by the template. Default to `{}`.
        :param pulumi.Input[str] parent_execution_id: The id of parent execution.
        :param pulumi.Input[str] ram_role: The role that executes the current template.
        :param pulumi.Input[str] safety_check: The mode of safety check.
        :param pulumi.Input[str] start_date: The time when the execution was started.
        :param pulumi.Input[str] status: The status of OOS Execution.
        :param pulumi.Input[str] status_message: The message of status.
        :param pulumi.Input[str] template_id: The id of template.
        :param pulumi.Input[str] template_name: The name of execution template.
        :param pulumi.Input[str] template_version: The version of execution template.
        :param pulumi.Input[str] update_date: The time when the execution was updated.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["counters"] = counters
        __props__["create_date"] = create_date
        __props__["description"] = description
        __props__["end_date"] = end_date
        __props__["executed_by"] = executed_by
        __props__["is_parent"] = is_parent
        __props__["loop_mode"] = loop_mode
        __props__["mode"] = mode
        __props__["outputs"] = outputs
        __props__["parameters"] = parameters
        __props__["parent_execution_id"] = parent_execution_id
        __props__["ram_role"] = ram_role
        __props__["safety_check"] = safety_check
        __props__["start_date"] = start_date
        __props__["status"] = status
        __props__["status_message"] = status_message
        __props__["template_id"] = template_id
        __props__["template_name"] = template_name
        __props__["template_version"] = template_version
        __props__["update_date"] = update_date
        return Execution(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

