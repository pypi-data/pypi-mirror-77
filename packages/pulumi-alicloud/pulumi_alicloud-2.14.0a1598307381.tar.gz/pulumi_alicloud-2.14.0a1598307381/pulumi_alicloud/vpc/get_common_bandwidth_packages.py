# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class GetCommonBandwidthPackagesResult:
    """
    A collection of values returned by getCommonBandwidthPackages.
    """
    def __init__(__self__, id=None, ids=None, name_regex=None, names=None, output_file=None, packages=None, resource_group_id=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        __self__.ids = ids
        """
        (Optional) A list of Common Bandwidth Packages IDs.
        """
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        __self__.name_regex = name_regex
        if names and not isinstance(names, list):
            raise TypeError("Expected argument 'names' to be a list")
        __self__.names = names
        """
        A list of Common Bandwidth Packages names.
        """
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if packages and not isinstance(packages, list):
            raise TypeError("Expected argument 'packages' to be a list")
        __self__.packages = packages
        """
        A list of Common Bandwidth Packages. Each element contains the following attributes:
        """
        if resource_group_id and not isinstance(resource_group_id, str):
            raise TypeError("Expected argument 'resource_group_id' to be a str")
        __self__.resource_group_id = resource_group_id
        """
        The Id of resource group which the common bandwidth package belongs.
        """
class AwaitableGetCommonBandwidthPackagesResult(GetCommonBandwidthPackagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetCommonBandwidthPackagesResult(
            id=self.id,
            ids=self.ids,
            name_regex=self.name_regex,
            names=self.names,
            output_file=self.output_file,
            packages=self.packages,
            resource_group_id=self.resource_group_id)

def get_common_bandwidth_packages(ids=None,name_regex=None,output_file=None,resource_group_id=None,opts=None):
    """
    This data source provides a list of Common Bandwidth Packages owned by an Alibaba Cloud account.

    > **NOTE:** Available in 1.36.0+.

    ## Example Usage



    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    foo_common_bandwith_package = alicloud.vpc.CommonBandwithPackage("fooCommonBandwithPackage",
        bandwidth="2",
        description="tf-testAcc-CommonBandwidthPackage")
    foo_common_bandwidth_packages = foo_common_bandwith_package.id.apply(lambda id: alicloud.vpc.get_common_bandwidth_packages(ids=[id],
        name_regex="^tf-testAcc.*"))
    ```

    ## Public ip addresses Block
      
      The public ip addresses mapping supports the following:
      
      * `ip_address`   - The address of the EIP.
      * `allocation_id` - The ID of the EIP instance.


    :param list ids: A list of Common Bandwidth Packages IDs.
    :param str name_regex: A regex string to filter results by name.
    :param str resource_group_id: The Id of resource group which the common bandwidth package belongs.
    """
    __args__ = dict()


    __args__['ids'] = ids
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    __args__['resourceGroupId'] = resource_group_id
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('alicloud:vpc/getCommonBandwidthPackages:getCommonBandwidthPackages', __args__, opts=opts).value

    return AwaitableGetCommonBandwidthPackagesResult(
        id=__ret__.get('id'),
        ids=__ret__.get('ids'),
        name_regex=__ret__.get('nameRegex'),
        names=__ret__.get('names'),
        output_file=__ret__.get('outputFile'),
        packages=__ret__.get('packages'),
        resource_group_id=__ret__.get('resourceGroupId'))
