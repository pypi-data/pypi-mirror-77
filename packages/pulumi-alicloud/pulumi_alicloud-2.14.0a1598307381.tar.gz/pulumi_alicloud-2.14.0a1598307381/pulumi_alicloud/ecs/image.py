# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class Image(pulumi.CustomResource):
    architecture: pulumi.Output[str]
    """
    Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x86_64`.
    """
    description: pulumi.Output[str]
    """
    The description of the image. It must be 2 to 256 characters in length and must not start with http:// or https://. Default value: null.
    """
    disk_device_mappings: pulumi.Output[list]
    """
    Description of the system with disks and snapshots under the image.

      * `device` (`str`) - Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
      * `disk_type` (`str`) - Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
      * `size` (`float`) - Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
      * `snapshot_id` (`str`) - Specifies a snapshot that is used to create a combined custom image.
    """
    force: pulumi.Output[bool]
    """
    Indicates whether to force delete the custom image, Default is `false`. 
    - true：Force deletes the custom image, regardless of whether the image is currently being used by other instances.
    - false：Verifies that the image is not currently in use by any other instances before deleting the image.
    """
    image_name: pulumi.Output[str]
    """
    The image name. It must be 2 to 128 characters in length, and must begin with a letter or Chinese character (beginning with http:// or https:// is not allowed). It can contain digits, colons (:), underscores (_), or hyphens (-). Default value: null.
    """
    instance_id: pulumi.Output[str]
    """
    The instance ID.
    """
    name: pulumi.Output[str]
    platform: pulumi.Output[str]
    """
    Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `RedHat`, `Debian`, `CoreOS`, `Aliyun Linux`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
    """
    resource_group_id: pulumi.Output[str]
    """
    The ID of the enterprise resource group to which a custom image belongs
    """
    snapshot_id: pulumi.Output[str]
    """
    Specifies a snapshot that is used to create a combined custom image.
    """
    tags: pulumi.Output[dict]
    """
    The tag value of an image. The value of N ranges from 1 to 20.
    """
    def __init__(__self__, resource_name, opts=None, architecture=None, description=None, disk_device_mappings=None, force=None, image_name=None, instance_id=None, name=None, platform=None, resource_group_id=None, snapshot_id=None, tags=None, __props__=None, __name__=None, __opts__=None):
        """
        Creates a custom image. You can then use a custom image to create ECS instances (RunInstances) or change the system disk for an existing instance (ReplaceSystemDisk).

        > **NOTE:**  If you want to create a template from an ECS instance, you can specify the instance ID (InstanceId) to create a custom image. You must make sure that the status of the specified instance is Running or Stopped. After a successful invocation, each disk of the specified instance has a new snapshot created.

        > **NOTE:**  If you want to create a custom image based on the system disk of your ECS instance, you can specify one of the system disk snapshots (SnapshotId) to create a custom image. However, the specified snapshot cannot be created on or before July 15, 2013.

        > **NOTE:**  If you want to combine snapshots of multiple disks into an image template, you can specify DiskDeviceMapping to create a custom image.

        > **NOTE:**  Available in 1.64.0+

        ## Example Usage



        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        default = alicloud.ecs.Image("default",
            architecture="x86_64",
            description="test-image",
            image_name="test-image",
            instance_id="i-bp1g6zv0ce8oghu7k***",
            platform="CentOS",
            resource_group_id="rg-bp67acfmxazb4ph***",
            tags={
                "FinanceDept": "FinanceDeptJoshua",
            })
        ```


        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] architecture: Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x86_64`.
        :param pulumi.Input[str] description: The description of the image. It must be 2 to 256 characters in length and must not start with http:// or https://. Default value: null.
        :param pulumi.Input[list] disk_device_mappings: Description of the system with disks and snapshots under the image.
        :param pulumi.Input[bool] force: Indicates whether to force delete the custom image, Default is `false`. 
               - true：Force deletes the custom image, regardless of whether the image is currently being used by other instances.
               - false：Verifies that the image is not currently in use by any other instances before deleting the image.
        :param pulumi.Input[str] image_name: The image name. It must be 2 to 128 characters in length, and must begin with a letter or Chinese character (beginning with http:// or https:// is not allowed). It can contain digits, colons (:), underscores (_), or hyphens (-). Default value: null.
        :param pulumi.Input[str] instance_id: The instance ID.
        :param pulumi.Input[str] platform: Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `RedHat`, `Debian`, `CoreOS`, `Aliyun Linux`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
        :param pulumi.Input[str] resource_group_id: The ID of the enterprise resource group to which a custom image belongs
        :param pulumi.Input[str] snapshot_id: Specifies a snapshot that is used to create a combined custom image.
        :param pulumi.Input[dict] tags: The tag value of an image. The value of N ranges from 1 to 20.

        The **disk_device_mappings** object supports the following:

          * `device` (`pulumi.Input[str]`) - Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
          * `disk_type` (`pulumi.Input[str]`) - Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
          * `size` (`pulumi.Input[float]`) - Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
          * `snapshot_id` (`pulumi.Input[str]`) - Specifies a snapshot that is used to create a combined custom image.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['architecture'] = architecture
            __props__['description'] = description
            __props__['disk_device_mappings'] = disk_device_mappings
            __props__['force'] = force
            __props__['image_name'] = image_name
            __props__['instance_id'] = instance_id
            if name is not None:
                warnings.warn("Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.", DeprecationWarning)
                pulumi.log.warn("name is deprecated: Attribute 'name' has been deprecated from version 1.69.0. Use `image_name` instead.")
            __props__['name'] = name
            __props__['platform'] = platform
            __props__['resource_group_id'] = resource_group_id
            __props__['snapshot_id'] = snapshot_id
            __props__['tags'] = tags
        super(Image, __self__).__init__(
            'alicloud:ecs/image:Image',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, architecture=None, description=None, disk_device_mappings=None, force=None, image_name=None, instance_id=None, name=None, platform=None, resource_group_id=None, snapshot_id=None, tags=None):
        """
        Get an existing Image resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[str] architecture: Specifies the architecture of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `i386` , Default is `x86_64`.
        :param pulumi.Input[str] description: The description of the image. It must be 2 to 256 characters in length and must not start with http:// or https://. Default value: null.
        :param pulumi.Input[list] disk_device_mappings: Description of the system with disks and snapshots under the image.
        :param pulumi.Input[bool] force: Indicates whether to force delete the custom image, Default is `false`. 
               - true：Force deletes the custom image, regardless of whether the image is currently being used by other instances.
               - false：Verifies that the image is not currently in use by any other instances before deleting the image.
        :param pulumi.Input[str] image_name: The image name. It must be 2 to 128 characters in length, and must begin with a letter or Chinese character (beginning with http:// or https:// is not allowed). It can contain digits, colons (:), underscores (_), or hyphens (-). Default value: null.
        :param pulumi.Input[str] instance_id: The instance ID.
        :param pulumi.Input[str] platform: Specifies the operating system platform of the system disk after you specify a data disk snapshot as the data source of the system disk for creating an image. Valid values: `CentOS`, `Ubuntu`, `SUSE`, `OpenSUSE`, `RedHat`, `Debian`, `CoreOS`, `Aliyun Linux`, `Windows Server 2003`, `Windows Server 2008`, `Windows Server 2012`, `Windows 7`, Default is `Others Linux`, `Customized Linux`.
        :param pulumi.Input[str] resource_group_id: The ID of the enterprise resource group to which a custom image belongs
        :param pulumi.Input[str] snapshot_id: Specifies a snapshot that is used to create a combined custom image.
        :param pulumi.Input[dict] tags: The tag value of an image. The value of N ranges from 1 to 20.

        The **disk_device_mappings** object supports the following:

          * `device` (`pulumi.Input[str]`) - Specifies the name of a disk in the combined custom image. Value range: /dev/xvda to /dev/xvdz.
          * `disk_type` (`pulumi.Input[str]`) - Specifies the type of a disk in the combined custom image. If you specify this parameter, you can use a data disk snapshot as the data source of a system disk for creating an image. If it is not specified, the disk type is determined by the corresponding snapshot. Valid values: `system`, `data`,
          * `size` (`pulumi.Input[float]`) - Specifies the size of a disk in the combined custom image, in GiB. Value range: 5 to 2000.
          * `snapshot_id` (`pulumi.Input[str]`) - Specifies a snapshot that is used to create a combined custom image.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["architecture"] = architecture
        __props__["description"] = description
        __props__["disk_device_mappings"] = disk_device_mappings
        __props__["force"] = force
        __props__["image_name"] = image_name
        __props__["instance_id"] = instance_id
        __props__["name"] = name
        __props__["platform"] = platform
        __props__["resource_group_id"] = resource_group_id
        __props__["snapshot_id"] = snapshot_id
        __props__["tags"] = tags
        return Image(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

