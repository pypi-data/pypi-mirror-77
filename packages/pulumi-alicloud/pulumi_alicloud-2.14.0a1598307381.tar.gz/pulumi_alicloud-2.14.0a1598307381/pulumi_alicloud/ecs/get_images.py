# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class GetImagesResult:
    """
    A collection of values returned by getImages.
    """
    def __init__(__self__, id=None, ids=None, images=None, most_recent=None, name_regex=None, output_file=None, owners=None):
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        __self__.ids = ids
        """
        A list of image IDs.
        """
        if images and not isinstance(images, list):
            raise TypeError("Expected argument 'images' to be a list")
        __self__.images = images
        """
        A list of images. Each element contains the following attributes:
        """
        if most_recent and not isinstance(most_recent, bool):
            raise TypeError("Expected argument 'most_recent' to be a bool")
        __self__.most_recent = most_recent
        if name_regex and not isinstance(name_regex, str):
            raise TypeError("Expected argument 'name_regex' to be a str")
        __self__.name_regex = name_regex
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if owners and not isinstance(owners, str):
            raise TypeError("Expected argument 'owners' to be a str")
        __self__.owners = owners
class AwaitableGetImagesResult(GetImagesResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetImagesResult(
            id=self.id,
            ids=self.ids,
            images=self.images,
            most_recent=self.most_recent,
            name_regex=self.name_regex,
            output_file=self.output_file,
            owners=self.owners)

def get_images(most_recent=None,name_regex=None,output_file=None,owners=None,opts=None):
    """
    This data source provides available image resources. It contains user's private images, system images provided by Alibaba Cloud, 
    other public images and the ones available on the image market. 

    ## Example Usage



    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    images_ds = alicloud.ecs.get_images(name_regex="^centos_6",
        owners="system")
    pulumi.export("firstImageId", images_ds.images[0]["id"])
    ```



    :param bool most_recent: If more than one result are returned, select the most recent one.
    :param str name_regex: A regex string to filter resulting images by name. 
    :param str owners: Filter results by a specific image owner. Valid items are `system`, `self`, `others`, `marketplace`.
    """
    __args__ = dict()


    __args__['mostRecent'] = most_recent
    __args__['nameRegex'] = name_regex
    __args__['outputFile'] = output_file
    __args__['owners'] = owners
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('alicloud:ecs/getImages:getImages', __args__, opts=opts).value

    return AwaitableGetImagesResult(
        id=__ret__.get('id'),
        ids=__ret__.get('ids'),
        images=__ret__.get('images'),
        most_recent=__ret__.get('mostRecent'),
        name_regex=__ret__.get('nameRegex'),
        output_file=__ret__.get('outputFile'),
        owners=__ret__.get('owners'))
