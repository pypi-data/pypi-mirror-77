# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class GetRouteMapsResult:
    """
    A collection of values returned by getRouteMaps.
    """
    def __init__(__self__, cen_id=None, cen_region_id=None, description_regex=None, id=None, ids=None, maps=None, output_file=None, status=None, transmit_direction=None):
        if cen_id and not isinstance(cen_id, str):
            raise TypeError("Expected argument 'cen_id' to be a str")
        __self__.cen_id = cen_id
        """
        The ID of the CEN instance.
        """
        if cen_region_id and not isinstance(cen_region_id, str):
            raise TypeError("Expected argument 'cen_region_id' to be a str")
        __self__.cen_region_id = cen_region_id
        """
        The ID of the region to which the CEN instance belongs.
        """
        if description_regex and not isinstance(description_regex, str):
            raise TypeError("Expected argument 'description_regex' to be a str")
        __self__.description_regex = description_regex
        if id and not isinstance(id, str):
            raise TypeError("Expected argument 'id' to be a str")
        __self__.id = id
        """
        The provider-assigned unique ID for this managed resource.
        """
        if ids and not isinstance(ids, list):
            raise TypeError("Expected argument 'ids' to be a list")
        __self__.ids = ids
        """
        A list of CEN route map IDs.
        """
        if maps and not isinstance(maps, list):
            raise TypeError("Expected argument 'maps' to be a list")
        __self__.maps = maps
        """
        A list of CEN instances. Each element contains the following attributes:
        """
        if output_file and not isinstance(output_file, str):
            raise TypeError("Expected argument 'output_file' to be a str")
        __self__.output_file = output_file
        if status and not isinstance(status, str):
            raise TypeError("Expected argument 'status' to be a str")
        __self__.status = status
        """
        The status of the route map.
        """
        if transmit_direction and not isinstance(transmit_direction, str):
            raise TypeError("Expected argument 'transmit_direction' to be a str")
        __self__.transmit_direction = transmit_direction
        """
        The direction in which the route map is applied.
        """
class AwaitableGetRouteMapsResult(GetRouteMapsResult):
    # pylint: disable=using-constant-test
    def __await__(self):
        if False:
            yield self
        return GetRouteMapsResult(
            cen_id=self.cen_id,
            cen_region_id=self.cen_region_id,
            description_regex=self.description_regex,
            id=self.id,
            ids=self.ids,
            maps=self.maps,
            output_file=self.output_file,
            status=self.status,
            transmit_direction=self.transmit_direction)

def get_route_maps(cen_id=None,cen_region_id=None,description_regex=None,ids=None,output_file=None,status=None,transmit_direction=None,opts=None):
    """
    This data source provides CEN Route Maps available to the user.

    > **NOTE:** Available in v1.87.0+.

    ## Example Usage



    ```python
    import pulumi
    import pulumi_alicloud as alicloud

    this = alicloud.cen.get_route_maps(cen_id="cen-ihdlgo87ai********",
        cen_region_id="cn-hangzhou",
        description_regex="datasource_test",
        ids=["cenrmap-bnh97kb3mn********"],
        status="Active",
        transmit_direction="RegionIn")
    pulumi.export("firstCenRouteMapId", this.maps[0]["id"])
    ```



    :param str cen_id: The ID of the CEN instance.
    :param str cen_region_id: The ID of the region to which the CEN instance belongs.
    :param str description_regex: A regex string to filter CEN route map by description.
    :param list ids: A list of CEN route map IDs.
    :param str status: The status of the route map, including `Creating`, `Active` and `Deleting`.
    :param str transmit_direction: The direction in which the route map is applied, including `RegionIn` and `RegionOut`.
    """
    __args__ = dict()


    __args__['cenId'] = cen_id
    __args__['cenRegionId'] = cen_region_id
    __args__['descriptionRegex'] = description_regex
    __args__['ids'] = ids
    __args__['outputFile'] = output_file
    __args__['status'] = status
    __args__['transmitDirection'] = transmit_direction
    if opts is None:
        opts = pulumi.InvokeOptions()
    if opts.version is None:
        opts.version = utilities.get_version()
    __ret__ = pulumi.runtime.invoke('alicloud:cen/getRouteMaps:getRouteMaps', __args__, opts=opts).value

    return AwaitableGetRouteMapsResult(
        cen_id=__ret__.get('cenId'),
        cen_region_id=__ret__.get('cenRegionId'),
        description_regex=__ret__.get('descriptionRegex'),
        id=__ret__.get('id'),
        ids=__ret__.get('ids'),
        maps=__ret__.get('maps'),
        output_file=__ret__.get('outputFile'),
        status=__ret__.get('status'),
        transmit_direction=__ret__.get('transmitDirection'))
