# coding=utf-8
# *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
# *** Do not edit by hand unless you're certain you know what you are doing! ***

import json
import warnings
import pulumi
import pulumi.runtime
from typing import Union
from .. import utilities, tables

class LoginProfile(pulumi.CustomResource):
    mfa_bind_required: pulumi.Output[bool]
    """
    This parameter indicates whether the MFA needs to be bind when the user first logs in. Default value is `false`.
    """
    password: pulumi.Output[str]
    """
    Password of the RAM user.
    """
    password_reset_required: pulumi.Output[bool]
    """
    This parameter indicates whether the password needs to be reset when the user first logs in. Default value is `false`.
    """
    user_name: pulumi.Output[str]
    """
    Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
    """
    def __init__(__self__, resource_name, opts=None, mfa_bind_required=None, password=None, password_reset_required=None, user_name=None, __props__=None, __name__=None, __opts__=None):
        """
        Provides a RAM User Login Profile resource.


        ## Example Usage



        ```python
        import pulumi
        import pulumi_alicloud as alicloud

        # Create a RAM login profile.
        user = alicloud.ram.User("user",
            comments="yoyoyo",
            display_name="user_display_name",
            email="hello.uuu@aaa.com",
            force=True,
            mobile="86-18688888888")
        profile = alicloud.ram.LoginProfile("profile",
            password="Yourpassword1234",
            user_name=user.name)
        ```


        :param str resource_name: The name of the resource.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] mfa_bind_required: This parameter indicates whether the MFA needs to be bind when the user first logs in. Default value is `false`.
        :param pulumi.Input[str] password: Password of the RAM user.
        :param pulumi.Input[bool] password_reset_required: This parameter indicates whether the password needs to be reset when the user first logs in. Default value is `false`.
        :param pulumi.Input[str] user_name: Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
        """
        if __name__ is not None:
            warnings.warn("explicit use of __name__ is deprecated", DeprecationWarning)
            resource_name = __name__
        if __opts__ is not None:
            warnings.warn("explicit use of __opts__ is deprecated, use 'opts' instead", DeprecationWarning)
            opts = __opts__
        if opts is None:
            opts = pulumi.ResourceOptions()
        if not isinstance(opts, pulumi.ResourceOptions):
            raise TypeError('Expected resource options to be a ResourceOptions instance')
        if opts.version is None:
            opts.version = utilities.get_version()
        if opts.id is None:
            if __props__ is not None:
                raise TypeError('__props__ is only valid when passed in combination with a valid opts.id to get an existing resource')
            __props__ = dict()

            __props__['mfa_bind_required'] = mfa_bind_required
            if password is None:
                raise TypeError("Missing required property 'password'")
            __props__['password'] = password
            __props__['password_reset_required'] = password_reset_required
            if user_name is None:
                raise TypeError("Missing required property 'user_name'")
            __props__['user_name'] = user_name
        super(LoginProfile, __self__).__init__(
            'alicloud:ram/loginProfile:LoginProfile',
            resource_name,
            __props__,
            opts)

    @staticmethod
    def get(resource_name, id, opts=None, mfa_bind_required=None, password=None, password_reset_required=None, user_name=None):
        """
        Get an existing LoginProfile resource's state with the given name, id, and optional extra
        properties used to qualify the lookup.

        :param str resource_name: The unique name of the resulting resource.
        :param str id: The unique provider ID of the resource to lookup.
        :param pulumi.ResourceOptions opts: Options for the resource.
        :param pulumi.Input[bool] mfa_bind_required: This parameter indicates whether the MFA needs to be bind when the user first logs in. Default value is `false`.
        :param pulumi.Input[str] password: Password of the RAM user.
        :param pulumi.Input[bool] password_reset_required: This parameter indicates whether the password needs to be reset when the user first logs in. Default value is `false`.
        :param pulumi.Input[str] user_name: Name of the RAM user. This name can have a string of 1 to 64 characters, must contain only alphanumeric characters or hyphens, such as "-",".","_", and must not begin with a hyphen.
        """
        opts = pulumi.ResourceOptions.merge(opts, pulumi.ResourceOptions(id=id))

        __props__ = dict()

        __props__["mfa_bind_required"] = mfa_bind_required
        __props__["password"] = password
        __props__["password_reset_required"] = password_reset_required
        __props__["user_name"] = user_name
        return LoginProfile(resource_name, opts=opts, __props__=__props__)
    def translate_output_property(self, prop):
        return tables._CAMEL_TO_SNAKE_CASE_TABLE.get(prop) or prop

    def translate_input_property(self, prop):
        return tables._SNAKE_TO_CAMEL_CASE_TABLE.get(prop) or prop

